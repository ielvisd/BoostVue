"use strict";var _={isArray:e=>Array.isArray(e),isNumber:e=>"number"==typeof e,isObject:e=>e&&"object"==typeof e,isString:e=>"string"==typeof e,isUndefined:e=>void 0===e,isFunction:e=>"function"==typeof e,isNull:e=>null===e,isDate:e=>e instanceof Date,extend:(e,r)=>Object.assign(e,r),noop:()=>{},every:(e,r)=>e.every(r||(e=>e)),map:(e,r)=>Array.from(e).map(r||(e=>e)),includes:(e,r)=>e.includes(r),each:(e,r)=>e.forEach(r),clone:e=>Object.assign({},e),pick:(e,r)=>{const t={};return r.forEach((r=>{void 0!==e[r]&&(t[r]=e[r])})),t},values:e=>Object.values(e),filter:(e,r)=>e.filter(r),reduce:(e,r,t)=>e.reduce(r,t),without:(e,r)=>e.filter((e=>e!==r)),shuffle:e=>{const r=e.slice(0);for(let e=r.length-1;e>0;e--){const t=Math.floor(Math.random()*(e+1));[r[e],r[t]]=[r[t],r[e]]}return r},difference:(e,r)=>e.filter((e=>!r.includes(e))),findIndex:(e,r)=>e.findIndex(r),some:(e,r)=>e.some(r),range:e=>[...Array(e).keys()]};module.exports=_;