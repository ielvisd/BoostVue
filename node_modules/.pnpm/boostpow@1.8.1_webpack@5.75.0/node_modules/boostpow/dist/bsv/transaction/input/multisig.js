"use strict";var _=require("../../util/_"),inherits=require("inherits"),Input=require("./input"),Output=require("../output"),$=require("../../util/preconditions"),Script=require("../../script"),Signature=require("../../crypto/signature"),Sighash=require("../sighash"),TransactionSignature=require("../signature"),PublicKey=require("../../publickey"),Varint=require("../../encoding/varint");function MultiSigInput(t,i,e,u){Input.apply(this,arguments);var n=this;i=i||t.publicKeys,e=e||t.threshold,u=u||t.signatures,this.publicKeys=i.map((t=>t.toString("hex"))).sort().map((t=>new PublicKey(t))),$.checkState(Script.buildMultisigOut(this.publicKeys,e).equals(this.output.script),"Provided public keys don't match to the provided output script"),this.publicKeyIndex={},_.each(this.publicKeys,(function(t,i){n.publicKeyIndex[t.toString()]=i})),this.threshold=e,this.signatures=u?this._deserializeSignatures(u):new Array(this.publicKeys.length)}inherits(MultiSigInput,Input),MultiSigInput.prototype.toObject=function(){var t=Input.prototype.toObject.apply(this,arguments);return t.threshold=this.threshold,t.publicKeys=_.map(this.publicKeys,(function(t){return t.toString()})),t.signatures=this._serializeSignatures(),t},MultiSigInput.prototype._deserializeSignatures=function(t){return _.map(t,(function(t){if(t)return new TransactionSignature(t)}))},MultiSigInput.prototype._serializeSignatures=function(){return _.map(this.signatures,(function(t){if(t)return t.toObject()}))},MultiSigInput.prototype.getSignatures=function(t,i,e,u){$.checkState(this.output instanceof Output),u=u||Signature.SIGHASH_ALL|Signature.SIGHASH_FORKID;var n=this,r=[];return _.each(this.publicKeys,(function(s){s.toString()===i.publicKey.toString()&&r.push(new TransactionSignature({publicKey:i.publicKey,prevTxId:n.prevTxId,outputIndex:n.outputIndex,inputIndex:e,signature:Sighash.sign(t,i,u,e,n.output.script,n.output.satoshisBN),sigtype:u}))})),r},MultiSigInput.prototype.addSignature=function(t,i){return $.checkState(!this.isFullySigned(),"All needed signatures have already been added"),$.checkArgument(!_.isUndefined(this.publicKeyIndex[i.publicKey.toString()]),"Signature has no matching public key"),$.checkState(this.isValidSignature(t,i)),this.signatures[this.publicKeyIndex[i.publicKey.toString()]]=i,this._updateScript(),this},MultiSigInput.prototype._updateScript=function(){return this.setScript(Script.buildMultisigIn(this.publicKeys,this.threshold,this._createSignatures())),this},MultiSigInput.prototype._createSignatures=function(){return _.map(_.filter(this.signatures,(function(t){return!_.isUndefined(t)})),(function(t){return Buffer.concat([t.signature.toDER(),Buffer.from([255&t.sigtype])])}))},MultiSigInput.prototype.clearSignatures=function(){this.signatures=new Array(this.publicKeys.length),this._updateScript()},MultiSigInput.prototype.isFullySigned=function(){return this.countSignatures()===this.threshold},MultiSigInput.prototype.countMissingSignatures=function(){return this.threshold-this.countSignatures()},MultiSigInput.prototype.countSignatures=function(){return _.reduce(this.signatures,(function(t,i){return t+!!i}),0)},MultiSigInput.prototype.publicKeysWithoutSignature=function(){var t=this;return _.filter(this.publicKeys,(function(i){return!t.signatures[t.publicKeyIndex[i.toString()]]}))},MultiSigInput.prototype.isValidSignature=function(t,i){return i.signature.nhashtype=i.sigtype,Sighash.verify(t,i.signature,i.publicKey,i.inputIndex,this.output.script,this.output.satoshisBN)},MultiSigInput.normalizeSignatures=function(t,i,e,u,n){return n.map((function(n){var r=null;return u=u.filter((function(u){if(r)return!0;var s=new TransactionSignature({signature:Signature.fromTxFormat(u),publicKey:n,prevTxId:i.prevTxId,outputIndex:i.outputIndex,inputIndex:e,sigtype:Signature.SIGHASH_ALL});return s.signature.nhashtype=s.sigtype,!Sighash.verify(t,s.signature,s.publicKey,s.inputIndex,i.output.script)||(r=s,!1)})),r||null}))},MultiSigInput.SIGNATURE_SIZE=73,MultiSigInput.prototype._estimateSize=function(){var t=1+this.threshold*MultiSigInput.SIGNATURE_SIZE;return Input.BASE_SIZE+Varint(t).toBuffer().length+t},module.exports=MultiSigInput;