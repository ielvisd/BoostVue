"use strict";var _=require("../../util/_"),inherits=require("inherits"),Input=require("./input"),Output=require("../output"),$=require("../../util/preconditions"),Script=require("../../script"),Signature=require("../../crypto/signature"),Sighash=require("../sighash"),TransactionSignature=require("../signature"),PublicKey=require("../../publickey"),Varint=require("../../encoding/varint");function MultiSigScriptHashInput(t,i,e,u){Input.apply(this,arguments);var r=this;i=i||t.publicKeys,e=e||t.threshold,u=u||t.signatures,this.publicKeys=i.map((t=>t.toString("hex"))).sort().map((t=>new PublicKey(t))),this.redeemScript=Script.buildMultisigOut(this.publicKeys,e),$.checkState(Script.buildScriptHashOut(this.redeemScript).equals(this.output.script),"Provided public keys don't hash to the provided output"),this.publicKeyIndex={},_.each(this.publicKeys,(function(t,i){r.publicKeyIndex[t.toString()]=i})),this.threshold=e,this.signatures=u?this._deserializeSignatures(u):new Array(this.publicKeys.length)}inherits(MultiSigScriptHashInput,Input),MultiSigScriptHashInput.prototype.toObject=function(){var t=Input.prototype.toObject.apply(this,arguments);return t.threshold=this.threshold,t.publicKeys=_.map(this.publicKeys,(function(t){return t.toString()})),t.signatures=this._serializeSignatures(),t},MultiSigScriptHashInput.prototype._deserializeSignatures=function(t){return _.map(t,(function(t){if(t)return new TransactionSignature(t)}))},MultiSigScriptHashInput.prototype._serializeSignatures=function(){return _.map(this.signatures,(function(t){if(t)return t.toObject()}))},MultiSigScriptHashInput.prototype.getSignatures=function(t,i,e,u){$.checkState(this.output instanceof Output),u=u||Signature.SIGHASH_ALL|Signature.SIGHASH_FORKID;var r=this,n=[];return _.each(this.publicKeys,(function(s){s.toString()===i.publicKey.toString()&&n.push(new TransactionSignature({publicKey:i.publicKey,prevTxId:r.prevTxId,outputIndex:r.outputIndex,inputIndex:e,signature:Sighash.sign(t,i,u,e,r.redeemScript,r.output.satoshisBN),sigtype:u}))})),n},MultiSigScriptHashInput.prototype.addSignature=function(t,i){return $.checkState(!this.isFullySigned(),"All needed signatures have already been added"),$.checkArgument(!_.isUndefined(this.publicKeyIndex[i.publicKey.toString()]),"Signature has no matching public key"),$.checkState(this.isValidSignature(t,i)),this.signatures[this.publicKeyIndex[i.publicKey.toString()]]=i,this._updateScript(),this},MultiSigScriptHashInput.prototype._updateScript=function(){return this.setScript(Script.buildP2SHMultisigIn(this.publicKeys,this.threshold,this._createSignatures(),{cachedMultisig:this.redeemScript})),this},MultiSigScriptHashInput.prototype._createSignatures=function(){return _.map(_.filter(this.signatures,(function(t){return!_.isUndefined(t)})),(function(t){return Buffer.concat([t.signature.toDER(),Buffer.from([255&t.sigtype])])}))},MultiSigScriptHashInput.prototype.clearSignatures=function(){this.signatures=new Array(this.publicKeys.length),this._updateScript()},MultiSigScriptHashInput.prototype.isFullySigned=function(){return this.countSignatures()===this.threshold},MultiSigScriptHashInput.prototype.countMissingSignatures=function(){return this.threshold-this.countSignatures()},MultiSigScriptHashInput.prototype.countSignatures=function(){return _.reduce(this.signatures,(function(t,i){return t+!!i}),0)},MultiSigScriptHashInput.prototype.publicKeysWithoutSignature=function(){var t=this;return _.filter(this.publicKeys,(function(i){return!t.signatures[t.publicKeyIndex[i.toString()]]}))},MultiSigScriptHashInput.prototype.isValidSignature=function(t,i){return i.signature.nhashtype=i.sigtype,Sighash.verify(t,i.signature,i.publicKey,i.inputIndex,this.redeemScript,this.output.satoshisBN)},MultiSigScriptHashInput.SIGNATURE_SIZE=73,MultiSigScriptHashInput.PUBKEY_SIZE=34,MultiSigScriptHashInput.prototype._estimateSize=function(){var t=3+this.publicKeys.length*MultiSigScriptHashInput.PUBKEY_SIZE,i=this.threshold*MultiSigScriptHashInput.SIGNATURE_SIZE+1+(t<=75?1:t<=255?2:3)+t;return Input.BASE_SIZE+Varint(i).toBuffer().length+i},module.exports=MultiSigScriptHashInput;