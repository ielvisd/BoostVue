"use strict";var inherits=require("inherits"),$=require("../../util/preconditions"),Hash=require("../../crypto/hash"),Input=require("./input"),Output=require("../output"),Sighash=require("../sighash"),Script=require("../../script"),Signature=require("../../crypto/signature"),TransactionSignature=require("../signature");function PublicKeyHashInput(){Input.apply(this,arguments)}inherits(PublicKeyHashInput,Input),PublicKeyHashInput.prototype.getSignatures=function(t,i,e,u,r){return $.checkState(this.output instanceof Output),r=r||Hash.sha256ripemd160(i.publicKey.toBuffer()),u=u||Signature.SIGHASH_ALL|Signature.SIGHASH_FORKID,r.equals(this.output.script.getPublicKeyHash())?[new TransactionSignature({publicKey:i.publicKey,prevTxId:this.prevTxId,outputIndex:this.outputIndex,inputIndex:e,signature:Sighash.sign(t,i,u,e,this.output.script,this.output.satoshisBN),sigtype:u})]:[]},PublicKeyHashInput.prototype.addSignature=function(t,i){return $.checkState(this.isValidSignature(t,i),"Signature is invalid"),this.setScript(Script.buildPublicKeyHashIn(i.publicKey,i.signature.toDER(),i.sigtype)),this},PublicKeyHashInput.prototype.clearSignatures=function(){return this.setScript(Script.empty()),this},PublicKeyHashInput.prototype.isFullySigned=function(){return this.script.isPublicKeyHashIn()},PublicKeyHashInput.SCRIPT_MAX_SIZE=108,PublicKeyHashInput.prototype._estimateSize=function(){return Input.BASE_SIZE+PublicKeyHashInput.SCRIPT_MAX_SIZE},module.exports=PublicKeyHashInput;