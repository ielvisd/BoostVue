"use strict";var crypto=require("crypto"),$=require("../util/preconditions"),Hash=module.exports;Hash.sha1=function(e){return $.checkArgument(Buffer.isBuffer(e)),crypto.createHash("sha1").update(e).digest()},Hash.sha1.blocksize=512,Hash.sha256=function(e){return $.checkArgument(Buffer.isBuffer(e)),crypto.createHash("sha256").update(e).digest()},Hash.sha256.blocksize=512,Hash.sha256sha256=function(e){return $.checkArgument(Buffer.isBuffer(e)),Hash.sha256(Hash.sha256(e))},Hash.ripemd160=function(e){return $.checkArgument(Buffer.isBuffer(e)),crypto.createHash("ripemd160").update(e).digest()},Hash.sha256ripemd160=function(e){return $.checkArgument(Buffer.isBuffer(e)),Hash.ripemd160(Hash.sha256(e))},Hash.sha512=function(e){return $.checkArgument(Buffer.isBuffer(e)),crypto.createHash("sha512").update(e).digest()},Hash.sha512.blocksize=1024,Hash.hmac=function(e,r,a){$.checkArgument(Buffer.isBuffer(r)),$.checkArgument(Buffer.isBuffer(a)),$.checkArgument(e.blocksize);var s=e.blocksize/8;if(a.length>s)a=e(a);else if(a<s){var f=Buffer.alloc(s);f.fill(0),a.copy(f),a=f}var c=Buffer.alloc(s);c.fill(92);var h=Buffer.alloc(s);h.fill(54);for(var u=Buffer.alloc(s),t=Buffer.alloc(s),i=0;i<s;i++)u[i]=c[i]^a[i],t[i]=h[i]^a[i];return e(Buffer.concat([u,e(Buffer.concat([t,r]))]))},Hash.sha256hmac=function(e,r){return Hash.hmac(Hash.sha256,e,r)},Hash.sha512hmac=function(e,r){return Hash.hmac(Hash.sha512,e,r)};