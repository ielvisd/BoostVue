"use strict";var hash=require("hash.js"),$=require("../util/preconditions"),Hash=module.exports;Hash.sha1=function(e){return $.checkArgument(Buffer.isBuffer(e)),Buffer.from(hash.sha1().update(e).digest("hex"),"hex")},Hash.sha1.blocksize=512,Hash.sha256=function(e){return $.checkArgument(Buffer.isBuffer(e)),Buffer.from(hash.sha256().update(e).digest("hex"),"hex")},Hash.sha256.blocksize=512,Hash.sha256sha256=function(e){return $.checkArgument(Buffer.isBuffer(e)),Hash.sha256(Hash.sha256(e))},Hash.ripemd160=function(e){return $.checkArgument(Buffer.isBuffer(e)),Buffer.from(hash.ripemd160().update(e).digest("hex"),"hex")},Hash.sha256ripemd160=function(e){return $.checkArgument(Buffer.isBuffer(e)),Hash.ripemd160(Hash.sha256(e))},Hash.sha512=function(e){return $.checkArgument(Buffer.isBuffer(e)),Buffer.from(hash.sha512().update(e).digest("hex"),"hex")},Hash.sha512.blocksize=1024,Hash.hmac=function(e,r,h){$.checkArgument(Buffer.isBuffer(r)),$.checkArgument(Buffer.isBuffer(h)),$.checkArgument(e.blocksize);var f=e.blocksize/8;if(h.length>f)h=e(h);else if(h<f){var s=Buffer.alloc(f);s.fill(0),h.copy(s),h=s}var a=Buffer.alloc(f);a.fill(92);var u=Buffer.alloc(f);u.fill(54);for(var c=Buffer.alloc(f),t=Buffer.alloc(f),i=0;i<f;i++)c[i]=a[i]^h[i],t[i]=u[i]^h[i];return e(Buffer.concat([c,e(Buffer.concat([t,r]))]))},Hash.sha256hmac=function(e,r){return Hash.hmac(Hash.sha256,e,r)},Hash.sha512hmac=function(e,r){return Hash.hmac(Hash.sha512,e,r)};