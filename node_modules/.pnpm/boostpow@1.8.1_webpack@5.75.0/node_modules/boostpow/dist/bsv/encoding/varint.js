"use strict";var BufferWriter=require("./bufferwriter"),BufferReader=require("./bufferreader"),BN=require("../crypto/bn"),Varint=function r(t){if(!(this instanceof r))return new r(t);if(Buffer.isBuffer(t))this.buf=t;else if("number"==typeof t){var e=t;this.fromNumber(e)}else if(t instanceof BN){var i=t;this.fromBN(i)}else if(t){var f=t;this.set(f)}};Varint.prototype.set=function(r){return this.buf=r.buf||this.buf,this},Varint.prototype.fromString=function(r){return this.set({buf:Buffer.from(r,"hex")}),this},Varint.prototype.toString=function(){return this.buf.toString("hex")},Varint.prototype.fromBuffer=function(r){return this.buf=r,this},Varint.prototype.fromBufferReader=function(r){return this.buf=r.readVarintBuf(),this},Varint.prototype.fromBN=function(r){return this.buf=BufferWriter().writeVarintBN(r).concat(),this},Varint.prototype.fromNumber=function(r){return this.buf=BufferWriter().writeVarintNum(r).concat(),this},Varint.prototype.toBuffer=function(){return this.buf},Varint.prototype.toBN=function(){return BufferReader(this.buf).readVarintBN()},Varint.prototype.toNumber=function(){return BufferReader(this.buf).readVarintNum()},module.exports=Varint;