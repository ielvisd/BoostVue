"use strict";var _=require("../util/_"),Base58=require("./base58"),buffer=require("buffer"),sha256sha256=require("../crypto/hash").sha256sha256,Base58Check=function e(r){if(!(this instanceof e))return new e(r);if(Buffer.isBuffer(r)){var t=r;this.fromBuffer(t)}else if("string"==typeof r){var f=r;this.fromString(f)}};Base58Check.prototype.set=function(e){return this.buf=e.buf||this.buf||void 0,this},Base58Check.validChecksum=function(e,r){return _.isString(e)&&(e=buffer.Buffer.from(Base58.decode(e))),_.isString(r)&&(r=buffer.Buffer.from(Base58.decode(r))),r||(r=e.slice(-4),e=e.slice(0,-4)),Base58Check.checksum(e).toString("hex")===r.toString("hex")},Base58Check.decode=function(e){if("string"!=typeof e)throw new Error("Input must be a string");var r=Buffer.from(Base58.decode(e));if(r.length<4)throw new Error("Input string too short");var t=r.slice(0,-4),f=r.slice(-4),s=sha256sha256(t).slice(0,4);if(f.toString("hex")!==s.toString("hex"))throw new Error("Checksum mismatch");return t},Base58Check.checksum=function(e){return sha256sha256(e).slice(0,4)},Base58Check.encode=function(e){if(!Buffer.isBuffer(e))throw new Error("Input must be a buffer");var r=Buffer.alloc(e.length+4),t=Base58Check.checksum(e);return e.copy(r),t.copy(r,e.length),Base58.encode(r)},Base58Check.prototype.fromBuffer=function(e){return this.buf=e,this},Base58Check.fromBuffer=function(e){return(new Base58Check).fromBuffer(e)},Base58Check.fromHex=function(e){return Base58Check.fromBuffer(Buffer.from(e,"hex"))},Base58Check.prototype.fromString=function(e){var r=Base58Check.decode(e);return this.buf=r,this},Base58Check.fromString=function(e){var r=Base58Check.decode(e);return new Base58(r)},Base58Check.prototype.toBuffer=function(){return this.buf},Base58Check.prototype.toHex=function(){return this.toBuffer().toString("hex")},Base58Check.prototype.toString=function(){return Base58Check.encode(this.buf)},module.exports=Base58Check;