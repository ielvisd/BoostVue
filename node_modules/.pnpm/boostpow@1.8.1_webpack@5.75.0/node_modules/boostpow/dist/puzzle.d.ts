/// <reference types="node" />
import * as bsv from './bsv';
import * as work from './work/proof';
import { Output } from './output';
import { Redeem } from './redeem';
import { Digest20 } from './fields/digest20';
import { Bytes } from './fields/bytes';
import * as tx_build from './transaction';
export declare class Puzzle {
    output: Output;
    key: bsv.PrivateKey;
    pubkey: Bytes;
    _address: Digest20 | undefined;
    constructor(output: Output, k: bsv.PrivateKey | string);
    get address(): Digest20;
    get workPuzzle(): work.Puzzle;
    redeem(solution: work.Solution, incomplete_transaction: Buffer | bsv.Transaction | tx_build.incomplete_transaction, input_index: number, sigtype?: number, flags?: number): Redeem;
    expectedRedeemScriptSize(): number;
    createRedeemTransaction(solution: work.Solution, receiveAddress: string, sats_per_byte: number, op_return?: string[]): Buffer;
}
