"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Output = void 0;
const job_1 = require("./job");
const digest32_1 = require("./fields/digest32");
// the Job class may represent a complete output in the blockchain but
// it may just be a script without other parameters. Output definitely has
// the satoshi value and outpoint set, which are both necessary for actually
// redeeming a Boost output.
class Output {
    constructor(job, value, txid, vout) {
        this.script = job;
        if (value !== undefined)
            this._value = value;
        else if (job.value === undefined)
            throw "invalid output: missing parameter value";
        if (txid !== undefined)
            this._txid = txid;
        else if (job.txid === undefined)
            throw "invalid output: missing parameter txid";
        if (vout !== undefined)
            this._vout = vout;
        else if (job.vout === undefined)
            throw "invalid output: missing parameter vout";
    }
    static fromTransaction(tx, vout) {
        let j = job_1.Job.fromTransaction(tx, vout);
        if (j)
            return new Output(j);
    }
    get value() {
        if (this.script.value)
            return this.script.value;
        return this._value;
    }
    get txid() {
        if (this.script.txid)
            return digest32_1.Digest32.fromHex(this.script.txid);
        return this._txid;
    }
    get vout() {
        if (this.script.vout)
            return this.script.vout;
        return this._vout;
    }
}
exports.Output = Output;
