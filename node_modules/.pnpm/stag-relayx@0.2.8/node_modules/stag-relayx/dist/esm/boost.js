var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import axios from 'axios';
import { Script } from '@runonbitcoin/nimble';
export default function (relayone) {
    function buy(buyBoost, options = { outputs: [] }) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const { content, difficulty, value, tag } = buyBoost;
            var url = `https://pow.co/api/v1/boostpow/${content}/new?difficulty=${difficulty}`;
            if (tag) {
                url = `${url}&tag=${tag}`;
            }
            const { data } = yield axios.get(url);
            const paymentRequest = data;
            const script = Script.fromHex(paymentRequest.outputs[0].script);
            const send = {
                opReturn: [
                    'onchain',
                    '18pPQigu7j69ioDcUG9dACE1iAN9nCfowr',
                    'job',
                    JSON.stringify({
                        index: 0
                    })
                ],
                amount: value / 100000000,
                to: script.toASM(),
                currency: 'BSV'
            };
            console.log('stag.relayx.send', send);
            (_a = options.outputs) === null || _a === void 0 ? void 0 : _a.push(send);
            const sendResult = yield relayone.send({
                outputs: options.outputs
            });
            const { data: { job } } = yield axios.get(`https://pow.co/api/v1/boost/jobs/${sendResult.txid}`);
            const result = {
                txid: sendResult.txid,
                txhex: sendResult.rawTx,
                job
            };
            console.log('stag.relayx.send.result', result);
            return result;
        });
    }
    function fetch({ txid }) {
        return __awaiter(this, void 0, void 0, function* () {
            const { data: { job } } = yield axios.get(`https://pow.co/api/v1/boost/jobs/${txid}`);
            return job;
        });
    }
    return {
        buy,
        fetch
    };
}
