interface NewMessage {
    app: string;
    type: string;
    content: any;
    nonce?: string;
}
interface SocialMessage {
    app: string;
    content: string;
    author?: string;
    contentType?: string;
}
interface BlockchainMessage extends NewMessage {
    txid: string;
    vout: number;
    script: string;
    author?: string;
}
export declare const authorIdentityPrefix = "15PciHG22SNLQJXMoSUaWVi7WSqc7hCfva";
export declare class Actor {
    relayone: any;
    constructor({ relayone }: {
        relayone: any;
    });
    get identity(): string;
    publishOpReturn(opReturn: string[]): Promise<any>;
    publishMessage(newMessage: NewMessage, sign?: boolean): Promise<BlockchainMessage>;
    socialMessage(newMessage: SocialMessage): Promise<BlockchainMessage>;
}
export {};
