{"version":3,"sources":["webpack://bsv/./lib/bn.js","webpack://bsv/./lib/br.js","webpack://bsv/./lib/bw.js","webpack://bsv/./lib/struct.js","webpack://bsv/./lib/base-58.js","webpack://bsv/./lib/cmp.js","webpack://bsv/./lib/workers-result.js","webpack://bsv/./lib/workers.js","webpack://bsv/./lib/hash.js","webpack://bsv/./lib/base-58-check.js","webpack://bsv/./lib/config.js","webpack://bsv/./lib/constants.js","webpack://bsv/./lib/op-code.js","webpack://bsv/./lib/point.js","webpack://bsv/./lib/pub-key.js","webpack://bsv/./lib/random.js","webpack://bsv/./lib/priv-key.js","webpack://bsv/./lib/sig.js","webpack://bsv/./lib/script.js","webpack://bsv/./lib/address.js","webpack://bsv/./lib/bip-32.js","webpack://bsv/./lib/bip-39-en-wordlist.js","webpack://bsv/./lib/bip-39.js","webpack://bsv/./lib/bip-39-jp-wordlist.js","webpack://bsv/./lib/key-pair.js","webpack://bsv/./lib/ecdsa.js","webpack://bsv/./lib/bsm.js","webpack://bsv/./lib/block-header.js","webpack://bsv/./lib/merkle.js","webpack://bsv/./lib/hash-cache.js","webpack://bsv/./lib/var-int.js","webpack://bsv/./lib/tx-in.js","webpack://bsv/./lib/tx-out.js","webpack://bsv/./lib/tx.js","webpack://bsv/./lib/block.js","webpack://bsv/./lib/interp.js","webpack://bsv/./lib/sig-operations.js","webpack://bsv/./lib/tx-out-map.js","webpack://bsv/./lib/tx-builder.js","webpack://bsv/./lib/tx-verifier.js","webpack://bsv/./lib/aes.js","webpack://bsv/./lib/cbc.js","webpack://bsv/./lib/aescbc.js","webpack://bsv/./lib/ach.js","webpack://bsv/./lib/ecies.js","webpack://bsv/./entry.js","webpack://bsv/./node_modules/aes/lib/aes.js","webpack://bsv/./node_modules/base-x/src/index.js","webpack://bsv/./node_modules/bitcoin-elliptic/lib/elliptic.js","webpack://bsv/./node_modules/bitcoin-elliptic/lib/elliptic/curve/base.js","webpack://bsv/./node_modules/bitcoin-elliptic/lib/elliptic/curve/index.js","webpack://bsv/./node_modules/bitcoin-elliptic/lib/elliptic/curve/short.js","webpack://bsv/./node_modules/bitcoin-elliptic/lib/elliptic/curves.js","webpack://bsv/./node_modules/bitcoin-elliptic/lib/elliptic/ec/index.js","webpack://bsv/./node_modules/bitcoin-elliptic/lib/elliptic/ec/key.js","webpack://bsv/./node_modules/bitcoin-elliptic/lib/elliptic/ec/signature.js","webpack://bsv/./node_modules/bitcoin-elliptic/lib/elliptic/precomputed/secp256k1.js","webpack://bsv/./node_modules/bitcoin-elliptic/lib/elliptic/utils.js","webpack://bsv/./node_modules/bn.js/lib/bn.js","webpack://bsv/./node_modules/brorand/index.js","webpack://bsv/./node_modules/bs58/index.js","webpack://bsv/./node_modules/create-hmac/index.js","webpack://bsv/./node_modules/hash.js/lib/hash.js","webpack://bsv/./node_modules/hash.js/lib/hash/common.js","webpack://bsv/./node_modules/hash.js/lib/hash/hmac.js","webpack://bsv/./node_modules/hash.js/lib/hash/ripemd.js","webpack://bsv/./node_modules/hash.js/lib/hash/sha.js","webpack://bsv/./node_modules/hash.js/lib/hash/sha/1.js","webpack://bsv/./node_modules/hash.js/lib/hash/sha/224.js","webpack://bsv/./node_modules/hash.js/lib/hash/sha/256.js","webpack://bsv/./node_modules/hash.js/lib/hash/sha/384.js","webpack://bsv/./node_modules/hash.js/lib/hash/sha/512.js","webpack://bsv/./node_modules/hash.js/lib/hash/sha/common.js","webpack://bsv/./node_modules/hash.js/lib/hash/utils.js","webpack://bsv/./node_modules/hmac-drbg/lib/hmac-drbg.js","webpack://bsv/./node_modules/inherits/inherits.js","webpack://bsv/./node_modules/inherits/inherits_browser.js","webpack://bsv/./node_modules/is-hex/is-hex.js","webpack://bsv/./node_modules/minimalistic-assert/index.js","webpack://bsv/./node_modules/minimalistic-crypto-utils/lib/utils.js","webpack://bsv/./node_modules/pbkdf2/index.js","webpack://bsv/./node_modules/pbkdf2/lib/async.js","webpack://bsv/./node_modules/pbkdf2/lib/default-encoding.js","webpack://bsv/./node_modules/pbkdf2/lib/precondition.js","webpack://bsv/./node_modules/pbkdf2/lib/sync.js","webpack://bsv/./node_modules/pbkdf2/lib/to-buffer.js","webpack://bsv/./node_modules/randombytes/index.js","webpack://bsv/./node_modules/safe-buffer/index.js","webpack://bsv/external \"buffer\"","webpack://bsv/external \"crypto\"","webpack://bsv/external \"util\"","webpack://bsv/webpack/bootstrap","webpack://bsv/webpack/runtime/compat get default export","webpack://bsv/webpack/runtime/define property getters","webpack://bsv/webpack/runtime/hasOwnProperty shorthand","webpack://bsv/webpack/runtime/make namespace object","webpack://bsv/webpack/runtime/node module decorator","webpack://bsv/webpack/startup"],"names":["Bn","n","base","rest","this","reverseBuf","buf","buf2","Buffer","alloc","length","i","decorate","name","prototype","b","toString","Object","keys","forEach","key","create","constructor","fromHex","hex","opts","fromBuffer","from","toHex","toBuffer","toJSON","fromJSON","str","copy","fromNumber","toNumber","parseInt","fromString","endian","size","undefined","natlen","slice","rbuf","longzero","compare","toFastBuffer","fromFastBuffer","fromSm","neg","toSm","cmp","concat","fromBits","bits","strict","writeUInt32BE","readInt32BE","Error","nsize","nword","writeInt32BE","fill","sub","toBits","lt","readUInt32BE","blank","fromScriptNumBuffer","fRequireMinimal","nMaxNumSize","toScriptNumBuffer","_neg","add","bn","_bn","mul","mod","umod","invm","div","ushln","ushrn","eq","neq","gt","geq","leq","Br","fromObject","obj","pos","len","val","readUInt8","readInt8","readUInt16BE","readInt16BE","readUInt16LE","readInt16LE","readUInt32LE","readInt32LE","readReverse","first","readUInt64LEBn","Math","pow","read","Bw","bufs","push","writeUInt8","write","writeInt8","writeUInt16BE","writeInt16BE","writeUInt16LE","writeInt16LE","writeUInt32LE","writeInt32LE","writeReverse","varIntBufNum","varIntBufBn","floor","bw","writeUInt64LEBn","Struct","br","fromBr","asyncFromBr","startbuf","gotlen","remainderlen","overlen","remainderbuf","isBuffer","asyncFromBuffer","toBw","asyncToBw","then","asyncFromHex","fromFastHex","asyncToBuffer","asyncFromString","asyncToHex","json","asyncFromJSON","Array","isArray","arr","JSON","stringify","Map","cloneByJSON","Base58","super","decode","encode","buf1","d","WorkersResult","resbuf","isError","id","result","fromResult","error","message","writeVarIntNum","Number","resbuflen","readVarIntNum","Boolean","globalWorkers","Workers","nativeWorkers","lastid","incompconsteRes","promisemap","methodname","args","asyncObjectMethod","classObj","asyncClassMethod","process","browser","Hash","sha1","hash","Sha1","update","digest","blockSize","asyncSha1","async","sha256","Sha256","asyncSha256","sha256Sha256","e","asyncSha256Sha256","ripemd160","Ripemd160","asyncRipemd160","sha256Ripemd160","asyncSha256Ripemd160","sha512","Sha512","asyncSha512","hmac","hashFStr","data","hashf","oKeyPad","iKeyPad","sha1Hmac","asyncSha1Hmac","bitsize","sha256Hmac","asyncSha256Hmac","sha512Hmac","asyncSha512Hmac","Base58Check","s","csum","hash4","checkedBuf","Config","values","keyDefined","getValue","config","variables","value","defaultValue","addValue","env","NETWORK","build","Constants","MaxSize","Port","Address","pubKeyHash","payToScriptHash","Bip32","pubKey","privKey","Block","maxNBits","magicNum","Msg","versionBytesNum","PrivKey","versionByteNum","TxBuilder","dust","feePerKbNum","timeout","Testnet","assign","Mainnet","Regtest","STN","get","Default","getConstants","map","OP_FALSE","OP_0","OP_PUSHDATA1","OP_PUSHDATA2","OP_PUSHDATA4","OP_1NEGATE","OP_RESERVED","OP_TRUE","OP_1","OP_2","OP_3","OP_4","OP_5","OP_6","OP_7","OP_8","OP_9","OP_10","OP_11","OP_12","OP_13","OP_14","OP_15","OP_16","OP_NOP","OP_VER","OP_IF","OP_NOTIF","OP_VERIF","OP_VERNOTIF","OP_ELSE","OP_ENDIF","OP_VERIFY","OP_RETURN","OP_TOALTSTACK","OP_FROMALTSTACK","OP_2DROP","OP_2DUP","OP_3DUP","OP_2OVER","OP_2ROT","OP_2SWAP","OP_IFDUP","OP_DEPTH","OP_DROP","OP_DUP","OP_NIP","OP_OVER","OP_PICK","OP_ROLL","OP_ROT","OP_SWAP","OP_TUCK","OP_CAT","OP_SUBSTR","OP_SPLIT","OP_LEFT","OP_NUM2BIN","OP_RIGHT","OP_BIN2NUM","OP_SIZE","OP_INVERT","OP_AND","OP_OR","OP_XOR","OP_EQUAL","OP_EQUALVERIFY","OP_RESERVED1","OP_RESERVED2","OP_1ADD","OP_1SUB","OP_2MUL","OP_2DIV","OP_NEGATE","OP_ABS","OP_NOT","OP_0NOTEQUAL","OP_ADD","OP_SUB","OP_MUL","OP_DIV","OP_MOD","OP_LSHIFT","OP_RSHIFT","OP_BOOLAND","OP_BOOLOR","OP_NUMEQUAL","OP_NUMEQUALVERIFY","OP_NUMNOTEQUAL","OP_LESSTHAN","OP_GREATERTHAN","OP_LESSTHANOREQUAL","OP_GREATERTHANOREQUAL","OP_MIN","OP_MAX","OP_WITHIN","OP_RIPEMD160","OP_SHA1","OP_SHA256","OP_HASH160","OP_HASH256","OP_CODESEPARATOR","OP_CHECKSIG","OP_CHECKSIGVERIFY","OP_CHECKMULTISIG","OP_CHECKMULTISIGVERIFY","OP_NOP1","OP_NOP2","OP_CHECKLOCKTIMEVERIFY","OP_NOP3","OP_CHECKSEQUENCEVERIFY","OP_NOP4","OP_NOP5","OP_NOP6","OP_NOP7","OP_NOP8","OP_NOP9","OP_NOP10","OP_SMALLDATA","OP_SMALLINTEGER","OP_PUBKEYS","OP_PUBKEYHASH","OP_PUBKEY","OP_INVALIDOPCODE","OpCode","num","opCodeStr","hasOwnProperty","call","ec","_Point","curve","point","Point","x","y","isRed","isOdd","_point","pointFromX","copyFrom","bind","p","getN","bn1","bn2","mulAdd","_x","getX","_y","getY","fromX","parse","_g","g","toArray","PubKey","compressed","toFastHex","getG","fromPrivKey","workersResult","asyncFromPrivKey","fromDer","xbuf","ybuf","odd","toDer","prefix","isInfinity","validate","Random","getRandomBuffer","constants","privBuf","condition","fromRandom","fromBn","fromWif","toWif","Sig","r","nHashType","recovery","fromCompact","fromTxFormat","toTxFormat","toCompact","rsbuf","fromRS","b2","b3","parseDer","derbuf","header","buflength","rheader","rlength","rneg","sheader","slength","sbuf","sneg","nLEnR","nLEnS","R","S","SIGHASH_ALL","SIGHASH_SINGLE","b1","rnbuf","snbuf","SIGHASH_NONE","SIGHASH_FORKID","SIGHASH_ANYONECANPAY","Script","chunks","eof","opCodeNum","err","chunk","tokens","split","token","substr","tstr","cbuf","tbuf","writeBuffer","isNaN","writeBn","fromBitcoindString","opCode","fromAsmString","_chunkToString","type","numstr","dataBuf","writeOpCode","fromOpReturnData","fromSafeData","dataBufs","fromSafeDataArray","isSafeDataOut","isOpReturn","hashBuf","fromPubKeyHash","pubKeys","sort","pubKey1","pubKey2","max","m","sortPubKeys","fromPubKeys","startsWithOpFalse","andThenReturns","filter","isPushOnly","every","remaining","IsTxDer","script","splice","writeScript","writeString","number","writeNumber","fromPubKeyHashBuf","fromPubKey","asyncFromPubKey","randomPrivKey","addrstr","address","isValid","pubKeyHashBuf","repeat","fromTxInScript","fromTxOutScript","versionByteBuf","depth","parentFingerPrint","childIndex","chainCode","bytes","fromSeed","asyncFromSeed","keyBytes","isPrivate","isPublic","path","bip32","c","replace","usePrivate","deriveChild","ib","ret","il","ir","k","ilG","Kpar","Ki","newpub","pubKeyhash","wordList","space","Bip39","mnemonic","seed","wordlist","Wordlist","mnemoniclen","seedlen","entropy2Mnemonic","mnemonic2Seed","bip39","asyncFromRandom","fromEntropy","asyncFromEntropy","passphrase","bin","hashbits","wi","words","ind","indexOf","cs","hashBits","nonhashBits","expectedHashBits","check","normalize","mbuf","pbuf","pbkdf2","pbkdf2Sync","KeyPair","buflen1","buflen2","privKeybuf","pubKeybuf","keyPair","Ecdsa","sig","verified","Qprime","sig2PubKey","calcrecovery","N","badrs","v","T","isYOdd","isSecondKey","G","errm","eNeg","rInv","Q","ecdsa","asyncSig2PubKey","enforceLowS","hasLowS","sinv","u1","u2","deterministicK","randomK","sign","verifyStr","asyncSign","verify","asyncVerify","Bsm","messageBuf","magicBytes","sigstr","sigbuf","magicHash","BlockHeader","prevBlockHashBuf","merkleRootBuf","time","nonce","Merkle","merkle1","merkle2","hashBuf1","hashBuf2","log","log2","isInteger","lastval","ceil","bufs1","bufs2","fromBufferArrays","fromBuffers","bufs11","bufs12","bufs21","bufs22","leavesNum","HashCache","prevoutsHashBuf","sequenceHashBuf","outputsHashBuf","VarInt","readVarIntBuf","writeVarIntBn","readVarIntBn","TxIn","txHashBuf","txOutNum","scriptVi","nSequence","setScript","fromProperties","txOut","isPubKeyHashOut","LOCKTIME_VERIFY_SEQUENCE","SEQUENCE_FINAL","SEQUENCE_LOCKTIME_DISABLE_FLAG","SEQUENCE_LOCKTIME_TYPE_FLAG","SEQUENCE_LOCKTIME_MASK","SEQUENCE_LOCKTIME_GRANULARITY","TxOut","valueBn","Tx","txInsVi","txIns","txOutsVi","txOuts","nLockTime","txIn","txInsNum","txOutsNum","nIn","subScript","flags","hashCache","sighashPreimage","SCRIPT_ENABLE_SIGHASH_FORKID","hashPrevouts","hashSequence","hashOutputs","txcopy","cloneByBuffer","removeCodeseparators","sighash","hasNullInput","second","MAX_MONEY","blockHeader","txsVi","txs","tx","txsNum","txsbufs","blockBuf","Symbol","iterator","MAX_BLOCK_SIZE","Interp","stack","altStack","pc","pBeginCodeHash","nOpCount","ifStack","errStr","defaultFlags","fromJSONNoTx","jsonNoTxBufLEn","jsonNoTxBuf","txbuflen","txbuf","toJSONNoTx","flagstr","SCRIPT_VERIFY_NONE","SCRIPT_VERIFY_P2SH","SCRIPT_VERIFY_STRICTENC","SCRIPT_VERIFY_DERSIG","SCRIPT_VERIFY_LOW_S","SCRIPT_VERIFY_NULLDUMMY","SCRIPT_VERIFY_SIGPUSHONLY","SCRIPT_VERIFY_MINIMALDATA","SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS","SCRIPT_VERIFY_CLEANSTACK","SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY","SCRIPT_VERIFY_CHECKSEQUENCEVERIFY","hasDefinedHashType","isCompressedOrUncompressed","LOCKTIME_THRESHOLD","txToSequence","nLockTimeMask","txToSequenceMasked","nSequenceMasked","fSuccess","step","fExec","MAX_SCRIPT_ELEMENT_SIZE","checkMinimalPush","false","nLockTimebuf","checkLockTime","nSequencebuf","checkSequence","fValue","pop","castToBool","buf3","spliced","x1","x2","x3","fEqual","true","bn3","bufHash","bufSig","bufPubKey","findAndDelete","checkSigEncoding","checkPubKeyEncoding","nKeysCount","ikey","nSigsCount","isig","fOk","vch1","vch2","position","n1","n2","scriptSig","scriptPubKey","results","success","stackCopy","eval","initialize","isScriptHashOut","tmp","pubKeySerialized","scriptPubKey2","scriptStr","getDebugObject","SigOperations","label","nScriptChunk","addressStr","set","setMany","TxOutMap","txhashhex","index","uTxOutMap","sigOperations","changeScript","changeAmountBn","feeAmountBn","sigsPerInput","dustChangeToFees","changeAddress","toTxOutScript","addOne","fromPubKeyHashTxOut","addSigOperation","addr","outputToScript","outAmountBn","isNonSpendable","addTxOut","extraInputsNum","inAmountBn","addTxIn","scriptSize","round","extraFeeAmount","estimateSize","useAllInputs","minFeeAmountBn","buildOutputs","changeTxOut","buildInputs","includes","estimateFee","present","isPubKeyHashIn","getSig","fillSig","asyncGetSig","keyPairs","addressStrMap","signTxIn","TxVerifier","txOutMap","interp","checkStr","asyncVerifyStr","valueoutbn","txInmap","inputid","isCoinbase","verifyNIn","asyncVerifyNIn","console","interpFailure","Aes","encrypt","keyBuf","buf2Words","enc","words2Buf","decrypt","encBuf","Cbc","buf2BlocksBuf","bytesize","blockBufs","pkcs7Pad","blockBufs2Buf","last","pkcs7Unpad","ivBuf","blockCipher","cipherKeyBuf","encBufs","encryptBlocks","decryptBlocks","encryptBlock","xorbuf","xorBufs","decryptBlock","padbytesize","pad","paddedbuf","padlength","padbuf","padbuf2","Aescbc","concatIvBuf","ctBuf","Ach","hmacbuf","asyncEncrypt","hmacbuf2","asyncDecrypt","Ecies","ivkEkM","P","Sbuf","iv","kE","kM","electrumEncrypt","toPubKey","fromKeyPair","noKey","Rbuf","ciphertext","BIE1","electrumDecrypt","toPrivKey","equals","offset","pub","hmac2","bitcoreEncrypt","RBuf","kEkM","asyncBitcoreEncrypt","bitcoreDecrypt","kB","d2","asyncBitcoreDecrypt","deps","aes","bnjs","bs58","elliptic","hashjs","version","AES","encKey","decKey","_tables","_precompute","sbox","decTable","keyLen","rcon","_key","j","module","exports","_crypt","Uint32Array","xInv","x4","tEnc","tDec","encTable","sboxInv","Uint8Array","th","input","dir","a2","c2","a","nInnerRounds","kIndex","out","table","t0","t1","t2","t3","_Buffer","ALPHABET","TypeError","BASE_MAP","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","source","psz","zeroes","b256","carry","it3","it4","vch","allocUnsafe","pbegin","pend","b58","it1","it2","string","buffer","utils","rand","curves","BN","getNAF","getJSF","assert","BaseCurve","conf","red","prime","mont","zero","toRed","one","two","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","bitLength","adjustCount","cmpn","redN","_maxwellTrick","BasePoint","precomputed","_fixedNafMul","doubles","_getDoubles","naf","I","repr","nafW","jpoint","mixedAdd","points","toP","_wnafMul","w","nafPoints","_getNAFPoints","wnd","acc","dblp","z","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","comb","toJ","redNeg","jsf","ja","jb","decodePoint","byteLength","encodeCompressed","_encode","compact","isEven","precompute","power","beta","_getBeta","_hasDoubles","dbl","res","short","inherits","Base","ShortCurve","tinv","redInvm","zeroA","fromRed","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","inf","forceRed","JPoint","zOne","modn","lambda","betas","_getEndoRoots","lambdas","redMul","basis","vec","_getEndoBasis","ntinv","redSqrt","redAdd","redSub","a0","b0","a1","prevR","aprxSqrt","u","clone","y1","y2","q","len1","sqr","negative","_endoSplit","v1","v2","c1","divRound","p1","p2","q1","q2","k1","k2","redSqr","redIAdd","ax","rhs","redISub","_endoWnafMulAdd","npoints","ncoeffs","ineg","pre","endoMul","obj2point","inspect","nx","ny","ys1","dyinv","jmulAdd","negate","zinv","zinv2","ay","pz2","z2","s1","s2","h","h2","h3","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","t","yyyy8","f","c8","delta","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","rx","iadd","options","PresetCurve","defineProperty","configurable","enumerable","HmacDRBG","Signature","EC","nh","keyFromPrivate","priv","fromPrivate","keyFromPublic","fromPublic","genKeyPair","drbg","pers","persEnc","entropy","hmacStrength","entropyEnc","ns2","generate","iaddn","_truncateToN","msg","truncOnly","bkey","getPrivate","ns1","iter","kp","kpX","recoveryParam","canonical","signature","getPublic","recoverPubKey","getKeyRecoveryParam","_importPrivate","privEnc","_importPublic","pubEnc","reason","derive","_importDER","Position","place","getLength","initial","octetLen","off","rmPadding","constructLength","octets","LN2","rlen","slen","toDER","backHalf","minAssert","minUtils","zero2","ws","andln","isubn","iushrn","d1","m8","m14","m24","cachedProperty","computer","parseBytes","intFromLE","ctor","superCtor","super_","TempCtor","isBN","_init","wordSize","window","parseHex4Bits","parseHexByte","lowerBound","parseBase","start","end","min","move","dest","src","left","right","_initNumber","_initArray","_parseHex","_parseBase","_strip","limbLen","limbPow","total","word","imuln","_iaddn","_move","_expand","_normSign","for","zeros","groupSizes","groupBases","smallMulTo","self","lo","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modrn","idivn","toArrayLike","ArrayType","reqLength","allocate","_toArrayLikeLE","shift","_toArrayLikeBE","clz32","_countBits","_zeroBits","hi","zeroBits","toTwos","width","abs","inotn","fromTwos","testn","notn","isNeg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","isub","comb10MulTo","mid","o","al0","ah0","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","bl0","bh0","bl1","bh1","bl2","bh2","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","guessLen13b","conjugate","normalize13b","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","isqr","toBitArray","iushln","carryMask","newCarry","ishln","hint","extended","mask","maskedWords","ishrn","shln","shrn","imaskn","maskn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","divmod","positive","divn","dm","half","r2","egcd","A","B","C","D","yp","xp","im","jm","gcd","_invmp","bincn","ucmp","gtn","gten","gte","ltn","lten","lte","eqn","Red","ctx","convertTo","_forceRed","convertFrom","redShl","shl","_verify2","redIMul","_verify1","redISqr","sqrt","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","_prime","Mont","imod","rinv","minv","ireduce","imulK","strip","output","outLen","prev","next","mod3","nOne","lpow","inv","current","currentLen","Rand","_rand","getBytes","getByte","crypto","getRandomValues","msCrypto","randomBytes","basex","common","sha","ripemd","sha224","sha384","BlockHash","pending","pendingTotal","outSize","padLength","_delta8","_delta32","join32","_update","_pad","_digest","Hmac","inner","outer","rotl32","sum32","sum32_3","sum32_4","RIPEMD160","K","Kh","E","Ah","Bh","Ch","Dh","Eh","rh","sh","toHex32","split32","shaCommon","sum32_5","ft_1","sha1_K","SHA1","W","SHA256","SHA224","ch32","maj32","s0_256","s1_256","g0_256","g1_256","sha256_K","T1","T2","SHA512","SHA384","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","ah","al","bh","bl","ch","cl","dh","dl","eh","el","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","rotr32","p32","isSurrogatePair","htonl","zero8","predResist","minEntropy","_reseed","reseedInterval","V","nonceEnc","_hmac","kmac","reseed","addEnc","temp","util","writable","hexRegEx","match","equal","native","checkParameters","defaultEncoding","password","salt","iterations","keylen","callback","ZERO_BUF","sync","subtle","global","toBrowser","checks","browserPbkdf2","algo","importKey","deriveBits","toLowerCase","Promise","nextTick","promise","resolvePromise","resolve","prom","catch","checkNative","resp","MAX_ALLOC","sizes","md5","rmd160","createHmac","DK","block1","destPos","hLen","U","thing","encoding","ArrayBuffer","isView","copyProps","dst","SafeBuffer","arg","encodingOrOffset","allocUnsafeSlow","SlowBuffer","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","getter","__esModule","definition","prop","toStringTag","nmd","paths","children","__webpack_exports__"],"mappings":"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,MAAMgZ,QAAsB/P,EAAQO,kBAAkBjL,KAAM,WAAY,IACxE,OAAOkJ,KAAK8Q,MAAMS,EAAc5Q,OAAOjJ,YAGzC,SACE,OAAOZ,KAAKsa,YAGd,SAAUzR,GACR,OAAO7I,KAAKyI,YAAYI,GAG1B,YACE,OAAO7I,KAAKwP,kBAAoBxP,KAAK2O,UAAUQ,SAInDF,EAAMgB,QAAU,cAAchB,EAC5B,YACEO,EACAwS,EACAC,EACAC,EACAC,EACAhT,EACAD,GAEA3F,MACEiG,EACAwS,EACAC,EACAC,EACAC,EACAhT,EACAD,EACAP,EAAUsB,QAAQhB,MAClB,aAKNA,EAAMc,QAAU,cAAcd,EAC5B,YACEO,EACAwS,EACAC,EACAC,EACAC,EACAhT,EACAD,GAEA3F,MACEiG,EACAwS,EACAC,EACAC,EACAC,EACAhT,EACAD,EACAP,EAAUoB,QAAQd,MAClB,aCjdN,MAAMyU,EAAW,CACf,UACA,UACA,OACA,QACA,QACA,SACA,SACA,WACA,SACA,QACA,SACA,WACA,UACA,SACA,UACA,OACA,WACA,UACA,SACA,MACA,SACA,QACA,UACA,SACA,QACA,MACA,SACA,UACA,SACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,QACA,MACA,QACA,QACA,QACA,MACA,MACA,UACA,QACA,QACA,QACA,UACA,QACA,QACA,MACA,QACA,QACA,SACA,QACA,QACA,UACA,OACA,QACA,SACA,UACA,UACA,QACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,QACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,UACA,MACA,QACA,UACA,SACA,QACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,MACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,QACA,MACA,WACA,SACA,UACA,MACA,SACA,UACA,QACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,WACA,UACA,UACA,QACA,SACA,OACA,SACA,OACA,SACA,UACA,UACA,QACA,QACA,QACA,OACA,UACA,QACA,UACA,OACA,OACA,WACA,QACA,QACA,MACA,UACA,UACA,OACA,SACA,SACA,SACA,MACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,SACA,UACA,SACA,OACA,SACA,QACA,SACA,SACA,UACA,QACA,OACA,QACA,UACA,OACA,SACA,SACA,UACA,SACA,UACA,MACA,OACA,OACA,UACA,OACA,QACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,SACA,SACA,SACA,OACA,SACA,SACA,MACA,MACA,UACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,WACA,SACA,SACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,UACA,QACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,QACA,MACA,WACA,OACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,OACA,OACA,OACA,SACA,OACA,MACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,MACA,SACA,OACA,QACA,SACA,QACA,OACA,OACA,OACA,SACA,SACA,SACA,MACA,UACA,QACA,WACA,SACA,SACA,QACA,UACA,OACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,WACA,SACA,QACA,UACA,SACA,QACA,OACA,QACA,QACA,SACA,OACA,SACA,QACA,UACA,QACA,QACA,UACA,SACA,SACA,UACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,OACA,QACA,QACA,OACA,UACA,OACA,OACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,UACA,OACA,SACA,OACA,OACA,UACA,QACA,SACA,UACA,OACA,UACA,QACA,SACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,UACA,WACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,SACA,UACA,SACA,QACA,MACA,UACA,OACA,UACA,MACA,WACA,UACA,UACA,UACA,QACA,UACA,SACA,OACA,QACA,MACA,SACA,OACA,QACA,SACA,SACA,OACA,WACA,OACA,MACA,OACA,SACA,SACA,SACA,WACA,SACA,UACA,WACA,WACA,OACA,UACA,SACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,UACA,QACA,SACA,SACA,WACA,SACA,SACA,OACA,UACA,UACA,SACA,SACA,UACA,SACA,SACA,UACA,OACA,UACA,QACA,OACA,SACA,OACA,SACA,UACA,UACA,UACA,SACA,WACA,SACA,OACA,WACA,WACA,UACA,OACA,UACA,WACA,UACA,WACA,SACA,SACA,UACA,QACA,SACA,WACA,MACA,OACA,UACA,SACA,SACA,SACA,QACA,OACA,OACA,SACA,OACA,QACA,SACA,QACA,UACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,SACA,OACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,QACA,SACA,OACA,OACA,OACA,UACA,UACA,OACA,OACA,UACA,SACA,MACA,QACA,SACA,QACA,QACA,WACA,UACA,UACA,WACA,WACA,QACA,OACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,QACA,SACA,QACA,MACA,UACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,WACA,UACA,QACA,QACA,MACA,QACA,QACA,UACA,QACA,QACA,SACA,QACA,UACA,SACA,UACA,SACA,WACA,OACA,QACA,SACA,QACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,MACA,UACA,SACA,OACA,UACA,OACA,QACA,QACA,OACA,QACA,OACA,SACA,SACA,MACA,QACA,UACA,OACA,UACA,MACA,QACA,SACA,UACA,QACA,WACA,UACA,WACA,UACA,MACA,OACA,OACA,SACA,QACA,WACA,QACA,QACA,MACA,QACA,UACA,QACA,SACA,OACA,OACA,SACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,QACA,SACA,OACA,MACA,UACA,MACA,OACA,QACA,QACA,OACA,SACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,MACA,OACA,QACA,MACA,OACA,OACA,SACA,OACA,OACA,QACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,SACA,QACA,MACA,UACA,QACA,WACA,QACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,OACA,MACA,QACA,UACA,OACA,SACA,SACA,OACA,SACA,UACA,OACA,MACA,SACA,UACA,SACA,SACA,UACA,MACA,OACA,OACA,SACA,QACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,UACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,UACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,OACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,MACA,MACA,QACA,OACA,OACA,SACA,UACA,OACA,QACA,SACA,OACA,QACA,UACA,MACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,WACA,SACA,QACA,SACA,OACA,MACA,OACA,SACA,OACA,OACA,OACA,MACA,OACA,UACA,QACA,SACA,OACA,OACA,UACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,QACA,WACA,OACA,QACA,OACA,QACA,MACA,OACA,QACA,SACA,QACA,UACA,SACA,OACA,SACA,QACA,OACA,UACA,SACA,MACA,OACA,OACA,WACA,OACA,SACA,MACA,UACA,UACA,QACA,UACA,UACA,SACA,SACA,SACA,UACA,UACA,OACA,UACA,SACA,WACA,QACA,WACA,SACA,WACA,SACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,UACA,SACA,SACA,SACA,UACA,UACA,SACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,UACA,QACA,OACA,QACA,SACA,SACA,MACA,OACA,UACA,QACA,QACA,QACA,MACA,OACA,OACA,UACA,MACA,QACA,QACA,OACA,SACA,SACA,OACA,OACA,WACA,OACA,OACA,UACA,MACA,OACA,MACA,SACA,OACA,UACA,OACA,MACA,UACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,MACA,QACA,QACA,SACA,OACA,OACA,OACA,WACA,SACA,QACA,QACA,QACA,QACA,UACA,OACA,MACA,OACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,UACA,QACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,UACA,UACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,OACA,UACA,QACA,OACA,QACA,SACA,OACA,OACA,UACA,OACA,SACA,OACA,QACA,QACA,UACA,SACA,QACA,QACA,SACA,SACA,UACA,MACA,QACA,SACA,OACA,OACA,OACA,QACA,OACA,SACA,MACA,SACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,WACA,OACA,OACA,SACA,QACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,OACA,UACA,OACA,WACA,QACA,QACA,SACA,OACA,SACA,SACA,UACA,OACA,QACA,QACA,QACA,QACA,OACA,UACA,QACA,SACA,SACA,WACA,OACA,UACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,SACA,OACA,UACA,MACA,QACA,UACA,SACA,QACA,SACA,MACA,SACA,UACA,SACA,UACA,QACA,OACA,QACA,OACA,UACA,WACA,SACA,SACA,QACA,WACA,QACA,OACA,QACA,OACA,SACA,OACA,WACA,SACA,SACA,WACA,QACA,OACA,SACA,SACA,UACA,OACA,QACA,OACA,SACA,SACA,QACA,SACA,SACA,OACA,OACA,OACA,WACA,UACA,UACA,SACA,QACA,OACA,MACA,UACA,UACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,OACA,UACA,OACA,UACA,SACA,QACA,MACA,UACA,SACA,QACA,MACA,MACA,OACA,SACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,QACA,MACA,OACA,MACA,QACA,UACA,OACA,OACA,MACA,QACA,SACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,QACA,UACA,QACA,WACA,QACA,SACA,WACA,SACA,UACA,QACA,UACA,QACA,SACA,UACA,OACA,OACA,OACA,MACA,QACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,SACA,OACA,QACA,QACA,QACA,UACA,QACA,SACA,SACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,SACA,UACA,QACA,OACA,UACA,QACA,SACA,OACA,UACA,UACA,MACA,UACA,SACA,SACA,SACA,UACA,SACA,SACA,MACA,QACA,QACA,SACA,WACA,QACA,SACA,UACA,QACA,MACA,SACA,OACA,QACA,OACA,UACA,OACA,SACA,QACA,QACA,QACA,SACA,UACA,QACA,OACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,OACA,OACA,UACA,UACA,WACA,WACA,OACA,SACA,UACA,UACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,QACA,WACA,UACA,UACA,QACA,UACA,SACA,UACA,OACA,OACA,QACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,QACA,OACA,MACA,SACA,UACA,UACA,UACA,UACA,WACA,QACA,OACA,OACA,QACA,SACA,UACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,OACA,SACA,QACA,MACA,QACA,QACA,OACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,OACA,SACA,WACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,WACA,SACA,WACA,WACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,MACA,SACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,UACA,OACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,MACA,SACA,UACA,OACA,OACA,QACA,SACA,QACA,OACA,SACA,OACA,SACA,OACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,UACA,QACA,SACA,SACA,UACA,WACA,WACA,QACA,QACA,SACA,SACA,QACA,MACA,SACA,SACA,OACA,SACA,SACA,UACA,WACA,OACA,OACA,UACA,SACA,OACA,UACA,SACA,QACA,WACA,SACA,UACA,UACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,QACA,WACA,QACA,SACA,QACA,UACA,MACA,UACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,UACA,SACA,QACA,OACA,QACA,SACA,UACA,MACA,OACA,QACA,SACA,MACA,QACA,OACA,QACA,QACA,OACA,OACA,QACA,UACA,QACA,QACA,SACA,OACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,OACA,QACA,UACA,QACA,WACA,QACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,SACA,MACA,SACA,UACA,WACA,SACA,UACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,WACA,SACA,SACA,SACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,SACA,UACA,OACA,SACA,SACA,QACA,UACA,OACA,SACA,MACA,QACA,SACA,QACA,SACA,UACA,OACA,UACA,QACA,WACA,WACA,SACA,UACA,UACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,UACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,OACA,OACA,OACA,SACA,OACA,QACA,SACA,OACA,QACA,OACA,OACA,MACA,SACA,SACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,QACA,SACA,QACA,QACA,UACA,SACA,OACA,QACA,OACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,QACA,UACA,QACA,UACA,MACA,WACA,SACA,QACA,SACA,WACA,OACA,SACA,UACA,OACA,QACA,MACA,QACA,SACA,QACA,UACA,WACA,OACA,QACA,UACA,SACA,QACA,OACA,MACA,QACA,QACA,UACA,SACA,QACA,WACA,OACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,UACA,OACA,OACA,SACA,UACA,QACA,OACA,QACA,UACA,QACA,QACA,MACA,OACA,UACA,SACA,OACA,SACA,SACA,OACA,SACA,SACA,SACA,QACA,OACA,QACA,MACA,OACA,UACA,OACA,WACA,SACA,UACA,QACA,UACA,QACA,OACA,SACA,SACA,UACA,UACA,SACA,OACA,WACA,UACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,OACA,QACA,QACA,QACA,OACA,QACA,MACA,OACA,SACA,UACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,MACA,SACA,QACA,UACA,OACA,QACA,UACA,SACA,SACA,UACA,QACA,OACA,SACA,UACA,OACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,OACA,UACA,UACA,SACA,UACA,QACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,UACA,SACA,OACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,OACA,UACA,OACA,UACA,OACA,OACA,QACA,QACA,OACA,MACA,SACA,SACA,OACA,SACA,UACA,MACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,UACA,OACA,QACA,OACA,OACA,OACA,MACA,SACA,OACA,OACA,OACA,SACA,SACA,OACA,SACA,OACA,OACA,UACA,OACA,QACA,SACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,OACA,SACA,MACA,QACA,QACA,QACA,OACA,OACA,OAEFA,EAASC,MAAQ,ICz+DjB,MAAMC,UAAclc,EAClB,YAAam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,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,kEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,sEAINN,IAAK,CACHY,IAAK,EACLN,OAAQ,CACN,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,iEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CAC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","file":"bsv.module.js","sourcesContent":["/**\n * Big Number\n * ==========\n *\n * Since javascript numbers are only precise up to 53 bits, and bitcoin is\n * based on cryptography that uses 256 bit numbers, we must use a big number\n * library. The library we use at the moment is Fedor Indutny's bn.js library.\n * Since big numbers are extremely useful, we provide some very basic wrappers\n * for his big number class and expose it. The wrappers merely allow you to do,\n * say, bn.cmp(num) instead of just bn.cmp(bn), which is nice. The primary way\n * to use this is:\n * const bn = Bn(str) // str is base 10\n * const bn = Bn(num)\n * const bn = Bn().fromBuffer(buf)\n * const bn = Bn().fromSm(buf); // sign+magnitude format, first bit is sign\n *\n * For little endian, pass in an options value:\n * const bn = Bn().fromBuffer(buf, {endian: 'little'})\n * const bn = Bn().fromSm(buf, {endian: 'little'})\n *\n * Getting output:\n * const str = Bn().toString() // produces base 10 string\n * const buf = Bn().toBuffer() // produces buffer representation\n * const buf = Bn().toBuffer({size: 32}) //produced 32 byte buffer\n */\n'use strict'\n\nimport _Bn from 'bn.js'\n\nfunction Bn (n, base, ...rest) {\n  if (!(this instanceof Bn)) {\n    return new Bn(n, base, ...rest)\n  }\n  _Bn.call(this, n, base, ...rest)\n}\n\nObject.keys(_Bn).forEach(function (key) {\n  Bn[key] = _Bn[key]\n})\nBn.prototype = Object.create(_Bn.prototype)\nBn.prototype.constructor = Bn\n\nfunction reverseBuf (buf) {\n  const buf2 = Buffer.alloc(buf.length)\n  for (let i = 0; i < buf.length; i++) {\n    buf2[i] = buf[buf.length - 1 - i]\n  }\n  return buf2\n}\n\nBn.prototype.fromHex = function (hex, opts) {\n  return this.fromBuffer(Buffer.from(hex, 'hex'), opts)\n}\n\nBn.prototype.toHex = function (opts) {\n  return this.toBuffer(opts).toString('hex')\n}\n\nBn.prototype.toJSON = function () {\n  return this.toString()\n}\n\nBn.prototype.fromJSON = function (str) {\n  const bn = Bn(str)\n  bn.copy(this)\n  return this\n}\n\nBn.prototype.fromNumber = function (n) {\n  const bn = Bn(n)\n  bn.copy(this)\n  return this\n}\n\nBn.prototype.toNumber = function () {\n  return parseInt(this.toString(10), 10)\n}\n\nBn.prototype.fromString = function (str, base) {\n  const bn = Bn(str, base)\n  bn.copy(this)\n  return this\n}\n\nBn.fromBuffer = function (buf, opts = { endian: 'big' }) {\n  if (opts.endian === 'little') {\n    buf = reverseBuf(buf)\n  }\n  const hex = buf.toString('hex')\n  const bn = new Bn(hex, 16)\n  return bn\n}\n\nBn.prototype.fromBuffer = function (buf, opts) {\n  const bn = Bn.fromBuffer(buf, opts)\n  bn.copy(this)\n\n  return this\n}\n\nBn.prototype.toBuffer = function (opts = { size: undefined, endian: 'big' }) {\n  let buf\n  if (opts.size) {\n    const hex = this.toString(16, 2)\n    const natlen = hex.length / 2\n    buf = Buffer.from(hex, 'hex')\n\n    if (natlen === opts.size) {\n      // pass\n    } else if (natlen > opts.size) {\n      buf = buf.slice(natlen - buf.length, buf.length)\n    } else if (natlen < opts.size) {\n      const rbuf = Buffer.alloc(opts.size)\n      for (let i = 0; i < buf.length; i++) {\n        rbuf[rbuf.length - 1 - i] = buf[buf.length - 1 - i]\n      }\n      for (let i = 0; i < opts.size - natlen; i++) {\n        rbuf[i] = 0\n      }\n      buf = rbuf\n    }\n  } else {\n    const hex = this.toString(16, 2)\n    buf = Buffer.from(hex, 'hex')\n  }\n\n  if (opts.endian === 'little') {\n    buf = reverseBuf(buf)\n  }\n  const longzero = Buffer.from([0])\n  if (Buffer.compare(buf, longzero) === 0) {\n    return Buffer.from([])\n  }\n  return buf\n}\n\nBn.prototype.toFastBuffer = Bn.prototype.toBuffer\n\nBn.fromFastBuffer = Bn.fromBuffer\nBn.prototype.fromFastBuffer = Bn.prototype.fromBuffer\n\n/**\n   * Signed magnitude buffer. Most significant bit represents sign (0 = positive,\n   * 1 = negative).\n   */\nBn.prototype.fromSm = function (buf, opts = { endian: 'big' }) {\n  if (buf.length === 0) {\n    this.fromBuffer(Buffer.from([0]))\n  }\n\n  const endian = opts.endian\n  if (endian === 'little') {\n    buf = reverseBuf(buf)\n  }\n\n  if (buf[0] & 0x80) {\n    buf[0] = buf[0] & 0x7f\n    this.fromBuffer(buf)\n    this.neg().copy(this)\n  } else {\n    this.fromBuffer(buf)\n  }\n  return this\n}\n\nBn.prototype.toSm = function (opts = { endian: 'big' }) {\n  const endian = opts.endian\n\n  let buf\n  if (this.cmp(0) === -1) {\n    buf = this.neg().toBuffer()\n    if (buf[0] & 0x80) {\n      buf = Buffer.concat([Buffer.from([0x80]), buf])\n    } else {\n      buf[0] = buf[0] | 0x80\n    }\n  } else {\n    buf = this.toBuffer()\n    if (buf[0] & 0x80) {\n      buf = Buffer.concat([Buffer.from([0x00]), buf])\n    }\n  }\n\n  if ((buf.length === 1) & (buf[0] === 0)) {\n    buf = Buffer.from([])\n  }\n\n  if (endian === 'little') {\n    buf = reverseBuf(buf)\n  }\n\n  return buf\n}\n\n/**\n   * Produce a Bn from the \"bits\" value in a blockheader. Analagous to Bitcoin\n   * Core's uint256 SetCompact method. bits is assumed to be UInt32.\n   */\nBn.prototype.fromBits = function (bits, opts = { strict: false }) {\n  // To performed bitwise operations in javascript, we need to convert to a\n  // signed 32 bit value.\n  let buf = Buffer.alloc(4)\n  buf.writeUInt32BE(bits, 0)\n  bits = buf.readInt32BE(0)\n  if (opts.strict && bits & 0x00800000) {\n    throw new Error('negative bit set')\n  }\n  const nsize = bits >> 24\n  const nword = bits & 0x007fffff\n  buf = Buffer.alloc(4)\n  buf.writeInt32BE(nword)\n  if (nsize <= 3) {\n    buf = buf.slice(1, nsize + 1)\n  } else {\n    const fill = Buffer.alloc(nsize - 3)\n    fill.fill(0)\n    buf = Buffer.concat([buf, fill])\n  }\n  this.fromBuffer(buf)\n  if (bits & 0x00800000) {\n    Bn(0)\n      .sub(this)\n      .copy(this)\n  }\n  return this\n}\n\n/**\n   * Convert Bn to the \"bits\" value in a blockheader. Analagous to Bitcoin\n   * Core's uint256 GetCompact method. bits is a UInt32.\n   */\nBn.prototype.toBits = function () {\n  let buf\n  if (this.lt(0)) {\n    buf = this.neg().toBuffer()\n  } else {\n    buf = this.toBuffer()\n  }\n  let nsize = buf.length\n  let nword\n  if (nsize > 3) {\n    nword = Buffer.concat([Buffer.from([0]), buf.slice(0, 3)]).readUInt32BE(0)\n  } else if (nsize <= 3) {\n    const blank = Buffer.alloc(3 - nsize + 1)\n    blank.fill(0)\n    nword = Buffer.concat([blank, buf.slice(0, nsize)]).readUInt32BE(0)\n  }\n  if (nword & 0x00800000) {\n    // The most significant bit denotes sign. Do not want unless number is\n    // actually negative.\n    nword >>= 8\n    nsize++\n  }\n  if (this.lt(0)) {\n    nword |= 0x00800000\n  }\n  const bits = (nsize << 24) | nword\n  // convert bits to UInt32 before returning\n  buf = Buffer.alloc(4)\n  buf.writeInt32BE(bits, 0)\n  return buf.readUInt32BE(0)\n}\n\n// This is analogous to the constructor for CScriptNum in bitcoind. Many ops\n// in bitcoind's script interpreter use CScriptNum, which is not really a\n// proper bignum. Instead, an error is thrown if trying to input a number\n// bigger than 4 bytes. We copy that behavior here. There is one exception -\n// in CHECKLOCKTIMEVERIFY, the numbers are allowed to be up to 5 bytes long.\n// We allow for setting that variable here for use in CHECKLOCKTIMEVERIFY.\nBn.prototype.fromScriptNumBuffer = function (\n  buf,\n  fRequireMinimal,\n  nMaxNumSize\n) {\n  if (nMaxNumSize === undefined) {\n    nMaxNumSize = 4\n  }\n  if (buf.length > nMaxNumSize) {\n    throw new Error('script number overflow')\n  }\n  if (fRequireMinimal && buf.length > 0) {\n    // Check that the number is encoded with the minimum possible\n    // number of bytes.\n    //\n    // If the most-significant-byte - excluding the sign bit - is zero\n    // then we're not minimal. Note how this test also rejects the\n    // negative-zero encoding, 0x80.\n    if ((buf[buf.length - 1] & 0x7f) === 0) {\n      // One exception: if there's more than one byte and the most\n      // significant bit of the second-most-significant-byte is set\n      // it would conflict with the sign bit. An example of this case\n      // is +-255, which encode to 0xff00 and 0xff80 respectively.\n      // (big-endian).\n      if (buf.length <= 1 || (buf[buf.length - 2] & 0x80) === 0) {\n        throw new Error('non-minimally encoded script number')\n      }\n    }\n  }\n  return this.fromSm(buf, { endian: 'little' })\n}\n\n// The corollary to the above, with the notable exception that we do not throw\n// an error if the output is larger than four bytes. (Which can happen if\n// performing a numerical operation that results in an overflow to more than 4\n// bytes).\nBn.prototype.toScriptNumBuffer = function (buf) {\n  return this.toSm({ endian: 'little' })\n}\n\nBn.prototype.neg = function () {\n  const _neg = _Bn.prototype.neg.call(this)\n  const neg = Object.create(Bn.prototype)\n  _neg.copy(neg)\n  return neg\n}\n\nBn.prototype.add = function (bn) {\n  const _bn = _Bn.prototype.add.call(this, bn)\n  bn = Object.create(Bn.prototype)\n  _bn.copy(bn)\n  return bn\n}\n\nBn.prototype.sub = function (bn) {\n  const _bn = _Bn.prototype.sub.call(this, bn)\n  bn = Object.create(Bn.prototype)\n  _bn.copy(bn)\n  return bn\n}\n\nBn.prototype.mul = function (bn) {\n  const _bn = _Bn.prototype.mul.call(this, bn)\n  bn = Object.create(Bn.prototype)\n  _bn.copy(bn)\n  return bn\n}\n\n/**\n   * to be used if this is positive.\n   */\nBn.prototype.mod = function (bn) {\n  const _bn = _Bn.prototype.mod.call(this, bn)\n  bn = Object.create(Bn.prototype)\n  _bn.copy(bn)\n  return bn\n}\n\n/**\n   * to be used if this is negative.\n   */\nBn.prototype.umod = function (bn) {\n  const _bn = _Bn.prototype.umod.call(this, bn)\n  bn = Object.create(Bn.prototype)\n  _bn.copy(bn)\n  return bn\n}\n\nBn.prototype.invm = function (bn) {\n  const _bn = _Bn.prototype.invm.call(this, bn)\n  bn = Object.create(Bn.prototype)\n  _bn.copy(bn)\n  return bn\n}\n\nBn.prototype.div = function (bn) {\n  const _bn = _Bn.prototype.div.call(this, bn)\n  bn = Object.create(Bn.prototype)\n  _bn.copy(bn)\n  return bn\n}\n\nBn.prototype.ushln = function (bits) {\n  const _bn = _Bn.prototype.ushln.call(this, bits)\n  const bn = Object.create(Bn.prototype)\n  _bn.copy(bn)\n  return bn\n}\n\nBn.prototype.ushrn = function (bits) {\n  const _bn = _Bn.prototype.ushrn.call(this, bits)\n  const bn = Object.create(Bn.prototype)\n  _bn.copy(bn)\n  return bn\n}\n\nBn.prototype.cmp = function (bn) {\n  return _Bn.prototype.cmp.call(this, bn)\n}\n\n/**\n   * All the standard big number operations operate on other big numbers. e.g.,\n   * bn1.add(bn2). But it is frequenly valuble to add numbers or strings, e.g.\n   * bn.add(5) or bn.add('5'). The decorator wraps all methods where this would\n   * be convenient and makes that possible.\n   */\nfunction decorate (name) {\n  Bn.prototype['_' + name] = Bn.prototype[name]\n  const f = function (b) {\n    if (typeof b === 'string') {\n      b = new Bn(b)\n    } else if (typeof b === 'number') {\n      b = new Bn(b.toString())\n    }\n    return this['_' + name](b)\n  }\n  Bn.prototype[name] = f\n}\n\nBn.prototype.eq = function (b) {\n  return this.cmp(b) === 0\n}\n\nBn.prototype.neq = function (b) {\n  return this.cmp(b) !== 0\n}\n\nBn.prototype.gt = function (b) {\n  return this.cmp(b) > 0\n}\n\nBn.prototype.geq = function (b) {\n  return this.cmp(b) >= 0\n}\n\nBn.prototype.lt = function (b) {\n  return this.cmp(b) < 0\n}\n\nBn.prototype.leq = function (b) {\n  return this.cmp(b) <= 0\n}\n\ndecorate('add')\ndecorate('sub')\ndecorate('mul')\ndecorate('mod')\ndecorate('invm')\ndecorate('div')\ndecorate('cmp')\ndecorate('gt')\ndecorate('geq')\ndecorate('lt')\ndecorate('leq')\n\nexport { Bn }\n","/**\n * Buffer Reader\n * =============\n *\n * This is a convenience class for reading VarInts and other basic types from a\n * buffer. This class is most useful for reading VarInts, and also for signed\n * or unsigned integers of various types. It can also read a buffer in reverse\n * order, which is useful in bitcoin which uses little endian numbers a lot so\n * you find that you must reverse things. You probably want to use it like:\n * varInt = new Br(buf).readnew VarInt()\n */\n'use strict'\n\nimport { Bn } from './bn'\n\nclass Br {\n  constructor (buf) {\n    this.fromObject({ buf })\n  }\n\n  fromObject (obj) {\n    this.buf = obj.buf || this.buf || undefined\n    this.pos = obj.pos || this.pos || 0\n    return this\n  }\n\n  eof () {\n    return this.pos >= this.buf.length\n  }\n\n  read (len = this.buf.length) {\n    const buf = this.buf.slice(this.pos, this.pos + len)\n    this.pos = this.pos + len\n    return buf\n  }\n\n  readReverse (len = this.buf.length) {\n    const buf = this.buf.slice(this.pos, this.pos + len)\n    this.pos = this.pos + len\n    const buf2 = Buffer.alloc(buf.length)\n    for (let i = 0; i < buf2.length; i++) {\n      buf2[i] = buf[buf.length - 1 - i]\n    }\n    return buf2\n  }\n\n  readUInt8 () {\n    const val = this.buf.readUInt8(this.pos)\n    this.pos = this.pos + 1\n    return val\n  }\n\n  readInt8 () {\n    const val = this.buf.readInt8(this.pos)\n    this.pos = this.pos + 1\n    return val\n  }\n\n  readUInt16BE () {\n    const val = this.buf.readUInt16BE(this.pos)\n    this.pos = this.pos + 2\n    return val\n  }\n\n  readInt16BE () {\n    const val = this.buf.readInt16BE(this.pos)\n    this.pos = this.pos + 2\n    return val\n  }\n\n  readUInt16LE () {\n    const val = this.buf.readUInt16LE(this.pos)\n    this.pos = this.pos + 2\n    return val\n  }\n\n  readInt16LE () {\n    const val = this.buf.readInt16LE(this.pos)\n    this.pos = this.pos + 2\n    return val\n  }\n\n  readUInt32BE () {\n    const val = this.buf.readUInt32BE(this.pos)\n    this.pos = this.pos + 4\n    return val\n  }\n\n  readInt32BE () {\n    const val = this.buf.readInt32BE(this.pos)\n    this.pos = this.pos + 4\n    return val\n  }\n\n  readUInt32LE () {\n    const val = this.buf.readUInt32LE(this.pos)\n    this.pos = this.pos + 4\n    return val\n  }\n\n  readInt32LE () {\n    const val = this.buf.readInt32LE(this.pos)\n    this.pos = this.pos + 4\n    return val\n  }\n\n  readUInt64BEBn () {\n    const buf = this.buf.slice(this.pos, this.pos + 8)\n    const bn = new Bn().fromBuffer(buf)\n    this.pos = this.pos + 8\n    return bn\n  }\n\n  readUInt64LEBn () {\n    const buf = this.readReverse(8)\n    const bn = new Bn().fromBuffer(buf)\n    return bn\n  }\n\n  readVarIntNum () {\n    const first = this.readUInt8()\n    let bn, n\n    switch (first) {\n      case 0xfd:\n        return this.readUInt16LE()\n      case 0xfe:\n        return this.readUInt32LE()\n      case 0xff:\n        bn = this.readUInt64LEBn()\n        n = bn.toNumber()\n        if (n <= Math.pow(2, 53)) {\n          return n\n        } else {\n          throw new Error(\n            'number too large to retain precision - use readVarIntBn'\n          )\n        }\n      default:\n        return first\n    }\n  }\n\n  readVarIntBuf () {\n    const first = this.buf.readUInt8(this.pos)\n    switch (first) {\n      case 0xfd:\n        return this.read(1 + 2)\n      case 0xfe:\n        return this.read(1 + 4)\n      case 0xff:\n        return this.read(1 + 8)\n      default:\n        return this.read(1)\n    }\n  }\n\n  readVarIntBn () {\n    const first = this.readUInt8()\n    switch (first) {\n      case 0xfd:\n        return new Bn(this.readUInt16LE())\n      case 0xfe:\n        return new Bn(this.readUInt32LE())\n      case 0xff:\n        return this.readUInt64LEBn()\n      default:\n        return new Bn(first)\n    }\n  }\n}\n\nexport { Br }\n","/**\n * Buffer Writer\n * =============\n *\n * This is the writing complement of the Br. You can easily write\n * VarInts and other basic number types. The way to use it is: buf =\n * new Bw().write(buf1).write(buf2).toBuffer()\n */\n'use strict'\n\nclass Bw {\n  constructor (bufs) {\n    this.fromObject({ bufs })\n  }\n\n  fromObject (obj) {\n    this.bufs = obj.bufs || this.bufs || []\n    return this\n  }\n\n  getLength () {\n    let len = 0\n    for (const i in this.bufs) {\n      const buf = this.bufs[i]\n      len = len + buf.length\n    }\n    return len\n  }\n\n  toBuffer () {\n    return Buffer.concat(this.bufs)\n  }\n\n  write (buf) {\n    this.bufs.push(buf)\n    return this\n  }\n\n  writeReverse (buf) {\n    const buf2 = Buffer.alloc(buf.length)\n    for (let i = 0; i < buf2.length; i++) {\n      buf2[i] = buf[buf.length - 1 - i]\n    }\n    this.bufs.push(buf2)\n    return this\n  }\n\n  writeUInt8 (n) {\n    const buf = Buffer.alloc(1)\n    buf.writeUInt8(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeInt8 (n) {\n    const buf = Buffer.alloc(1)\n    buf.writeInt8(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeUInt16BE (n) {\n    const buf = Buffer.alloc(2)\n    buf.writeUInt16BE(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeInt16BE (n) {\n    const buf = Buffer.alloc(2)\n    buf.writeInt16BE(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeUInt16LE (n) {\n    const buf = Buffer.alloc(2)\n    buf.writeUInt16LE(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeInt16LE (n) {\n    const buf = Buffer.alloc(2)\n    buf.writeInt16LE(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeUInt32BE (n) {\n    const buf = Buffer.alloc(4)\n    buf.writeUInt32BE(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeInt32BE (n) {\n    const buf = Buffer.alloc(4)\n    buf.writeInt32BE(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeUInt32LE (n) {\n    const buf = Buffer.alloc(4)\n    buf.writeUInt32LE(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeInt32LE (n) {\n    const buf = Buffer.alloc(4)\n    buf.writeInt32LE(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeUInt64BEBn (bn) {\n    const buf = bn.toBuffer({ size: 8 })\n    this.write(buf)\n    return this\n  }\n\n  writeUInt64LEBn (bn) {\n    const buf = bn.toBuffer({ size: 8 })\n    this.writeReverse(buf)\n    return this\n  }\n\n  writeVarIntNum (n) {\n    const buf = Bw.varIntBufNum(n)\n    this.write(buf)\n    return this\n  }\n\n  writeVarIntBn (bn) {\n    const buf = Bw.varIntBufBn(bn)\n    this.write(buf)\n    return this\n  }\n\n  static varIntBufNum (n) {\n    let buf\n    if (n < 253) {\n      buf = Buffer.alloc(1)\n      buf.writeUInt8(n, 0)\n    } else if (n < 0x10000) {\n      buf = Buffer.alloc(1 + 2)\n      buf.writeUInt8(253, 0)\n      buf.writeUInt16LE(n, 1)\n    } else if (n < 0x100000000) {\n      buf = Buffer.alloc(1 + 4)\n      buf.writeUInt8(254, 0)\n      buf.writeUInt32LE(n, 1)\n    } else {\n      buf = Buffer.alloc(1 + 8)\n      buf.writeUInt8(255, 0)\n      buf.writeInt32LE(n & -1, 1)\n      buf.writeUInt32LE(Math.floor(n / 0x100000000), 5)\n    }\n    return buf\n  }\n\n  static varIntBufBn (bn) {\n    let buf\n    const n = bn.toNumber()\n    if (n < 253) {\n      buf = Buffer.alloc(1)\n      buf.writeUInt8(n, 0)\n    } else if (n < 0x10000) {\n      buf = Buffer.alloc(1 + 2)\n      buf.writeUInt8(253, 0)\n      buf.writeUInt16LE(n, 1)\n    } else if (n < 0x100000000) {\n      buf = Buffer.alloc(1 + 4)\n      buf.writeUInt8(254, 0)\n      buf.writeUInt32LE(n, 1)\n    } else {\n      const bw = new Bw()\n      bw.writeUInt8(255)\n      bw.writeUInt64LEBn(bn)\n      buf = bw.toBuffer()\n    }\n    return buf\n  }\n}\n\nexport { Bw }\n","/**\n * Structure\n * =========\n *\n * A convenient structure to extend objects from that comes with very common\n * boiler plate instance methods:\n * - fromObject\n * - fromBr\n * - toBw\n * - fromBuffer\n * - fromFastBuffer\n * - toBuffer\n * - toFastBuffer\n * - fromHex\n * - toHex\n * - fromString\n * - toString\n * - fromJSON\n * - toJSON\n * - cloneByBuffer\n * - cloneByFastBuffer\n * - cloneByHex\n * - cloneByString\n * - cloneByJSON\n *\n * As well as static methods for:\n * - fromObject\n * - fromBr\n * - fromBuffer\n * - fromFastBuffer\n * - fromHex\n * - fromString\n * - fromJSON\n *\n * The \"expect\" method also facilitates deserializing a sequence of buffers\n * into an object.\n */\n'use strict'\n\nimport { Br } from './br'\nimport { Bw } from './bw'\nimport isHex from 'is-hex'\n\nclass Struct {\n  constructor (obj) {\n    this.fromObject(obj)\n  }\n\n  fromObject (obj) {\n    if (!obj) {\n      return this\n    }\n    for (const key of Object.keys(obj)) {\n      if (obj[key] !== undefined) {\n        this[key] = obj[key]\n      }\n    }\n    return this\n  }\n\n  static fromObject (obj) {\n    return new this().fromObject(obj)\n  }\n\n  fromBr (br) {\n    if (!(br instanceof Br)) {\n      throw new Error('br must be a buffer reader')\n    }\n    throw new Error('not implemented')\n  }\n\n  static fromBr (br) {\n    return new this().fromBr(br)\n  }\n\n  asyncFromBr (br) {\n    if (!(br instanceof Br)) {\n      throw new Error('br must be a buffer reader')\n    }\n    throw new Error('not implemented')\n  }\n\n  static asyncFromBr (br) {\n    return new this().asyncFromBr(br)\n  }\n\n  toBw (bw) {\n    throw new Error('not implemented')\n  }\n\n  asyncToBw (bw) {\n    throw new Error('not implemented')\n  }\n\n  /**\n     * It is very often the case that you want to create a bitcoin object from a\n     * stream of small buffers rather than from a buffer of the correct length.\n     * For instance, if streaming from the network or disk. The genFromBuffers\n     * method is a generator which produces an iterator. Use .next(buf) to pass\n     * in a small buffer. The iterator will end when it has received enough data\n     * to produce the object. In some cases it is able to yield the number of\n     * bytes it is expecting, but that is not always known.\n     */\n  * genFromBuffers () {\n    throw new Error('not implemented')\n  }\n\n  /**\n     * A convenience method used by from the genFromBuffers* generators.\n     * Basically lets you expect a certain number of bytes (len) and keeps\n     * yielding until you give it enough. It yields the expected amount\n     * remaining, and returns an object containing a buffer of the expected\n     * length, and, if any, the remainder buffer.\n     */\n  * expect (len, startbuf) {\n    let buf = startbuf\n    const bw = new Bw()\n    let gotlen = 0\n    if (startbuf) {\n      bw.write(startbuf)\n      gotlen += startbuf.length\n    }\n    while (gotlen < len) {\n      const remainderlen = len - gotlen\n      buf = yield remainderlen\n      if (!buf) {\n        continue\n      }\n      bw.write(buf)\n      gotlen += buf.length\n    }\n    buf = bw.toBuffer()\n    const overlen = gotlen - len\n    const remainderbuf = buf.slice(buf.length - overlen, buf.length)\n    buf = buf.slice(0, buf.length - overlen)\n    return {\n      buf: buf,\n      remainderbuf: remainderbuf\n    }\n  }\n\n  /**\n     * Convert a buffer into an object, i.e. deserialize the object.\n     */\n  fromBuffer (buf, ...rest) {\n    if (!Buffer.isBuffer(buf)) {\n      throw new Error('buf must be a buffer')\n    }\n    const br = new Br(buf)\n    return this.fromBr(br, ...rest)\n  }\n\n  static fromBuffer (...rest) {\n    return new this().fromBuffer(...rest)\n  }\n\n  asyncFromBuffer (buf, ...rest) {\n    if (!Buffer.isBuffer(buf)) {\n      throw new Error('buf must be a buffer')\n    }\n    const br = new Br(buf)\n    return this.asyncFromBr(br, ...rest)\n  }\n\n  static asyncFromBuffer (buf, ...rest) {\n    return new this().asyncFromBuffer(buf, ...rest)\n  }\n\n  /**\n     * The complement of toFastBuffer - see description for toFastBuffer\n     */\n  fromFastBuffer (buf, ...rest) {\n    if (buf.length === 0) {\n      return this\n    } else {\n      return this.fromBuffer(buf, ...rest)\n    }\n  }\n\n  static fromFastBuffer (...rest) {\n    return new this().fromFastBuffer(...rest)\n  }\n\n  /**\n     * Convert the object into a buffer, i.e. serialize the object. This method\n     * may block the main thread.\n     */\n  toBuffer (...rest) {\n    return this.toBw(...rest).toBuffer()\n  }\n\n  asyncToBuffer (...rest) {\n    return this.asyncToBw(...rest).then(bw => bw.toBuffer())\n  }\n\n  /**\n     * Sometimes the toBuffer method has cryptography and blocks the main thread,\n     * and we need a non-blocking way to serialize an object. That is what\n     * toFastBuffer is. Of course it defaults to just using toBuffer if an object\n     * hasn't implemented it. If your regular toBuffer method blocks, like with\n     * Bip32, then you should implement this method to be non-blocking. This\n     * method is used to send objects to the workers. i.e., for converting a\n     * Bip32 object to a string, we need to encode it as a buffer in a\n     * non-blocking manner with toFastBuffer, send it to a worker, then the\n     * worker converts it to a string, which is a blocking operation.\n     *\n     * It is very common to want to convert a blank object to a zero length\n     * buffer, so we can transport a blank object to a worker. So that behavior\n     * is included by default.\n     */\n  toFastBuffer (...rest) {\n    if (Object.keys(this).length === 0) {\n      return Buffer.alloc(0)\n    } else {\n      return this.toBuffer(...rest)\n    }\n  }\n\n  fromHex (hex, ...rest) {\n    if (!isHex(hex)) {\n      throw new Error('invalid hex string')\n    }\n    const buf = Buffer.from(hex, 'hex')\n    return this.fromBuffer(buf, ...rest)\n  }\n\n  static fromHex (hex, ...rest) {\n    return new this().fromHex(hex, ...rest)\n  }\n\n  asyncFromHex (hex, ...rest) {\n    if (!isHex(hex)) {\n      throw new Error('invalid hex string')\n    }\n    const buf = Buffer.from(hex, 'hex')\n    return this.asyncFromBuffer(buf, ...rest)\n  }\n\n  static asyncFromHex (hex, ...rest) {\n    return new this().asyncFromHex(hex, ...rest)\n  }\n\n  fromFastHex (hex, ...rest) {\n    if (!isHex(hex)) {\n      throw new Error('invalid hex string')\n    }\n    const buf = Buffer.from(hex, 'hex')\n    return this.fromFastBuffer(buf, ...rest)\n  }\n\n  static fromFastHex (hex, ...rest) {\n    return new this().fromFastHex(hex, ...rest)\n  }\n\n  toHex (...rest) {\n    return this.toBuffer(...rest).toString('hex')\n  }\n\n  asyncToHex (...rest) {\n    return this.asyncToBuffer(...rest).then(buf => buf.toString('hex'))\n  }\n\n  toFastHex (...rest) {\n    return this.toFastBuffer(...rest).toString('hex')\n  }\n\n  fromString (str, ...rest) {\n    if (typeof str !== 'string') {\n      throw new Error('str must be a string')\n    }\n    return this.fromHex(str, ...rest)\n  }\n\n  static fromString (str, ...rest) {\n    return new this().fromString(str, ...rest)\n  }\n\n  asyncFromString (str, ...rest) {\n    if (typeof str !== 'string') {\n      throw new Error('str must be a string')\n    }\n    return this.asyncFromHex(str, ...rest)\n  }\n\n  static asyncFromString (str, ...rest) {\n    return new this().asyncFromString(str, ...rest)\n  }\n\n  toString (...rest) {\n    return this.toHex(...rest)\n  }\n\n  asyncToString (...rest) {\n    return this.asyncToHex(...rest)\n  }\n\n  fromJSON (json) {\n    throw new Error('not implemented')\n  }\n\n  static fromJSON (json, ...rest) {\n    return new this().fromJSON(json, ...rest)\n  }\n\n  asyncFromJSON (json, ...rest) {\n    throw new Error('not implemented')\n  }\n\n  static asyncFromJSON (json, ...rest) {\n    return new this().asyncFromJSON(json, ...rest)\n  }\n\n  toJSON () {\n    var json = {}\n    for (var val in this) {\n      // arrays\n      if (Array.isArray(this[val])) {\n        const arr = []\n        for (var i in this[val]) {\n          if (typeof this[val][i].toJSON === 'function') {\n            arr.push(this[val][i].toJSON())\n          } else {\n            arr.push(JSON.stringify(this[val][i]))\n          }\n        }\n        json[val] = arr\n        // objects\n      } else if (this[val] === null) {\n        json[val] = this[val]\n      } else if (\n        typeof this[val] === 'object' &&\n          typeof this[val].toJSON === 'function'\n      ) {\n        json[val] = this[val].toJSON()\n        // booleans, numbers, and strings\n      } else if (\n        typeof this[val] === 'boolean' ||\n          typeof this[val] === 'number' ||\n          typeof this[val] === 'string'\n      ) {\n        json[val] = this[val]\n        // buffers\n      } else if (Buffer.isBuffer(this[val])) {\n        json[val] = this[val].toString('hex')\n        // map\n      } else if (this[val] instanceof Map) {\n        json[val] = JSON.stringify(this[val])\n        // throw an error for objects that do not implement toJSON\n      } else if (typeof this[val] === 'object') {\n        throw new Error('not implemented')\n      }\n    }\n    return json\n    // throw new Error('not implemented')\n  }\n\n  asyncToJSON () {\n    throw new Error('not implemented')\n  }\n\n  clone () {\n    // TODO: Should this be more intelligent about picking which clone method\n    // to default to?\n    return this.cloneByJSON()\n  }\n\n  cloneByBuffer () {\n    return new this.constructor().fromBuffer(this.toBuffer())\n  }\n\n  cloneByFastBuffer () {\n    return new this.constructor().fromFastBuffer(this.toFastBuffer())\n  }\n\n  cloneByHex () {\n    return new this.constructor().fromHex(this.toHex())\n  }\n\n  cloneByString () {\n    return new this.constructor().fromString(this.toString())\n  }\n\n  cloneByJSON () {\n    return new this.constructor().fromJSON(this.toJSON())\n  }\n}\n\nexport { Struct }\n","/**\n * Base58 Encoding\n * ===============\n *\n * Base58 (no check)\n */\n'use strict'\n\nimport bs58 from 'bs58'\nimport { Struct } from './struct'\n\nclass Base58 extends Struct {\n  constructor (buf) {\n    super({ buf })\n  }\n\n  fromHex (hex) {\n    return this.fromBuffer(Buffer.from(hex, 'hex'))\n  }\n\n  toHex () {\n    return this.toBuffer().toString('hex')\n  }\n\n  static encode (buf) {\n    if (!Buffer.isBuffer(buf)) {\n      throw new Error('Input should be a buffer')\n    }\n    return bs58.encode(buf)\n  }\n\n  static decode (str) {\n    if (typeof str !== 'string') {\n      throw new Error('Input should be a string')\n    }\n    return Buffer.from(bs58.decode(str))\n  }\n\n  fromBuffer (buf) {\n    this.buf = buf\n    return this\n  }\n\n  fromString (str) {\n    const buf = Base58.decode(str)\n    this.buf = buf\n    return this\n  }\n\n  toBuffer () {\n    return this.buf\n  }\n\n  toString () {\n    return Base58.encode(this.buf)\n  }\n}\n\nexport { Base58 }\n","/**\n * Constant-Time Buffer Compare\n * ============================\n *\n * A constant-time comparison function. This should be used in any security\n * sensitive code where leaking timing information may lead to lessened\n * security. Note that if the buffers are not equal in length, this function\n * loops for the longest buffer, which may not be necessary. Usually this\n * function should be used for buffers that would otherwise be equal length,\n * such as a hash, particularly Hmacs.\n *\n * The algorithm here, which is XORs each byte (or, if undefined, 0) with the\n * corresponding other byte, and then ORs that with a running total (d), is\n * adapted from here:\n *\n * https://groups.google.com/forum/#!topic/keyczar-discuss/VXHsoJSLKhM\n */\n'use strict'\nconst cmp = (buf1, buf2) => {\n  if (!Buffer.isBuffer(buf1) || !Buffer.isBuffer(buf2)) {\n    throw new Error('buf1 and buf2 must be buffers')\n  }\n  if (buf1.length !== buf2.length) {\n    return false\n  }\n\n  let d = 0\n  for (let i = 0; i < buf1.length; i++) {\n    const x = buf1[i]\n    const y = buf2[i]\n    d |= x ^ y\n  }\n\n  return d === 0\n}\n\nexport { cmp }\n","/**\n * WorkersResult\n * =============\n *\n * A response sent back from a worker to the main thread. Contains the \"result\"\n * of the computation in the form of a buffer, resbuf. If the actual result is\n * an object with a .toFastBuffer method, the object is converted to a buffer\n * using that method. Otherwise it is JSON serialized into a buffer. The result\n * can also be an error, in which case the isError flag is set.\n */\n'use strict'\n\nimport { Bw } from './bw'\nimport { Struct } from './struct'\n\nclass WorkersResult extends Struct {\n  constructor (resbuf, isError, id) {\n    super({ resbuf, isError, id })\n  }\n\n  fromResult (result, id) {\n    if (result.toFastBuffer) {\n      this.resbuf = result.toFastBuffer()\n    } else if (Buffer.isBuffer(result)) {\n      this.resbuf = result\n    } else {\n      this.resbuf = Buffer.from(JSON.stringify(result))\n    }\n    this.isError = false\n    this.id = id\n    return this\n  }\n\n  static fromResult (result, id) {\n    return new this().fromResult(result, id)\n  }\n\n  fromError (error, id) {\n    this.resbuf = Buffer.from(JSON.stringify(error.message))\n    this.isError = true\n    this.id = id\n    return this\n  }\n\n  toBw (bw) {\n    if (!bw) {\n      bw = new Bw()\n    }\n    bw.writeVarIntNum(this.resbuf.length)\n    bw.write(this.resbuf)\n    bw.writeUInt8(Number(this.isError))\n    bw.writeVarIntNum(this.id)\n    return bw\n  }\n\n  fromBr (br) {\n    const resbuflen = br.readVarIntNum()\n    this.resbuf = br.read(resbuflen)\n    this.isError = Boolean(br.readUInt8())\n    this.id = br.readVarIntNum()\n    return this\n  }\n}\n\nexport { WorkersResult }\n","/**\n * Workers\n * =======\n *\n * Workers manages either processes (in node) or threads (in a browser). The\n * workers are intended to handle CPU-heavy tasks that block IO. This class is\n * a little unusual in that it must use different interfaces whether in node or\n * in the browser. In node, we use node's build-in child_process fork to create\n * new workers we can communicate with. In the browser, we use web workers.\n * Unfortunately, node and web browsers do not have a common interface for\n * workers. There is a node module called webworker-threads for node that\n * mimics the browser's web workers, but unfortunately it does not support\n * require(), and thus isn't very useful in our case. Therefore we fall back to\n * process forks.\n *\n * You probably don't need to use this class directly. Use Work, which will\n * automatically spawn new workers if needed.\n */\n'use strict'\n\nimport { WorkersResult } from './workers-result'\n\nlet globalWorkers\n\nclass Workers {\n  constructor (\n    nativeWorkers = [],\n    lastid = 0,\n    incompconsteRes = [],\n    promisemap = new Map()\n  ) {\n    this.nativeWorkers = nativeWorkers\n    this.lastid = lastid\n    this.incompconsteRes = incompconsteRes\n    this.promisemap = promisemap\n  }\n\n  asyncObjectMethod (obj, methodname, args, id = this.lastid + 1) {\n    if (!args) {\n      throw new Error('must specify args')\n    }\n    const result = obj[methodname](...args)\n    const workersResult = new WorkersResult().fromResult(result, id)\n    return workersResult\n  }\n\n  static asyncObjectMethod (obj, methodname, args, id) {\n    if (!globalWorkers) {\n      globalWorkers = new Workers()\n    }\n    return globalWorkers.asyncObjectMethod(obj, methodname, args, id)\n  }\n\n  asyncClassMethod (classObj, methodname, args, id = this.lastid + 1) {\n    if (!args) {\n      throw new Error('must specify args')\n    }\n    const result = classObj[methodname](...args)\n    const workersResult = new WorkersResult().fromResult(result, id)\n    return workersResult\n  }\n\n  static asyncClassMethod (classObj, methodname, args, id) {\n    if (!globalWorkers) {\n      globalWorkers = new Workers()\n    }\n    return globalWorkers.asyncClassMethod(classObj, methodname, args, id)\n  }\n\n  static endGlobalWorkers () {\n    if (globalWorkers && !process.browser) {\n      globalWorkers = undefined\n    }\n  }\n}\n\nexport { Workers }\n","/**\n * Hash\n * ====\n *\n * Some hash functions are used through out bitcoin. We expose them here as a\n * convenience.\n */\n'use strict'\n\nimport { Workers } from './workers'\nimport hashjs from 'hash.js'\n\nclass Hash {}\n\nHash.sha1 = function (buf) {\n  if (!Buffer.isBuffer(buf)) {\n    throw new Error('sha1 hash must be of a buffer')\n  }\n  const Sha1 = hashjs.sha1\n  const hash = new Sha1().update(buf).digest()\n  return Buffer.from(hash)\n}\n\nHash.sha1.blockSize = 512\n\nHash.asyncSha1 = async function (buf) {\n  const args = [buf]\n  const workersResult = await Workers.asyncClassMethod(Hash, 'sha1', args)\n  return workersResult.resbuf\n}\n\nHash.sha256 = function (buf) {\n  if (!Buffer.isBuffer(buf)) {\n    throw new Error('sha256 hash must be of a buffer')\n  }\n  const Sha256 = hashjs.sha256\n  const hash = new Sha256().update(buf).digest()\n  return Buffer.from(hash)\n}\n\nHash.sha256.blockSize = 512\n\nHash.asyncSha256 = async function (buf) {\n  const args = [buf]\n  const workersResult = await Workers.asyncClassMethod(Hash, 'sha256', args)\n  return workersResult.resbuf\n}\n\nHash.sha256Sha256 = function (buf) {\n  try {\n    return Hash.sha256(Hash.sha256(buf))\n  } catch (e) {\n    throw new Error('sha256Sha256 hash must be of a buffer: ' + e)\n  }\n}\n\nHash.asyncSha256Sha256 = async function (buf) {\n  const args = [buf]\n  const workersResult = await Workers.asyncClassMethod(\n    Hash,\n    'sha256Sha256',\n    args\n  )\n  return workersResult.resbuf\n}\n\nHash.ripemd160 = function (buf) {\n  if (!Buffer.isBuffer(buf)) {\n    throw new Error('ripemd160 hash must be of a buffer')\n  }\n  const Ripemd160 = hashjs.ripemd160\n  const hash = new Ripemd160().update(buf).digest()\n  return Buffer.from(hash)\n}\n\nHash.asyncRipemd160 = async function (buf) {\n  const args = [buf]\n  const workersResult = await Workers.asyncClassMethod(Hash, 'ripemd160', args)\n  return workersResult.resbuf\n}\n\nHash.sha256Ripemd160 = function (buf) {\n  try {\n    return Hash.ripemd160(Hash.sha256(buf))\n  } catch (e) {\n    throw new Error('sha256Ripemd160 hash must be of a buffer: ' + e)\n  }\n}\n\nHash.asyncSha256Ripemd160 = async function (buf) {\n  const args = [buf]\n  const workersResult = await Workers.asyncClassMethod(\n    Hash,\n    'sha256Ripemd160',\n    args\n  )\n  return workersResult.resbuf\n}\n\nHash.sha512 = function (buf) {\n  if (!Buffer.isBuffer(buf)) {\n    throw new Error('sha512 hash must be of a buffer')\n  }\n  const Sha512 = hashjs.sha512\n  const hash = new Sha512().update(buf).digest()\n  return Buffer.from(hash)\n}\n\nHash.asyncSha512 = async function (buf) {\n  const args = [buf]\n  const workersResult = await Workers.asyncClassMethod(Hash, 'sha512', args)\n  return workersResult.resbuf\n}\n\nHash.sha512.blockSize = 1024\n\nHash.hmac = function (hashFStr, data, key) {\n  if (hashFStr !== 'sha1' && hashFStr !== 'sha256' && hashFStr !== 'sha512') {\n    throw new Error('invalid choice of hash function')\n  }\n\n  const hashf = Hash[hashFStr]\n\n  if (!Buffer.isBuffer(data) || !Buffer.isBuffer(key)) {\n    throw new Error('data and key must be buffers')\n  }\n\n  // http://en.wikipedia.org/wiki/Hash-based_message_authentication_code\n  // http://tools.ietf.org/html/rfc4868#section-2\n  const blockSize = hashf.blockSize / 8\n\n  if (key.length > blockSize) {\n    key = hashf(key)\n  }\n\n  if (key.length < blockSize) {\n    const fill = Buffer.alloc(blockSize)\n    fill.fill(0, key.length)\n    key.copy(fill)\n    key = fill\n  }\n\n  const oKeyPad = Buffer.alloc(blockSize)\n  const iKeyPad = Buffer.alloc(blockSize)\n  for (let i = 0; i < blockSize; i++) {\n    oKeyPad[i] = 0x5c ^ key[i]\n    iKeyPad[i] = 0x36 ^ key[i]\n  }\n\n  return hashf(\n    Buffer.concat([oKeyPad, hashf(Buffer.concat([iKeyPad, data]))])\n  )\n}\n\nHash.sha1Hmac = function (data, key) {\n  return Hash.hmac('sha1', data, key)\n}\n\nHash.asyncSha1Hmac = async function (data, key) {\n  const args = [data, key]\n  const workersResult = await Workers.asyncClassMethod(Hash, 'sha1Hmac', args)\n  return workersResult.resbuf\n}\n\nHash.sha1Hmac.bitsize = 160\n\nHash.sha256Hmac = function (data, key) {\n  return Hash.hmac('sha256', data, key)\n}\n\nHash.asyncSha256Hmac = async function (data, key) {\n  const args = [data, key]\n  const workersResult = await Workers.asyncClassMethod(Hash, 'sha256Hmac', args)\n  return workersResult.resbuf\n}\n\nHash.sha256Hmac.bitsize = 256\n\nHash.sha512Hmac = function (data, key) {\n  return Hash.hmac('sha512', data, key)\n}\n\nHash.asyncSha512Hmac = async function (data, key) {\n  const args = [data, key]\n  const workersResult = await Workers.asyncClassMethod(Hash, 'sha512Hmac', args)\n  return workersResult.resbuf\n}\n\nHash.sha512Hmac.bitsize = 512\n\nexport { Hash }\n","/**\n * Base58 Check Encoding\n * =====================\n *\n * Base58 check encoding. The usual way to use it is\n * new Base58Check(buf).toString() or new Base58Check(str).toBuffer().\n */\n'use strict'\n\nimport { Base58 } from './base-58'\nimport { cmp } from './cmp'\nimport { Hash } from './hash'\nimport { Struct } from './struct'\n\nclass Base58Check extends Struct {\n  constructor (buf) {\n    super({ buf })\n  }\n\n  fromHex (hex) {\n    return this.fromBuffer(Buffer.from(hex, 'hex'))\n  }\n\n  toHex () {\n    return this.toBuffer().toString('hex')\n  }\n\n  static decode (s) {\n    if (typeof s !== 'string') {\n      throw new Error('Input must be a string')\n    }\n\n    const buf = Base58.decode(s)\n\n    if (buf.length < 4) {\n      throw new Error('Input string too short')\n    }\n\n    const data = buf.slice(0, -4)\n    const csum = buf.slice(-4)\n\n    const hash = Hash.sha256Sha256(data)\n    const hash4 = hash.slice(0, 4)\n\n    if (!cmp(csum, hash4)) {\n      throw new Error('Checksum mismatch')\n    }\n\n    return data\n  }\n\n  static encode (buf) {\n    if (!Buffer.isBuffer(buf)) {\n      throw new Error('Input must be a buffer')\n    }\n    const checkedBuf = Buffer.alloc(buf.length + 4)\n    const hash = Hash.sha256Sha256(buf)\n    buf.copy(checkedBuf)\n    hash.copy(checkedBuf, buf.length)\n    return Base58.encode(checkedBuf)\n  }\n\n  fromBuffer (buf) {\n    this.buf = buf\n    return this\n  }\n\n  fromString (str) {\n    const buf = Base58Check.decode(str)\n    this.buf = buf\n    return this\n  }\n\n  toBuffer () {\n    return this.buf\n  }\n\n  toString () {\n    return Base58Check.encode(this.buf)\n  }\n}\n\nexport { Base58Check }\n","'use strict'\n\nclass Config {\n  constructor (values) {\n    this.keyDefined = (key) => key in values\n    this.getValue = (key) => values[key]\n  }\n\n  get (key) {\n    if (this.keyDefined(key)) {\n      return this.getValue(key)\n    } else {\n      throw new Error(`Unknown configuration: ${key}`)\n    }\n  }\n}\n\nclass ConfigBuilder {\n  constructor () {\n    this.variables = {}\n  }\n\n  build () {\n    return new Config(this.variables)\n  }\n\n  addValue (key, value) {\n    if (value === undefined) {\n      throw new Error(`Failed to add \"${key}\" property. The value cannot be undefined`)\n    }\n    if (key in this.variables) {\n      throw new Error(`\"${key}\" already has a value defined.`)\n    }\n    this.variables[key] = value\n    return this\n  }\n\n  addValueWithDefault (key, value, defaultValue) {\n    if (defaultValue === undefined) {\n      throw new Error(`Failed to add \"${key}\" property. Default value cannot be undefined`)\n    }\n    return this.addValue(key, value === undefined ? defaultValue : value)\n  }\n}\n\nconst config = new ConfigBuilder()\n  .addValue('NETWORK', process.env.NETWORK || 'mainnet')\n  .build()\n\nexport { config }\n","/**\n * Constants\n * =========\n *\n * Constants used to distinguish mainnet from testnet.\n */\n'use strict'\nimport { config } from './config'\n\nconst Constants = {}\n\nConstants.Mainnet = {\n  MaxSize: 0x02000000, // MAX_SIZE\n  Port: 8333,\n  Address: {\n    pubKeyHash: 0x00,\n    payToScriptHash: 0x05\n  },\n  Bip32: {\n    pubKey: 0x0488b21e,\n    privKey: 0x0488ade4\n  },\n  Block: {\n    maxNBits: 0x1d00ffff,\n    magicNum: 0xe3e1f3e8\n  },\n  Msg: {\n    magicNum: 0xe3e1f3e8,\n    versionBytesNum: 70015 // as of Bitcoin SV v1.0.5\n  },\n  PrivKey: {\n    versionByteNum: 0x80\n  },\n  TxBuilder: {\n    dust: 546, // number of satoshis that an output can't be less than\n    feePerKbNum: 0.00000500e8\n  },\n  Workers: {\n    // Cannot be 5 seconds. This is actually too low for low end devices. We\n    // have found by experimenting with Chrome developer tools that 60 seconds\n    // works on low end mobile.\n    timeout: 60000\n  }\n}\n\nConstants.Testnet = Object.assign({}, Constants.Mainnet, {\n  Port: 18333,\n  Address: {\n    pubKeyHash: 0x6f,\n    payToScriptHash: 0xc4\n  },\n  Bip32: {\n    pubKey: 0x043587cf,\n    privKey: 0x04358394\n  },\n  Block: {\n    maxNBits: 0x1d00ffff,\n    magicNum: 0xf4e5f3f4\n  },\n  Msg: {\n    magicNum: 0xf4e5f3f4,\n    versionBytesNum: 70015 // as of Bitcoin SV v1.0.5\n  },\n  PrivKey: {\n    versionByteNum: 0xef\n  }\n})\n\nConstants.Regtest = Object.assign({}, Constants.Mainnet, {\n  Port: 18444,\n  Address: {\n    pubKeyHash: 0x6f,\n    payToScriptHash: 0xc4\n  },\n  Bip32: {\n    pubKey: 0x043587cf,\n    privKey: 0x04358394\n  },\n  Block: {\n    maxNBits: 0x207fffff,\n    magicNum: 0xdab5bffa\n  },\n  Msg: {\n    magicNum: 0xdab5bffa,\n    versionBytesNum: 70015 // as of Bitcoin SV v1.0.5\n  },\n  PrivKey: {\n    versionByteNum: 0xef\n  }\n})\n\nConstants.STN = Object.assign({}, Constants.Mainnet, {\n  Port: 9333,\n  Address: {\n    pubKeyHash: 0x6f,\n    payToScriptHash: 0xc4\n  },\n  Bip32: {\n    pubKey: 0x043587cf,\n    privKey: 0x04358394\n  },\n  Block: {\n    maxNBits: 0x1d00ffff,\n    magicNum: 0xfbcec4f9\n  },\n  Msg: {\n    magicNum: 0xfbcec4f9,\n    versionBytesNum: 70015 // as of Bitcoin SV v1.0.5\n  },\n  PrivKey: {\n    versionByteNum: 0xef\n  }\n})\n\n/**\n * Yours Bitcoin can be globally configured to mainnet or testnet. Via the\n * inject pattern, you always have access to the other network at any time.\n * However, it is very convenient to be able to change the default\n * configuration. The default is mainnet, which can be changed to testnet.\n */\n// Constants.Default = Object.assign({}, Constants.Mainnet)\nif (config.get('NETWORK') === 'testnet') {\n  Constants.Default = Object.assign({}, Constants.Testnet)\n} else if (config.get('NETWORK') === 'mainnet') {\n  Constants.Default = Object.assign({}, Constants.Mainnet)\n} else if (config.get('NETWORK') === 'regtest') {\n  Constants.Default = Object.assign({}, Constants.Regtest)\n} else if (config.get('NETWORK') === 'stn') {\n  Constants.Default = Object.assign({}, Constants.STN)\n} else {\n  throw new Error(\n    `must set network in environment variable - mainnet, testnet, regtest or stn?, received ${config.get('NETWORK')}`\n  )\n}\n\nconst getConstants = (magicNum) => {\n  if (Constants.Mainnet.Msg.magicNum === magicNum) {\n    return Constants.Mainnet\n  } else if (Constants.Testnet.Msg.magicNum === magicNum) {\n    return Constants.Testnet\n  } else if (Constants.Regtest.Msg.magicNum === magicNum) {\n    return Constants.Regtest\n  } else if (Constants.STN.Msg.magicNum === magicNum) {\n    return Constants.STN\n  } else {\n    return Constants.Default\n  }\n}\n\nexport { Constants, getConstants }\n","/*\n * OpCode\n * ======\n *\n * An opCode is one of the operations in the bitcoin scripting language. Each\n * operation is just a number from 0-255, and it has a corresponding string,\n * e.g. \"OP_RETURN\", which comes from the name of that constant in the bitcoind\n * source code. The way you probably want to use this is with\n * new OpCode(str).toNumber() or new OpCode(num).toString()\n */\n'use strict'\n\nimport { Struct } from './struct'\n\nconst map = {\n  // push value\n  OP_FALSE: 0x00,\n  OP_0: 0x00,\n  OP_PUSHDATA1: 0x4c,\n  OP_PUSHDATA2: 0x4d,\n  OP_PUSHDATA4: 0x4e,\n  OP_1NEGATE: 0x4f,\n  OP_RESERVED: 0x50,\n  OP_TRUE: 0x51,\n  OP_1: 0x51,\n  OP_2: 0x52,\n  OP_3: 0x53,\n  OP_4: 0x54,\n  OP_5: 0x55,\n  OP_6: 0x56,\n  OP_7: 0x57,\n  OP_8: 0x58,\n  OP_9: 0x59,\n  OP_10: 0x5a,\n  OP_11: 0x5b,\n  OP_12: 0x5c,\n  OP_13: 0x5d,\n  OP_14: 0x5e,\n  OP_15: 0x5f,\n  OP_16: 0x60,\n\n  // control\n  OP_NOP: 0x61,\n  OP_VER: 0x62,\n  OP_IF: 0x63,\n  OP_NOTIF: 0x64,\n  OP_VERIF: 0x65,\n  OP_VERNOTIF: 0x66,\n  OP_ELSE: 0x67,\n  OP_ENDIF: 0x68,\n  OP_VERIFY: 0x69,\n  OP_RETURN: 0x6a,\n\n  // stack ops\n  OP_TOALTSTACK: 0x6b,\n  OP_FROMALTSTACK: 0x6c,\n  OP_2DROP: 0x6d,\n  OP_2DUP: 0x6e,\n  OP_3DUP: 0x6f,\n  OP_2OVER: 0x70,\n  OP_2ROT: 0x71,\n  OP_2SWAP: 0x72,\n  OP_IFDUP: 0x73,\n  OP_DEPTH: 0x74,\n  OP_DROP: 0x75,\n  OP_DUP: 0x76,\n  OP_NIP: 0x77,\n  OP_OVER: 0x78,\n  OP_PICK: 0x79,\n  OP_ROLL: 0x7a,\n  OP_ROT: 0x7b,\n  OP_SWAP: 0x7c,\n  OP_TUCK: 0x7d,\n\n  // data manipulation ops\n  OP_CAT: 0x7e,\n  OP_SUBSTR: 0x7f, // Replaced in BSV\n  OP_SPLIT: 0x7f,\n  OP_LEFT: 0x80, // Replaced in BSV\n  OP_NUM2BIN: 0x80,\n  OP_RIGHT: 0x81, // Replaced in BSV\n  OP_BIN2NUM: 0x81,\n  OP_SIZE: 0x82,\n\n  // bit logic\n  OP_INVERT: 0x83,\n  OP_AND: 0x84,\n  OP_OR: 0x85,\n  OP_XOR: 0x86,\n  OP_EQUAL: 0x87,\n  OP_EQUALVERIFY: 0x88,\n  OP_RESERVED1: 0x89,\n  OP_RESERVED2: 0x8a,\n\n  // numeric\n  OP_1ADD: 0x8b,\n  OP_1SUB: 0x8c,\n  OP_2MUL: 0x8d,\n  OP_2DIV: 0x8e,\n  OP_NEGATE: 0x8f,\n  OP_ABS: 0x90,\n  OP_NOT: 0x91,\n  OP_0NOTEQUAL: 0x92,\n\n  OP_ADD: 0x93,\n  OP_SUB: 0x94,\n  OP_MUL: 0x95,\n  OP_DIV: 0x96,\n  OP_MOD: 0x97,\n  OP_LSHIFT: 0x98,\n  OP_RSHIFT: 0x99,\n\n  OP_BOOLAND: 0x9a,\n  OP_BOOLOR: 0x9b,\n  OP_NUMEQUAL: 0x9c,\n  OP_NUMEQUALVERIFY: 0x9d,\n  OP_NUMNOTEQUAL: 0x9e,\n  OP_LESSTHAN: 0x9f,\n  OP_GREATERTHAN: 0xa0,\n  OP_LESSTHANOREQUAL: 0xa1,\n  OP_GREATERTHANOREQUAL: 0xa2,\n  OP_MIN: 0xa3,\n  OP_MAX: 0xa4,\n\n  OP_WITHIN: 0xa5,\n\n  // crypto\n  OP_RIPEMD160: 0xa6,\n  OP_SHA1: 0xa7,\n  OP_SHA256: 0xa8,\n  OP_HASH160: 0xa9,\n  OP_HASH256: 0xaa,\n  OP_CODESEPARATOR: 0xab,\n  OP_CHECKSIG: 0xac,\n  OP_CHECKSIGVERIFY: 0xad,\n  OP_CHECKMULTISIG: 0xae,\n  OP_CHECKMULTISIGVERIFY: 0xaf,\n\n  // expansion\n  OP_NOP1: 0xb0,\n  OP_NOP2: 0xb1,\n  OP_CHECKLOCKTIMEVERIFY: 0xb1,\n  OP_NOP3: 0xb2,\n  OP_CHECKSEQUENCEVERIFY: 0xb2,\n  OP_NOP4: 0xb3,\n  OP_NOP5: 0xb4,\n  OP_NOP6: 0xb5,\n  OP_NOP7: 0xb6,\n  OP_NOP8: 0xb7,\n  OP_NOP9: 0xb8,\n  OP_NOP10: 0xb9,\n\n  // template matching params\n  OP_SMALLDATA: 0xf9,\n  OP_SMALLINTEGER: 0xfa,\n  OP_PUBKEYS: 0xfb,\n  OP_PUBKEYHASH: 0xfd,\n  OP_PUBKEY: 0xfe,\n\n  OP_INVALIDOPCODE: 0xff\n}\n\nclass OpCode extends Struct {\n  constructor (num) {\n    super({ num })\n  }\n\n  fromNumber (num) {\n    this.num = num\n    return this\n  }\n\n  static fromNumber (num) {\n    return new this().fromNumber(num)\n  }\n\n  toNumber () {\n    return this.num\n  }\n\n  fromString (str) {\n    const num = map[str]\n    if (num === undefined) {\n      throw new Error('Invalid opCodeStr')\n    }\n    this.num = num\n    return this\n  }\n\n  static fromString (str) {\n    return new this().fromString(str)\n  }\n\n  toString () {\n    const str = OpCode.str[this.num]\n    if (str === undefined) {\n      if (this.num > 0 && this.num < OpCode.OP_PUSHDATA1) {\n        return this.num.toString()\n      }\n      throw new Error('OpCode does not have a string representation')\n    }\n    return str\n  }\n}\n\nOpCode.str = {}\n\nfor (const opCodeStr in map) {\n  OpCode[opCodeStr] = map[opCodeStr]\n\n  if (Object.prototype.hasOwnProperty.call(map, opCodeStr)) {\n    OpCode.str[map[opCodeStr]] = opCodeStr\n  }\n}\n\nexport { OpCode }\n","/**\n * Point (on secp256k1)\n * ====================\n *\n * A point is a point on the secp256k1 curve which is the elliptic curve used\n * by bitcoin. This code is a wrapper for Fedor Indutny's Point class from his\n * elliptic library. This code adds a few minor conveniences, but is mostly the\n * same. Since Fedor's code returns points and big numbers that are instances\n * of his point and big number classes, we have to wrap all the methods such as\n * getX() to return the Yours Bitcoin point and big number types.\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport elliptic from 'bitcoin-elliptic'\n\nconst ec = elliptic.curves.secp256k1\nconst _point = ec.curve.point()\nconst _Point = _point.constructor\n\nclass Point extends _Point {\n  constructor (x, y, isRed) {\n    super(ec.curve, x, y, isRed)\n  }\n\n  static fromX (isOdd, x) {\n    const _point = ec.curve.pointFromX(x, isOdd)\n    const point = Object.create(Point.prototype)\n    return point.copyFrom(_point)\n  }\n\n  copyFrom (point) {\n    if (!(point instanceof _Point)) {\n      throw new Error('point should be an external point')\n    }\n    Object.keys(point).forEach(\n      function (key) {\n        this[key] = point[key]\n      }.bind(this)\n    )\n    return this\n  }\n\n  add (p) {\n    p = _Point.prototype.add.call(this, p)\n    const point = Object.create(Point.prototype)\n    return point.copyFrom(p)\n  }\n\n  mul (bn) {\n    if (!bn.lt(Point.getN())) {\n      throw new Error('point mul out of range')\n    }\n    const p = _Point.prototype.mul.call(this, bn)\n    const point = Object.create(Point.prototype)\n    return point.copyFrom(p)\n  }\n\n  mulAdd (bn1, point, bn2) {\n    const p = _Point.prototype.mulAdd.call(this, bn1, point, bn2)\n    point = Object.create(Point.prototype)\n    return point.copyFrom(p)\n  }\n\n  getX () {\n    const _x = _Point.prototype.getX.call(this)\n    const x = Object.create(Bn.prototype)\n    _x.copy(x)\n    return x\n  }\n\n  getY () {\n    const _y = _Point.prototype.getY.call(this)\n    const y = Object.create(Bn.prototype)\n    _y.copy(y)\n    return y\n  }\n\n  fromX (isOdd, x) {\n    const point = Point.fromX(isOdd, x)\n    return this.copyFrom(point)\n  }\n\n  toJSON () {\n    return {\n      x: this.getX().toString(),\n      y: this.getY().toString()\n    }\n  }\n\n  fromJSON (json) {\n    const x = new Bn().fromString(json.x)\n    const y = new Bn().fromString(json.y)\n    const point = new Point(x, y)\n    return this.copyFrom(point)\n  }\n\n  toString () {\n    return JSON.stringify(this.toJSON())\n  }\n\n  fromString (str) {\n    const json = JSON.parse(str)\n    const p = new Point().fromJSON(json)\n    return this.copyFrom(p)\n  }\n\n  static getG () {\n    const _g = ec.curve.g\n    const g = Object.create(Point.prototype)\n    return g.copyFrom(_g)\n  }\n\n  static getN () {\n    return new Bn(ec.curve.n.toArray())\n  }\n\n  // https://www.iacr.org/archive/pkc2003/25670211/25670211.pdf\n  validate () {\n    const p2 = Point.fromX(this.getY().isOdd(), this.getX())\n    if (!(p2.getY().cmp(this.getY()) === 0)) {\n      throw new Error('Invalid y value of public key')\n    }\n    if (\n      !(this.getX().gt(-1) && this.getX().lt(Point.getN())) ||\n        !(this.getY().gt(-1) && this.getY().lt(Point.getN()))\n    ) {\n      throw new Error('Point does not lie on the curve')\n    }\n    return this\n  }\n}\n\nexport { Point }\n","/**\n * Public Key\n * ==========\n *\n * A public key corresponds to a private key. If you have a private key, you\n * can find the corresponding public key with new PubKey().fromPrivKey(privKey).\n */\n'use strict'\n\nimport { Point } from './point'\nimport { Bn } from './bn'\nimport { Bw } from './bw'\nimport { Struct } from './struct'\nimport { Workers } from './workers'\n\nclass PubKey extends Struct {\n  constructor (point, compressed) {\n    super({ point, compressed })\n  }\n\n  fromJSON (json) {\n    this.fromFastHex(json)\n    return this\n  }\n\n  toJSON () {\n    return this.toFastHex()\n  }\n\n  fromPrivKey (privKey) {\n    this.fromObject({\n      point: Point.getG().mul(privKey.bn),\n      compressed: privKey.compressed\n    })\n    return this\n  }\n\n  static fromPrivKey (privKey) {\n    return new this().fromPrivKey(privKey)\n  }\n\n  async asyncFromPrivKey (privKey) {\n    const workersResult = await Workers.asyncObjectMethod(this, 'fromPrivKey', [\n      privKey\n    ])\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static asyncFromPrivKey (privKey) {\n    return new this().asyncFromPrivKey(privKey)\n  }\n\n  fromBuffer (buf, strict) {\n    return this.fromDer(buf, strict)\n  }\n\n  async asyncFromBuffer (buf, strict) {\n    const args = [buf, strict]\n    const workersResult = await Workers.asyncObjectMethod(\n      this,\n      'fromBuffer',\n      args\n    )\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  fromFastBuffer (buf) {\n    if (buf.length === 0) {\n      return this\n    }\n    const compressed = Boolean(buf[0])\n    buf = buf.slice(1)\n    this.fromDer(buf)\n    this.compressed = compressed\n    return this\n  }\n\n  /**\n     * In order to mimic the non-strict style of OpenSSL, set strict = false. For\n     * information and what prefixes 0x06 and 0x07 mean, in addition to the normal\n     * compressed and uncompressed public keys, see the message by Peter Wuille\n     * where he discovered these \"hybrid pubKeys\" on the mailing list:\n     * http://sourceforge.net/p/bitcoin/mailman/message/29416133/\n     */\n  fromDer (buf, strict) {\n    if (strict === undefined) {\n      strict = true\n    } else {\n      strict = false\n    }\n    if (\n      buf[0] === 0x04 ||\n        (!strict && (buf[0] === 0x06 || buf[0] === 0x07))\n    ) {\n      const xbuf = buf.slice(1, 33)\n      const ybuf = buf.slice(33, 65)\n      if (xbuf.length !== 32 || ybuf.length !== 32 || buf.length !== 65) {\n        throw new Error('LEngth of x and y must be 32 bytes')\n      }\n      const x = new Bn(xbuf)\n      const y = new Bn(ybuf)\n      this.point = new Point(x, y)\n      this.compressed = false\n    } else if (buf[0] === 0x03) {\n      const xbuf = buf.slice(1)\n      const x = new Bn(xbuf)\n      this.fromX(true, x)\n      this.compressed = true\n    } else if (buf[0] === 0x02) {\n      const xbuf = buf.slice(1)\n      const x = new Bn(xbuf)\n      this.fromX(false, x)\n      this.compressed = true\n    } else {\n      throw new Error('Invalid DER format pubKey')\n    }\n    return this\n  }\n\n  static fromDer (buf, strict) {\n    return new this().fromDer(buf, strict)\n  }\n\n  fromString (str) {\n    this.fromDer(Buffer.from(str, 'hex'))\n    return this\n  }\n\n  fromX (odd, x) {\n    if (typeof odd !== 'boolean') {\n      throw new Error('Must specify whether y is odd or not (true or false)')\n    }\n    this.point = Point.fromX(odd, x)\n    return this\n  }\n\n  static fromX (odd, x) {\n    return new this().fromX(odd, x)\n  }\n\n  toBuffer () {\n    const compressed = this.compressed === undefined ? true : this.compressed\n    return this.toDer(compressed)\n  }\n\n  toFastBuffer () {\n    if (!this.point) {\n      return Buffer.alloc(0)\n    }\n    const bw = new Bw()\n    const compressed =\n        this.compressed === undefined ? true : Boolean(this.compressed)\n    bw.writeUInt8(Number(compressed))\n    bw.write(this.toDer(false))\n    return bw.toBuffer()\n  }\n\n  toDer (compressed) {\n    compressed = compressed === undefined ? this.compressed : compressed\n    if (typeof compressed !== 'boolean') {\n      throw new Error(\n        'Must specify whether the public key is compressed or not (true or false)'\n      )\n    }\n\n    const x = this.point.getX()\n    const y = this.point.getY()\n\n    const xbuf = x.toBuffer({ size: 32 })\n    const ybuf = y.toBuffer({ size: 32 })\n\n    let prefix\n    if (!compressed) {\n      prefix = Buffer.from([0x04])\n      return Buffer.concat([prefix, xbuf, ybuf])\n    } else {\n      const odd = ybuf[ybuf.length - 1] % 2\n      if (odd) {\n        prefix = Buffer.from([0x03])\n      } else {\n        prefix = Buffer.from([0x02])\n      }\n      return Buffer.concat([prefix, xbuf])\n    }\n  }\n\n  toString () {\n    const compressed = this.compressed === undefined ? true : this.compressed\n    return this.toDer(compressed).toString('hex')\n  }\n\n  /**\n     * Translated from bitcoind's IsCompressedOrUncompressedPubKey\n     */\n  static isCompressedOrUncompressed (buf) {\n    if (buf.length < 33) {\n      //  Non-canonical public key: too short\n      return false\n    }\n    if (buf[0] === 0x04) {\n      if (buf.length !== 65) {\n        //  Non-canonical public key: invalid length for uncompressed key\n        return false\n      }\n    } else if (buf[0] === 0x02 || buf[0] === 0x03) {\n      if (buf.length !== 33) {\n        //  Non-canonical public key: invalid length for compressed key\n        return false\n      }\n    } else {\n      //  Non-canonical public key: neither compressed nor uncompressed\n      return false\n    }\n    return true\n  }\n\n  // https://www.iacr.org/archive/pkc2003/25670211/25670211.pdf\n  validate () {\n    if (this.point.isInfinity()) {\n      throw new Error('point: Point cannot be equal to Infinity')\n    }\n    if (this.point.eq(new Point(new Bn(0), new Bn(0)))) {\n      throw new Error('point: Point cannot be equal to 0, 0')\n    }\n    this.point.validate()\n    return this\n  }\n}\n\nexport { PubKey }\n","/**\n * Random Number Generator\n * =======================\n *\n * Random numbers are important in bitcoin primarily for generating private\n * keys. It is also important for creating signatures if you are using a random\n * value of k, but Yours Bitcoin defaults to using deterministic k. That means\n * computing a random private key, or a random seed for use in Bip39 or Bip32,\n * is the primary use of the random number generator.  Note that the simplicity\n * of this class is extremely carefully considered. It is easy to audit that\n * this code runs node's randomBytes function. It is also easy to audit that\n * the randomBytes method is correctly interpreted as\n * window.crypto.getRandomValues when this code is browserified by browserify,\n * and thus also works correctly in the browser. We deliberately do not do\n * anything else to this random number in order to minimize possible errors in\n * this absolutely critical code.\n */\n'use strict'\n\nimport randomBytes from 'randombytes'\n\nclass Random {}\n\nRandom.getRandomBuffer = function (size) {\n  return randomBytes(size)\n}\n\nexport { Random }\n","/**\n * Private Key\n * ===========\n *\n * A private key is used for signing transactions (or messages). The primary\n * way to use this is new PrivKey().fromRandom(), or new PrivKey().fromBuffer(buf).\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport { Point } from './point'\nimport { Constants } from './constants'\nimport { Base58Check } from './base-58-check'\nimport { Random } from './random'\nimport { Struct } from './struct'\n\nclass PrivKey extends Struct {\n  constructor (bn, compressed, constants = null) {\n    super({ bn, compressed })\n    constants = constants || Constants.Default.PrivKey\n    this.Constants = constants\n  }\n\n  fromJSON (json) {\n    this.fromHex(json)\n    return this\n  }\n\n  toJSON () {\n    return this.toHex()\n  }\n\n  fromRandom () {\n    let privBuf, bn, condition\n\n    do {\n      privBuf = Random.getRandomBuffer(32)\n      bn = new Bn().fromBuffer(privBuf)\n      condition = bn.lt(Point.getN())\n    } while (!condition)\n\n    this.fromObject({\n      bn: bn,\n      compressed: true\n    })\n    return this\n  }\n\n  static fromRandom () {\n    return new this().fromRandom()\n  }\n\n  toBuffer () {\n    let compressed = this.compressed\n\n    if (compressed === undefined) {\n      compressed = true\n    }\n\n    const privBuf = this.bn.toBuffer({ size: 32 })\n    let buf\n    if (compressed) {\n      buf = Buffer.concat([\n        Buffer.from([this.Constants.versionByteNum]),\n        privBuf,\n        Buffer.from([0x01])\n      ])\n    } else {\n      buf = Buffer.concat([Buffer.from([this.Constants.versionByteNum]), privBuf])\n    }\n\n    return buf\n  }\n\n  fromBuffer (buf) {\n    if (buf.length === 1 + 32 + 1 && buf[1 + 32 + 1 - 1] === 1) {\n      this.compressed = true\n    } else if (buf.length === 1 + 32) {\n      this.compressed = false\n    } else {\n      throw new Error(\n        'Length of privKey buffer must be 33 (uncompressed pubKey) or 34 (compressed pubKey)'\n      )\n    }\n\n    if (buf[0] !== this.Constants.versionByteNum) {\n      throw new Error('Invalid versionByteNum byte')\n    }\n\n    return this.fromBn(new Bn().fromBuffer(buf.slice(1, 1 + 32)))\n  }\n\n  toBn () {\n    return this.bn\n  }\n\n  fromBn (bn) {\n    this.bn = bn\n    return this\n  }\n\n  static fromBn (bn) {\n    return new this().fromBn(bn)\n  }\n\n  validate () {\n    if (!this.bn.lt(Point.getN())) {\n      throw new Error('Number must be less than N')\n    }\n    if (typeof this.compressed !== 'boolean') {\n      throw new Error(\n        'Must specify whether the corresponding public key is compressed or not (true or false)'\n      )\n    }\n    return this\n  }\n\n  /**\n     * Output the private key a Wallet Import Format (Wif) string.\n     */\n  toWif () {\n    return Base58Check.encode(this.toBuffer())\n  }\n\n  /**\n     * Input the private key from a Wallet Import Format (Wif) string.\n     */\n  fromWif (str) {\n    return this.fromBuffer(Base58Check.decode(str))\n  }\n\n  static fromWif (str) {\n    return new this().fromWif(str)\n  }\n\n  toString () {\n    return this.toWif()\n  }\n\n  fromString (str) {\n    return this.fromWif(str)\n  }\n}\n\nPrivKey.Mainnet = class extends PrivKey {\n  constructor (bn, compressed) {\n    super(bn, compressed, Constants.Mainnet.PrivKey)\n  }\n}\n\nPrivKey.Testnet = class extends PrivKey {\n  constructor (bn, compressed) {\n    super(bn, compressed, Constants.Testnet.PrivKey)\n  }\n}\n\nexport { PrivKey }\n","/**\n * Signature\n * =========\n *\n * A signature is the thing you make when you want to sign a transaction, or\n * the thing you want to verify if you want to ensure that someone signed a\n * transaction. It has an r and s value, which are the cryptographic big\n * numbers that define a signature. And since this is a bitcoin library, it\n * also has nHashType, which is the way to hash a transaction and is used in\n * the binary format of a signature when it is in a transaction. We also\n * support a public key recover value, recovery, allowing one to compute the\n * public key from a signature. The \"compressed\" value is also necessary to\n * accurately compute the public key from a signature.\n *\n * There are a few different formats of a signature in bitcoin. One is DER, the\n * other is the TxFormat which is the same as DER but with the nHashType byte\n * appended, and the final one is Compact, which is used by Bitcoin Signed\n * Message (Bsm).\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport { Struct } from './struct'\n\n/**\n   * r, s: big numbers constiting a cryptographic signature\n   * nHashType: found at the end of a signature in a transaction\n   * recovery: public key recovery number\n   * compressed: whether the recovered pubKey is compressed\n   */\nclass Sig extends Struct {\n  constructor (r, s, nHashType, recovery, compressed) {\n    super({ r, s, nHashType, recovery, compressed })\n  }\n\n  fromBuffer (buf) {\n    try {\n      return this.fromDer(buf, true)\n    } catch (e) {}\n    try {\n      return this.fromCompact(buf)\n    } catch (e) {}\n    return this.fromTxFormat(buf)\n  }\n\n  toBuffer () {\n    if (this.nHashType !== undefined) {\n      return this.toTxFormat()\n    } else if (this.recovery !== undefined) {\n      return this.toCompact()\n    }\n    return this.toDer()\n  }\n\n  // The format used by \"message\"\n  fromCompact (buf) {\n    let compressed = true\n    let recovery = buf.slice(0, 1)[0] - 27 - 4\n    if (recovery < 0) {\n      compressed = false\n      recovery = recovery + 4\n    }\n\n    if (\n      !(recovery === 0 || recovery === 1 || recovery === 2 || recovery === 3)\n    ) {\n      throw new Error('i must be 0, 1, 2, or 3')\n    }\n\n    this.compressed = compressed\n    this.recovery = recovery\n\n    const rsbuf = buf.slice(1)\n    this.fromRS(rsbuf)\n\n    return this\n  }\n\n  static fromCompact (buf) {\n    return new this().fromCompact(buf)\n  }\n\n  fromRS (rsbuf) {\n    const b2 = rsbuf.slice(0, 32)\n    const b3 = rsbuf.slice(32, 64)\n    if (b2.length !== 32) {\n      throw new Error('r must be 32 bytes')\n    }\n    if (b3.length !== 32 || rsbuf.length > 64) {\n      throw new Error('s must be 32 bytes')\n    }\n    this.r = new Bn().fromBuffer(b2)\n    this.s = new Bn().fromBuffer(b3)\n    return this\n  }\n\n  static fromRS (rsbuf) {\n    return new this().fromRS(rsbuf)\n  }\n\n  // The format used in a tx, except without the nHashType at the end\n  fromDer (buf, strict) {\n    const obj = Sig.parseDer(buf, strict)\n    this.r = obj.r\n    this.s = obj.s\n\n    return this\n  }\n\n  static fromDer (buf, strict) {\n    return new this().fromDer(buf, strict)\n  }\n\n  // The format used in a tx\n  fromTxFormat (buf) {\n    if (buf.length === 0) {\n      // allow setting a \"blank\" signature\n      this.r = new Bn(1)\n      this.s = new Bn(1)\n      this.nHashType = 1\n      return this\n    }\n    const nHashType = buf.readUInt8(buf.length - 1)\n    const derbuf = buf.slice(0, buf.length - 1)\n    this.fromDer(derbuf, false)\n    this.nHashType = nHashType\n    return this\n  }\n\n  static fromTxFormat (buf) {\n    return new this().fromTxFormat(buf)\n  }\n\n  fromString (str) {\n    return this.fromHex(str)\n  }\n\n  /**\n     * In order to mimic the non-strict DER encoding of OpenSSL, set strict = false.\n     */\n  static parseDer (buf, strict) {\n    if (strict === undefined) {\n      strict = true\n    }\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new Error('DER formatted signature should be a buffer')\n    }\n\n    const header = buf[0]\n\n    if (header !== 0x30) {\n      throw new Error('Header byte should be 0x30')\n    }\n\n    let length = buf[1]\n    const buflength = buf.slice(2).length\n    if (strict && length !== buflength) {\n      throw new Error('LEngth byte should length of what follows')\n    } else {\n      length = length < buflength ? length : buflength\n    }\n\n    const rheader = buf[2 + 0]\n    if (rheader !== 0x02) {\n      throw new Error('Integer byte for r should be 0x02')\n    }\n\n    const rlength = buf[2 + 1]\n    const rbuf = buf.slice(2 + 2, 2 + 2 + rlength)\n    const r = new Bn().fromBuffer(rbuf)\n    const rneg = buf[2 + 1 + 1] === 0x00\n    if (rlength !== rbuf.length) {\n      throw new Error('LEngth of r incorrect')\n    }\n\n    const sheader = buf[2 + 2 + rlength + 0]\n    if (sheader !== 0x02) {\n      throw new Error('Integer byte for s should be 0x02')\n    }\n\n    const slength = buf[2 + 2 + rlength + 1]\n    const sbuf = buf.slice(2 + 2 + rlength + 2, 2 + 2 + rlength + 2 + slength)\n    const s = new Bn().fromBuffer(sbuf)\n    const sneg = buf[2 + 2 + rlength + 2 + 2] === 0x00\n    if (slength !== sbuf.length) {\n      throw new Error('LEngth of s incorrect')\n    }\n\n    const sumlength = 2 + 2 + rlength + 2 + slength\n    if (length !== sumlength - 2) {\n      throw new Error('LEngth of signature incorrect')\n    }\n\n    const obj = {\n      header: header,\n      length: length,\n      rheader: rheader,\n      rlength: rlength,\n      rneg: rneg,\n      rbuf: rbuf,\n      r: r,\n      sheader: sheader,\n      slength: slength,\n      sneg: sneg,\n      sbuf: sbuf,\n      s: s\n    }\n\n    return obj\n  }\n\n  /**\n     * This function is translated from bitcoind's IsDERSignature and is used in\n     * the script interpreter.  This \"DER\" format actually includes an extra byte,\n     * the nHashType, at the end. It is really the tx format, not DER format.\n     *\n     * A canonical signature exists of: [30] [total len] [02] [len R] [R] [02] [len S] [S] [hashtype]\n     * Where R and S are not negative (their first byte has its highest bit not set), and not\n     * excessively padded (do not start with a 0 byte, unless an otherwise negative number follows,\n     * in which case a single 0 byte is necessary and even required).\n     *\n     * See https://bitcointalk.org/index.php?topic=8392.msg127623#msg127623\n     */\n  static IsTxDer (buf) {\n    if (buf.length < 9) {\n      //  Non-canonical signature: too short\n      return false\n    }\n    if (buf.length > 73) {\n      // Non-canonical signature: too long\n      return false\n    }\n    if (buf[0] !== 0x30) {\n      //  Non-canonical signature: wrong type\n      return false\n    }\n    if (buf[1] !== buf.length - 3) {\n      //  Non-canonical signature: wrong length marker\n      return false\n    }\n    const nLEnR = buf[3]\n    if (5 + nLEnR >= buf.length) {\n      //  Non-canonical signature: S length misplaced\n      return false\n    }\n    const nLEnS = buf[5 + nLEnR]\n    if (nLEnR + nLEnS + 7 !== buf.length) {\n      //  Non-canonical signature: R+S length mismatch\n      return false\n    }\n\n    const R = buf.slice(4)\n    if (buf[4 - 2] !== 0x02) {\n      //  Non-canonical signature: R value type mismatch\n      return false\n    }\n    if (nLEnR === 0) {\n      //  Non-canonical signature: R length is zero\n      return false\n    }\n    if (R[0] & 0x80) {\n      //  Non-canonical signature: R value negative\n      return false\n    }\n    if (nLEnR > 1 && R[0] === 0x00 && !(R[1] & 0x80)) {\n      //  Non-canonical signature: R value excessively padded\n      return false\n    }\n\n    const S = buf.slice(6 + nLEnR)\n    if (buf[6 + nLEnR - 2] !== 0x02) {\n      //  Non-canonical signature: S value type mismatch\n      return false\n    }\n    if (nLEnS === 0) {\n      //  Non-canonical signature: S length is zero\n      return false\n    }\n    if (S[0] & 0x80) {\n      //  Non-canonical signature: S value negative\n      return false\n    }\n    if (nLEnS > 1 && S[0] === 0x00 && !(S[1] & 0x80)) {\n      //  Non-canonical signature: S value excessively padded\n      return false\n    }\n    return true\n  }\n\n  /**\n     * Compares to bitcoind's IsLowDERSignature\n     * See also Ecdsa signature algorithm which enforces this.\n     * See also Bip 62, \"low S values in signatures\"\n     */\n  hasLowS () {\n    if (\n      this.s.lt(1) ||\n        this.s.gt(\n          Bn.fromBuffer(\n            Buffer.from(\n              '7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0',\n              'hex'\n            )\n          )\n        )\n    ) {\n      return false\n    }\n    return true\n  }\n\n  /**\n     * Ensures the nHashType is exactly equal to one of the standard options or combinations thereof.\n     * Translated from bitcoind's IsDefinedHashtypeSignature\n     */\n  hasDefinedHashType () {\n    if (\n      this.nHashType < Sig.SIGHASH_ALL ||\n        this.nHashType > Sig.SIGHASH_SINGLE\n    ) {\n      return false\n    }\n    return true\n  }\n\n  toCompact (recovery, compressed) {\n    recovery = typeof recovery === 'number' ? recovery : this.recovery\n    compressed =\n        typeof compressed === 'boolean' ? compressed : this.compressed\n\n    if (\n      !(recovery === 0 || recovery === 1 || recovery === 2 || recovery === 3)\n    ) {\n      throw new Error('recovery must be equal to 0, 1, 2, or 3')\n    }\n\n    let val = recovery + 27 + 4\n    if (compressed === false) {\n      val = val - 4\n    }\n    const b1 = Buffer.from([val])\n    const b2 = this.r.toBuffer({ size: 32 })\n    const b3 = this.s.toBuffer({ size: 32 })\n    return Buffer.concat([b1, b2, b3])\n  }\n\n  toRS () {\n    return Buffer.concat([\n      this.r.toBuffer({ size: 32 }),\n      this.s.toBuffer({ size: 32 })\n    ])\n  }\n\n  toDer () {\n    const rnbuf = this.r.toBuffer()\n    const snbuf = this.s.toBuffer()\n\n    const rneg = rnbuf[0] & 0x80\n    const sneg = snbuf[0] & 0x80\n\n    const rbuf = rneg ? Buffer.concat([Buffer.from([0x00]), rnbuf]) : rnbuf\n    const sbuf = sneg ? Buffer.concat([Buffer.from([0x00]), snbuf]) : snbuf\n\n    const length = 2 + rbuf.length + 2 + sbuf.length\n    const rlength = rbuf.length\n    const slength = sbuf.length\n    const rheader = 0x02\n    const sheader = 0x02\n    const header = 0x30\n\n    const der = Buffer.concat([\n      Buffer.from([header, length, rheader, rlength]),\n      rbuf,\n      Buffer.from([sheader, slength]),\n      sbuf\n    ])\n    return der\n  }\n\n  toTxFormat () {\n    const derbuf = this.toDer()\n    const buf = Buffer.alloc(1)\n    buf.writeUInt8(this.nHashType, 0)\n    return Buffer.concat([derbuf, buf])\n  }\n\n  toString () {\n    return this.toHex()\n  }\n}\n\nSig.SIGHASH_ALL = 0x00000001\nSig.SIGHASH_NONE = 0x00000002\nSig.SIGHASH_SINGLE = 0x00000003\nSig.SIGHASH_FORKID = 0x00000040\nSig.SIGHASH_ANYONECANPAY = 0x00000080\n\nexport { Sig }\n","/*\n * Script\n * ======\n *\n * Script is the scripting language built into bitcoin. The Script class lets\n * you create an instance of a script, e.g. for a scriptSig or a scriptPubKey.\n * It understands both the binary format, as well as two different string\n * formats. The default string format, to/fromString, is a custom format only\n * used by Yours Bitcoin because it is isomorphic to the binary format (or as\n * isomorphic as it can be ... since OP_0 and OP_FALSE have the same byte\n * value, and so do OP_1 and OP_TRUE). The bitcoind string format is also\n * support, but that format is not isomorphic (i.e., if you pull in a string\n * and then write it again, you are likely to get back a different string, even\n * if you don't use OP_0, OP_FALSE, OP_1, or OP_TRUE).\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport { Br } from './br'\nimport { Bw } from './bw'\nimport { cmp } from './cmp'\nimport { OpCode } from './op-code'\nimport { PubKey } from './pub-key'\nimport { Sig } from './sig'\nimport { Struct } from './struct'\n\nclass Script extends Struct {\n  constructor (chunks = []) {\n    super({ chunks })\n  }\n\n  fromJSON (json) {\n    return this.fromString(json)\n  }\n\n  toJSON () {\n    return this.toString()\n  }\n\n  fromBuffer (buf) {\n    this.chunks = []\n\n    const br = new Br(buf)\n    while (!br.eof()) {\n      const opCodeNum = br.readUInt8()\n\n      let len = 0\n      let buf = Buffer.from([])\n      if (opCodeNum > 0 && opCodeNum < OpCode.OP_PUSHDATA1) {\n        len = opCodeNum\n        this.chunks.push({\n          buf: br.read(len),\n          len: len,\n          opCodeNum: opCodeNum\n        })\n      } else if (opCodeNum === OpCode.OP_PUSHDATA1) {\n        try {\n          len = br.readUInt8()\n          buf = br.read(len)\n        } catch (err) {\n          br.read()\n        }\n        this.chunks.push({\n          buf: buf,\n          len: len,\n          opCodeNum: opCodeNum\n        })\n      } else if (opCodeNum === OpCode.OP_PUSHDATA2) {\n        try {\n          len = br.readUInt16LE()\n          buf = br.read(len)\n        } catch (err) {\n          br.read()\n        }\n        this.chunks.push({\n          buf: buf,\n          len: len,\n          opCodeNum: opCodeNum\n        })\n      } else if (opCodeNum === OpCode.OP_PUSHDATA4) {\n        try {\n          len = br.readUInt32LE()\n          buf = br.read(len)\n        } catch (err) {\n          br.read()\n        }\n        this.chunks.push({\n          buf: buf,\n          len: len,\n          opCodeNum: opCodeNum\n        })\n      } else {\n        this.chunks.push({\n          opCodeNum: opCodeNum\n        })\n      }\n    }\n\n    return this\n  }\n\n  toBuffer () {\n    const bw = new Bw()\n\n    for (let i = 0; i < this.chunks.length; i++) {\n      const chunk = this.chunks[i]\n      const opCodeNum = chunk.opCodeNum\n      bw.writeUInt8(opCodeNum)\n      if (chunk.buf) {\n        if (opCodeNum < OpCode.OP_PUSHDATA1) {\n          bw.write(chunk.buf)\n        } else if (opCodeNum === OpCode.OP_PUSHDATA1) {\n          bw.writeUInt8(chunk.len)\n          bw.write(chunk.buf)\n        } else if (opCodeNum === OpCode.OP_PUSHDATA2) {\n          bw.writeUInt16LE(chunk.len)\n          bw.write(chunk.buf)\n        } else if (opCodeNum === OpCode.OP_PUSHDATA4) {\n          bw.writeUInt32LE(chunk.len)\n          bw.write(chunk.buf)\n        }\n      }\n    }\n\n    return bw.toBuffer()\n  }\n\n  fromString (str) {\n    this.chunks = []\n    if (str === '' || str === undefined) {\n      return this\n    }\n\n    const tokens = str.split(' ')\n    let i = 0\n    while (i < tokens.length) {\n      const token = tokens[i]\n      let opCodeNum\n      try {\n        const opCode = new OpCode().fromString(token)\n        opCodeNum = opCode.toNumber()\n      } catch (err) {}\n\n      if (opCodeNum === undefined) {\n        opCodeNum = parseInt(token, 10)\n        if (opCodeNum > 0 && opCodeNum < OpCode.OP_PUSHDATA1) {\n          this.chunks.push({\n            buf: Buffer.from(tokens[i + 1].slice(2), 'hex'),\n            len: opCodeNum,\n            opCodeNum: opCodeNum\n          })\n          i = i + 2\n        } else if (opCodeNum === 0) {\n          this.chunks.push({\n            opCodeNum: 0\n          })\n          i = i + 1\n        } else {\n          throw new Error('Invalid script')\n        }\n      } else if (\n        opCodeNum === OpCode.OP_PUSHDATA1 ||\n          opCodeNum === OpCode.OP_PUSHDATA2 ||\n          opCodeNum === OpCode.OP_PUSHDATA4\n      ) {\n        if (tokens[i + 2].slice(0, 2) !== '0x') {\n          throw new Error('Pushdata data must start with 0x')\n        }\n        this.chunks.push({\n          buf: Buffer.from(tokens[i + 2].slice(2), 'hex'),\n          len: parseInt(tokens[i + 1], 10),\n          opCodeNum: opCodeNum\n        })\n        i = i + 3\n      } else {\n        this.chunks.push({\n          opCodeNum: opCodeNum\n        })\n        i = i + 1\n      }\n    }\n    return this\n  }\n\n  toString () {\n    let str = ''\n\n    for (let i = 0; i < this.chunks.length; i++) {\n      const chunk = this.chunks[i]\n      const opCodeNum = chunk.opCodeNum\n      if (!chunk.buf) {\n        if (OpCode.str[opCodeNum] !== undefined) {\n          str = str + ' ' + new OpCode(opCodeNum).toString()\n        } else {\n          str = str + ' ' + '0x' + opCodeNum.toString(16)\n        }\n      } else {\n        if (\n          opCodeNum === OpCode.OP_PUSHDATA1 ||\n            opCodeNum === OpCode.OP_PUSHDATA2 ||\n            opCodeNum === OpCode.OP_PUSHDATA4\n        ) {\n          str = str + ' ' + new OpCode(opCodeNum).toString()\n        }\n        str = str + ' ' + chunk.len\n        str = str + ' ' + '0x' + chunk.buf.toString('hex')\n      }\n    }\n\n    return str.substr(1)\n  }\n\n  /**\n     * Input the script from the script string format used in bitcoind data tests\n     */\n  fromBitcoindString (str) {\n    const bw = new Bw()\n    const tokens = str.split(' ')\n    let i\n    for (i = 0; i < tokens.length; i++) {\n      const token = tokens[i]\n      if (token === '') {\n        continue\n      }\n      if (token[0] === '0' && token[1] === 'x') {\n        const hex = token.slice(2)\n        bw.write(Buffer.from(hex, 'hex'))\n      } else if (token[0] === \"'\") {\n        const tstr = token.slice(1, token.length - 1)\n        const cbuf = Buffer.from(tstr)\n        const tbuf = new Script().writeBuffer(cbuf).toBuffer()\n        bw.write(tbuf)\n      } else if (OpCode['OP_' + token] !== undefined) {\n        const opstr = 'OP_' + token\n        const opCodeNum = OpCode[opstr]\n        bw.writeUInt8(opCodeNum)\n      } else if (typeof OpCode[token] === 'number') {\n        const opstr = token\n        const opCodeNum = OpCode[opstr]\n        bw.writeUInt8(opCodeNum)\n      } else if (!isNaN(parseInt(token, 10))) {\n        const bn = new Bn(token)\n        const script = new Script().writeBn(bn)\n        const tbuf = script.toBuffer()\n        bw.write(tbuf)\n      } else {\n        throw new Error('Could not determine type of script value')\n      }\n    }\n    const buf = bw.toBuffer()\n    return this.fromBuffer(buf)\n  }\n\n  static fromBitcoindString (str) {\n    return new this().fromBitcoindString(str)\n  }\n\n  /**\n     * Output the script to the script string format used in bitcoind data tests.\n     */\n  toBitcoindString () {\n    let str = ''\n    for (let i = 0; i < this.chunks.length; i++) {\n      const chunk = this.chunks[i]\n      if (chunk.buf) {\n        const buf = new Script([chunk]).toBuffer()\n        const hex = buf.toString('hex')\n        str = str + ' ' + '0x' + hex\n      } else if (OpCode.str[chunk.opCodeNum] !== undefined) {\n        const ostr = new OpCode(chunk.opCodeNum).toString()\n        str = str + ' ' + ostr.slice(3) // remove OP_\n      } else {\n        str = str + ' ' + '0x' + chunk.opCodeNum.toString(16)\n      }\n    }\n    return str.substr(1)\n  }\n\n  /**\n     * Input the script from the script string format used in bitcoind data tests\n     */\n  fromAsmString (str) {\n    this.chunks = []\n\n    const tokens = str.split(' ')\n    let i = 0\n    while (i < tokens.length) {\n      const token = tokens[i]\n      let opCode, opCodeNum\n      try {\n        opCode = OpCode.fromString(token)\n        opCodeNum = opCode.toNumber()\n      } catch (err) {\n        opCode = undefined\n        opCodeNum = undefined\n      }\n\n      // we start with two special cases, 0 and -1, which are handled specially in\n      // toASM. see _chunkToString.\n      if (token === '0') {\n        opCodeNum = 0\n        this.chunks.push({\n          opCodeNum: opCodeNum\n        })\n        i = i + 1\n      } else if (token === '-1') {\n        opCodeNum = OpCode.OP_1NEGATE\n        this.chunks.push({\n          opCodeNum: opCodeNum\n        })\n        i = i + 1\n      } else if (opCode === undefined) {\n        const hex = tokens[i]\n        const buf = Buffer.from(hex, 'hex')\n        if (buf.toString('hex') !== hex) {\n          throw new Error('invalid hex string in script')\n        }\n        const len = buf.length\n        if (len >= 0 && len < OpCode.OP_PUSHDATA1) {\n          opCodeNum = len\n        } else if (len < Math.pow(2, 8)) {\n          opCodeNum = OpCode.OP_PUSHDATA1\n        } else if (len < Math.pow(2, 16)) {\n          opCodeNum = OpCode.OP_PUSHDATA2\n        } else if (len < Math.pow(2, 32)) {\n          opCodeNum = OpCode.OP_PUSHDATA4\n        }\n        this.chunks.push({\n          buf: buf,\n          len: buf.length,\n          opCodeNum: opCodeNum\n        })\n        i = i + 1\n      } else {\n        this.chunks.push({\n          opCodeNum: opCodeNum\n        })\n        i = i + 1\n      }\n    }\n    return this\n  }\n\n  static fromAsmString (str) {\n    return new this().fromAsmString(str)\n  }\n\n  /**\n     * Output the script to the script string format used in bitcoind data tests.\n     */\n  toAsmString () {\n    var str = ''\n    for (var i = 0; i < this.chunks.length; i++) {\n      var chunk = this.chunks[i]\n      str += this._chunkToString(chunk)\n    }\n\n    return str.substr(1)\n  }\n\n  _chunkToString (chunk, type) {\n    var opCodeNum = chunk.opCodeNum\n    var str = ''\n    if (!chunk.buf) {\n      // no data chunk\n      if (typeof OpCode.str[opCodeNum] !== 'undefined') {\n        // A few cases where the opcode name differs from reverseMap\n        // aside from 1 to 16 data pushes.\n        if (opCodeNum === 0) {\n          // OP_0 -> 0\n          str = str + ' 0'\n        } else if (opCodeNum === 79) {\n          // OP_1NEGATE -> 1\n          str = str + ' -1'\n        } else {\n          str = str + ' ' + new OpCode(opCodeNum).toString()\n        }\n      } else {\n        var numstr = opCodeNum.toString(16)\n        if (numstr.length % 2 !== 0) {\n          numstr = '0' + numstr\n        }\n        str = str + ' ' + numstr\n      }\n    } else {\n      // data chunk\n      if (chunk.len > 0) {\n        str = str + ' ' + chunk.buf.toString('hex')\n      }\n    }\n    return str\n  }\n\n  fromOpReturnData (dataBuf) {\n    this.writeOpCode(OpCode.OP_RETURN)\n    this.writeBuffer(dataBuf)\n    return this\n  }\n\n  static fromOpReturnData (dataBuf) {\n    return new this().fromOpReturnData(dataBuf)\n  }\n\n  fromSafeData (dataBuf) {\n    this.writeOpCode(OpCode.OP_FALSE)\n    this.writeOpCode(OpCode.OP_RETURN)\n    this.writeBuffer(dataBuf)\n    return this\n  }\n\n  static fromSafeData (dataBuf) {\n    return new this().fromSafeData(dataBuf)\n  }\n\n  fromSafeDataArray (dataBufs) {\n    this.writeOpCode(OpCode.OP_FALSE)\n    this.writeOpCode(OpCode.OP_RETURN)\n    for (const i in dataBufs) {\n      const dataBuf = dataBufs[i]\n      this.writeBuffer(dataBuf)\n    }\n    return this\n  }\n\n  static fromSafeDataArray (dataBufs) {\n    return new this().fromSafeDataArray(dataBufs)\n  }\n\n  getData () {\n    if (this.isSafeDataOut()) {\n      const chunks = this.chunks.slice(2)\n      const buffers = chunks.map(chunk => chunk.buf)\n      return buffers\n    }\n    if (this.isOpReturn()) {\n      const chunks = this.chunks.slice(1)\n      const buffers = chunks.map(chunk => chunk.buf)\n      return buffers\n    }\n    throw new Error('Unrecognized script type to get data from')\n  }\n\n  /**\n     * Turn script into a standard pubKeyHash output script\n     */\n  fromPubKeyHash (hashBuf) {\n    if (hashBuf.length !== 20) {\n      throw new Error('hashBuf must be a 20 byte buffer')\n    }\n    this.writeOpCode(OpCode.OP_DUP)\n    this.writeOpCode(OpCode.OP_HASH160)\n    this.writeBuffer(hashBuf)\n    this.writeOpCode(OpCode.OP_EQUALVERIFY)\n    this.writeOpCode(OpCode.OP_CHECKSIG)\n    return this\n  }\n\n  static fromPubKeyHash (hashBuf) {\n    return new this().fromPubKeyHash(hashBuf)\n  }\n\n  static sortPubKeys (pubKeys) {\n    return pubKeys.slice().sort((pubKey1, pubKey2) => {\n      const buf1 = pubKey1.toBuffer()\n      const buf2 = pubKey2.toBuffer()\n      const len = Math.max(buf1.length, buf2.length)\n      for (let i = 0; i <= len; i++) {\n        if (buf1[i] === undefined) {\n          return -1 // shorter strings come first\n        }\n        if (buf2[i] === undefined) {\n          return 1\n        }\n        if (buf1[i] < buf2[i]) {\n          return -1\n        }\n        if (buf1[i] > buf2[i]) {\n          return 1\n        } else {\n          continue\n        }\n      }\n    })\n  }\n\n  /**\n     * Generate a multisig output script from a list of public keys. sort\n     * defaults to true. If sort is true, the pubKeys are sorted\n     * lexicographically.\n     */\n  fromPubKeys (m, pubKeys, sort = true) {\n    if (typeof m !== 'number') {\n      throw new Error('m must be a number')\n    }\n    if (sort === true) {\n      pubKeys = Script.sortPubKeys(pubKeys)\n    }\n    this.writeOpCode(m + OpCode.OP_1 - 1)\n    for (const i in pubKeys) {\n      this.writeBuffer(pubKeys[i].toBuffer())\n    }\n    this.writeOpCode(pubKeys.length + OpCode.OP_1 - 1)\n    this.writeOpCode(OpCode.OP_CHECKMULTISIG)\n    return this\n  }\n\n  static fromPubKeys (m, pubKeys, sort) {\n    return new this().fromPubKeys(m, pubKeys, sort)\n  }\n\n  removeCodeseparators () {\n    const chunks = []\n    for (let i = 0; i < this.chunks.length; i++) {\n      if (this.chunks[i].opCodeNum !== OpCode.OP_CODESEPARATOR) {\n        chunks.push(this.chunks[i])\n      }\n    }\n    this.chunks = chunks\n    return this\n  }\n\n  isPushOnly () {\n    for (let i = 0; i < this.chunks.length; i++) {\n      const chunk = this.chunks[i]\n      const opCodeNum = chunk.opCodeNum\n      if (opCodeNum > OpCode.OP_16) {\n        return false\n      }\n    }\n    return true\n  }\n\n  isNonSpendable () {\n    const startsWithOpFalse = this.chunks[0].opCodeNum === OpCode.OP_FALSE\n    const andThenReturns = this.chunks[1] && this.chunks[1].opCodeNum === OpCode.OP_RETURN\n    return !!startsWithOpFalse && !!andThenReturns\n  }\n\n  isOpReturn () {\n    if (\n      this.chunks[0].opCodeNum === OpCode.OP_RETURN &&\n        this.chunks.filter(chunk => Buffer.isBuffer(chunk.buf)).length === this.chunks.slice(1).length\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  isSafeDataOut () {\n    if (this.chunks.length < 2) {\n      return false\n    }\n    if (this.chunks[0].opCodeNum !== OpCode.OP_FALSE) {\n      return false\n    }\n    var chunks = this.chunks.slice(1)\n    var script2 = new Script(chunks)\n    return script2.isOpReturn()\n  }\n\n  isPubKeyHashOut () {\n    if (\n      this.chunks[0] &&\n        this.chunks[0].opCodeNum === OpCode.OP_DUP &&\n        this.chunks[1] &&\n        this.chunks[1].opCodeNum === OpCode.OP_HASH160 &&\n        this.chunks[2].buf &&\n        this.chunks[3] &&\n        this.chunks[3].opCodeNum === OpCode.OP_EQUALVERIFY &&\n        this.chunks[4] &&\n        this.chunks[4].opCodeNum === OpCode.OP_CHECKSIG\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  /**\n     * A pubKeyHash input should consist of two push operations. The first push\n     * operation may be OP_0, which means the signature is missing, which is true\n     * for some partially signed (and invalid) transactions.\n     */\n  isPubKeyHashIn () {\n    if (\n      this.chunks.length === 2 &&\n        (this.chunks[0].buf || this.chunks[0].opCodeNum === OpCode.OP_0) &&\n        (this.chunks[1].buf || this.chunks[0].opCodeNum === OpCode.OP_0)\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  isScriptHashOut () {\n    const buf = this.toBuffer()\n    return (\n      buf.length === 23 &&\n        buf[0] === OpCode.OP_HASH160 &&\n        buf[1] === 0x14 &&\n        buf[22] === OpCode.OP_EQUAL\n    )\n  }\n\n  /**\n     * Note that these are frequently indistinguishable from pubKeyHashin\n     */\n  isScriptHashIn () {\n    if (!this.isPushOnly()) {\n      return false\n    }\n    try {\n      new Script().fromBuffer(this.chunks[this.chunks.length - 1].buf)\n    } catch (err) {\n      return false\n    }\n    return true\n  }\n\n  isMultiSigOut () {\n    const m = this.chunks[0].opCodeNum - OpCode.OP_1 + 1\n    if (!(m >= 1 && m <= 16)) {\n      return false\n    }\n    const pubKeychunks = this.chunks.slice(1, this.chunks.length - 2)\n    if (\n      !pubKeychunks.every(chunk => {\n        try {\n          const buf = chunk.buf\n          const pubKey = new PubKey().fromDer(buf)\n          pubKey.validate()\n          return true\n        } catch (err) {\n          return false\n        }\n      })\n    ) {\n      return false\n    }\n    const n = this.chunks[this.chunks.length - 2].opCodeNum - OpCode.OP_1 + 1\n    if (!(n >= m && n <= 16)) {\n      return false\n    }\n    if (this.chunks[1 + n + 1].opCodeNum !== OpCode.OP_CHECKMULTISIG) {\n      return false\n    }\n    return true\n  }\n\n  isMultiSigIn () {\n    if (this.chunks[0].opCodeNum !== OpCode.OP_0) {\n      return false\n    }\n    const remaining = this.chunks.slice(1)\n    if (remaining.length < 1) {\n      return false\n    }\n    return remaining.every(\n      chunk => Buffer.isBuffer(chunk.buf) && Sig.IsTxDer(chunk.buf)\n    )\n  }\n\n  /**\n     * Analagous to bitcoind's FindAndDelete Find and deconste equivalent chunks,\n     * typically used with push data chunks.  Note that this will find and deconste\n     * not just the same data, but the same data with the same push data op as\n     * produced by default. i.e., if a pushdata in a tx does not use the minimal\n     * pushdata op, then when you try to remove the data it is pushing, it will not\n     * be removed, because they do not use the same pushdata op.\n     */\n  findAndDelete (script) {\n    const buf = script.toBuffer()\n    for (let i = 0; i < this.chunks.length; i++) {\n      const script2 = new Script([this.chunks[i]])\n      const buf2 = script2.toBuffer()\n      if (cmp(buf, buf2)) {\n        this.chunks.splice(i, 1)\n      }\n    }\n    return this\n  }\n\n  writeScript (script) {\n    this.chunks = this.chunks.concat(script.chunks)\n    return this\n  }\n\n  static writeScript (script) {\n    return new this().writeScript(script)\n  }\n\n  writeString (str) {\n    const script = new Script().fromString(str)\n    this.chunks = this.chunks.concat(script.chunks)\n    return this\n  }\n\n  static writeString (str) {\n    return new this().writeString(str)\n  }\n\n  writeOpCode (opCodeNum) {\n    this.chunks.push({ opCodeNum })\n    return this\n  }\n\n  static writeOpCode (opCodeNum) {\n    return new this().writeOpCode(opCodeNum)\n  }\n\n  setChunkOpCode (i, opCodeNum) {\n    this.chunks[i] = { opCodeNum }\n    return this\n  }\n\n  // write a big number in the minimal way\n  writeBn (bn) {\n    if (bn.cmp(0) === OpCode.OP_0) {\n      this.chunks.push({\n        opCodeNum: OpCode.OP_0\n      })\n    } else if (bn.cmp(-1) === 0) {\n      this.chunks.push({\n        opCodeNum: OpCode.OP_1NEGATE\n      })\n    } else if (bn.cmp(1) >= 0 && bn.cmp(16) <= 0) {\n      // see OP_1 - OP_16\n      this.chunks.push({\n        opCodeNum: bn.toNumber() + OpCode.OP_1 - 1\n      })\n    } else {\n      const buf = bn.toSm({ endian: 'little' })\n      this.writeBuffer(buf)\n    }\n    return this\n  }\n\n  static writeBn (bn) {\n    return new this().writeBn(bn)\n  }\n\n  writeNumber (number) {\n    this.writeBn(new Bn().fromNumber(number))\n    return this\n  }\n\n  static writeNumber (number) {\n    return new this().writeNumber(number)\n  }\n\n  setChunkBn (i, bn) {\n    this.chunks[i] = new Script().writeBn(bn).chunks[0]\n    return this\n  }\n\n  // note: this does not necessarily write buffers in the minimal way\n  // to write numbers in the minimal way, see writeBn\n  writeBuffer (buf) {\n    let opCodeNum\n    const len = buf.length\n    if (buf.length > 0 && buf.length < OpCode.OP_PUSHDATA1) {\n      opCodeNum = buf.length\n    } else if (buf.length === 0) {\n      opCodeNum = OpCode.OP_0\n    } else if (buf.length < Math.pow(2, 8)) {\n      opCodeNum = OpCode.OP_PUSHDATA1\n    } else if (buf.length < Math.pow(2, 16)) {\n      opCodeNum = OpCode.OP_PUSHDATA2\n    } else if (buf.length < Math.pow(2, 32)) {\n      opCodeNum = OpCode.OP_PUSHDATA4\n    } else {\n      throw new Error(\"You can't push that much data\")\n    }\n    this.chunks.push({\n      buf: buf,\n      len: len,\n      opCodeNum: opCodeNum\n    })\n    return this\n  }\n\n  static writeBuffer (buf) {\n    return new this().writeBuffer(buf)\n  }\n\n  setChunkBuffer (i, buf) {\n    this.chunks[i] = new Script().writeBuffer(buf).chunks[0]\n    return this\n  }\n\n  // make sure a push is the smallest way to push that particular data\n  // comes from bitcoind's script interpreter CheckMinimalPush function\n  checkMinimalPush (i) {\n    const chunk = this.chunks[i]\n    const buf = chunk.buf\n    const opCodeNum = chunk.opCodeNum\n    if (!buf) {\n      return true\n    }\n    if (buf.length === 0) {\n      // Could have used OP_0.\n      return opCodeNum === OpCode.OP_0\n    } else if (buf.length === 1 && buf[0] >= 1 && buf[0] <= 16) {\n      // Could have used OP_1 .. OP_16.\n      return opCodeNum === OpCode.OP_1 + (buf[0] - 1)\n    } else if (buf.length === 1 && buf[0] === 0x81) {\n      // Could have used OP_1NEGATE.\n      return opCodeNum === OpCode.OP_1NEGATE\n    } else if (buf.length <= 75) {\n      // Could have used a direct push (opCode indicating number of bytes pushed + those bytes).\n      return opCodeNum === buf.length\n    } else if (buf.length <= 255) {\n      // Could have used OP_PUSHDATA.\n      return opCodeNum === OpCode.OP_PUSHDATA1\n    } else if (buf.length <= 65535) {\n      // Could have used OP_PUSHDATA2.\n      return opCodeNum === OpCode.OP_PUSHDATA2\n    }\n    return true\n  }\n}\n\nexport { Script }\n","/**\n * Bitcoin Address\n * ===============\n *\n * A bitcoin address. Normal use cases:\n * const address = new Address().fromPubKey(pubKey)\n * const address = new Address().fromString(string)\n * const string = address.toString()\n * const script = address.toTxOutScript()\n * const isValid = Address.isValid(string)\n *\n * Can also do testnet:\n * const address = Address.Testnet()\n *\n * Note that an Address and an Addr are two completely different things. An\n * Address is what you send bitcoin to. An Addr is an ip address and port that\n * you connect to over the internet.\n */\n'use strict'\n\nimport { Base58Check } from './base-58-check'\nimport { Constants } from './constants'\nimport { Hash } from './hash'\nimport { OpCode } from './op-code'\nimport { PubKey } from './pub-key'\nimport { PrivKey } from './priv-key'\nimport { Script } from './script'\nimport { Struct } from './struct'\nimport { Workers } from './workers'\n\nclass Address extends Struct {\n  constructor (versionByteNum, hashBuf, constants = null) {\n    super({ versionByteNum, hashBuf })\n    constants = constants || Constants.Default.Address\n    this.Constants = constants\n  }\n\n  fromBuffer (buf) {\n    if (buf.length !== 1 + 20) {\n      throw new Error('address buffers must be exactly 21 bytes')\n    }\n    if (\n      buf[0] !== this.Constants.pubKeyHash\n    ) {\n      throw new Error('address: invalid versionByteNum byte')\n    }\n    this.versionByteNum = buf[0]\n    this.hashBuf = buf.slice(1)\n    return this\n  }\n\n  fromPubKeyHashBuf (hashBuf) {\n    this.hashBuf = hashBuf\n    this.versionByteNum = this.Constants.pubKeyHash\n    return this\n  }\n\n  static fromPubKeyHashBuf (hashBuf) {\n    return new this().fromPubKeyHashBuf(hashBuf)\n  }\n\n  fromPubKey (pubKey) {\n    const hashBuf = Hash.sha256Ripemd160(pubKey.toBuffer())\n    return this.fromPubKeyHashBuf(hashBuf)\n  }\n\n  static fromPubKey (pubKey) {\n    return new this().fromPubKey(pubKey)\n  }\n\n  async asyncFromPubKey (pubKey) {\n    const args = [pubKey]\n    const workersResult = await Workers.asyncObjectMethod(\n      this,\n      'fromPubKey',\n      args\n    )\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static asyncFromPubKey (pubKey) {\n    return new this().asyncFromPubKey(pubKey)\n  }\n\n  fromPrivKey (privKey) {\n    const pubKey = new PubKey().fromPrivKey(privKey)\n    const hashBuf = Hash.sha256Ripemd160(pubKey.toBuffer())\n    return this.fromPubKeyHashBuf(hashBuf)\n  }\n\n  static fromPrivKey (privKey) {\n    return new this().fromPrivKey(privKey)\n  }\n\n  async asyncFromPrivKey (privKey) {\n    const args = [privKey]\n    const workersResult = await Workers.asyncObjectMethod(\n      this,\n      'fromPrivKey',\n      args\n    )\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static asyncFromPrivKey (privKey) {\n    return new this().fromPrivKey(privKey)\n  }\n\n  fromRandom () {\n    const randomPrivKey = new PrivKey().fromRandom()\n    return this.fromPrivKey(randomPrivKey)\n  }\n\n  static fromRandom () {\n    return new this().fromRandom()\n  }\n\n  async asyncFromRandom () {\n    const args = []\n    const workersResult = await Workers.asyncObjectMethod(\n      this,\n      'fromRandom',\n      args\n    )\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static asyncFromRandom () {\n    return new this().fromRandom()\n  }\n\n  fromString (str) {\n    const buf = Base58Check.decode(str)\n    return this.fromBuffer(buf)\n  }\n\n  async asyncFromString (str) {\n    const args = [str]\n    const workersResult = await Workers.asyncObjectMethod(\n      this,\n      'fromString',\n      args\n    )\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static asyncFromString (str) {\n    return new this().asyncFromString(str)\n  }\n\n  static isValid (addrstr) {\n    let address\n    try {\n      address = new Address().fromString(addrstr)\n    } catch (e) {\n      return false\n    }\n    return address.isValid()\n  }\n\n  isValid () {\n    try {\n      this.validate()\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  toTxOutScript () {\n    const script = new Script()\n    script.writeOpCode(OpCode.OP_DUP)\n    script.writeOpCode(OpCode.OP_HASH160)\n    script.writeBuffer(this.hashBuf)\n    script.writeOpCode(OpCode.OP_EQUALVERIFY)\n    script.writeOpCode(OpCode.OP_CHECKSIG)\n\n    return script\n  }\n\n  fromTxInScript (script) {\n    const pubKeyHashBuf = Hash.sha256Ripemd160(script.chunks[1].buf || Buffer.from('00'.repeat(32), 'hex'))\n    return this.fromPubKeyHashBuf(pubKeyHashBuf)\n  }\n\n  static fromTxInScript (script) {\n    return new this().fromTxInScript(script)\n  }\n\n  fromTxOutScript (script) {\n    return this.fromPubKeyHashBuf(script.chunks[2].buf)\n  }\n\n  static fromTxOutScript (script) {\n    return new this().fromTxOutScript(script)\n  }\n\n  toBuffer () {\n    const versionByteBuf = Buffer.from([this.versionByteNum])\n    const buf = Buffer.concat([versionByteBuf, this.hashBuf])\n    return buf\n  }\n\n  toJSON () {\n    const json = {}\n    if (this.hashBuf) {\n      json.hashBuf = this.hashBuf.toString('hex')\n    }\n    if (typeof this.versionByteNum !== 'undefined') {\n      json.versionByteNum = this.versionByteNum\n    }\n    return json\n  }\n\n  fromJSON (json) {\n    if (json.hashBuf) {\n      this.hashBuf = Buffer.from(json.hashBuf, 'hex')\n    }\n    if (typeof json.versionByteNum !== 'undefined') {\n      this.versionByteNum = json.versionByteNum\n    }\n    return this\n  }\n\n  toString () {\n    return Base58Check.encode(this.toBuffer())\n  }\n\n  async asyncToString () {\n    const args = []\n    const workersResult = await Workers.asyncObjectMethod(\n      this,\n      'toString',\n      args\n    )\n    return JSON.parse(workersResult.resbuf.toString())\n  }\n\n  validate () {\n    if (!Buffer.isBuffer(this.hashBuf) || this.hashBuf.length !== 20) {\n      throw new Error('hashBuf must be a buffer of 20 bytes')\n    }\n    if (\n      this.versionByteNum !== this.Constants.pubKeyHash\n    ) {\n      throw new Error('invalid versionByteNum')\n    }\n    return this\n  }\n}\n\nAddress.Mainnet = class extends Address {\n  constructor (versionByteNum, hashBuf) {\n    super(versionByteNum, hashBuf, Constants.Mainnet.Address)\n  }\n}\n\nAddress.Testnet = class extends Address {\n  constructor (versionByteNum, hashBuf) {\n    super(versionByteNum, hashBuf, Constants.Testnet.Address)\n  }\n}\n\nexport { Address }\n","/**\n * Bip32: HD Wallets\n * =================\n *\n * Bip32 is hierarchical deterministic wallets. The standard way to use this is:\n * const bip32 = new Bip32().fromRandom()\n * const bip32 = new Bip32().fromSeed(buf)\n * const bip32 = new Bip32().fromString(string)\n * const xprv = bip32.toString()\n * const xpub = bip32.toPublic().toString()\n *\n * This code was originally copied from here:\n *\n * https://github.com/sarchar/brainwallet.github.com\n *\n * It has faced mostly cosmetic alterations since it was copied.\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport { Bw } from './bw'\nimport { Base58Check } from './base-58-check'\nimport { Constants } from './constants'\nimport { Hash } from './hash'\nimport { Point } from './point'\nimport { PrivKey as PrivKeyClass } from './priv-key'\nimport { PubKey } from './pub-key'\nimport { Random } from './random'\nimport { Struct } from './struct'\nimport { Workers } from './workers'\n\nclass Bip32 extends Struct {\n  constructor (\n    versionBytesNum,\n    depth,\n    parentFingerPrint,\n    childIndex,\n    chainCode,\n    privKey,\n    pubKey,\n    constants = null,\n    PrivKey = PrivKeyClass\n  ) {\n    super({\n      versionBytesNum,\n      depth,\n      parentFingerPrint,\n      childIndex,\n      chainCode,\n      privKey,\n      pubKey\n    })\n    constants = constants || Constants.Default.Bip32\n    this.Constants = constants\n    this.PrivKey = PrivKey\n  }\n\n  fromRandom () {\n    this.versionBytesNum = this.Constants.privKey\n    this.depth = 0x00\n    this.parentFingerPrint = Buffer.from([0, 0, 0, 0])\n    this.childIndex = 0\n    this.chainCode = Random.getRandomBuffer(32)\n    this.privKey = new this.PrivKey().fromRandom()\n    this.pubKey = new PubKey().fromPrivKey(this.privKey)\n    return this\n  }\n\n  static fromRandom () {\n    return new this().fromRandom()\n  }\n\n  fromString (str) {\n    return this.fromBuffer(Base58Check.decode(str))\n  }\n\n  /**\n   * Use workers to convert a bip32 string into a bip32 object without\n   * blocking.\n   */\n  async asyncFromString (str) {\n    const args = [str]\n    const workersResult = await Workers.asyncObjectMethod(\n      this,\n      'fromString',\n      args\n    )\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  fromSeed (bytes) {\n    if (!Buffer.isBuffer(bytes)) {\n      throw new Error('bytes must be a buffer')\n    }\n    if (bytes.length < 128 / 8) {\n      throw new Error('Need more than 128 bits of entropy')\n    }\n    if (bytes.length > 512 / 8) {\n      throw new Error('More than 512 bits of entropy is nonstandard')\n    }\n    const hash = Hash.sha512Hmac(bytes, Buffer.from('Bitcoin seed'))\n\n    this.depth = 0x00\n    this.parentFingerPrint = Buffer.from([0, 0, 0, 0])\n    this.childIndex = 0\n    this.chainCode = hash.slice(32, 64)\n    this.versionBytesNum = this.Constants.privKey\n    this.privKey = new this.PrivKey().fromBn(Bn().fromBuffer(hash.slice(0, 32)))\n    this.pubKey = new PubKey().fromPrivKey(this.privKey)\n\n    return this\n  }\n\n  static fromSeed (bytes) {\n    return new this().fromSeed(bytes)\n  }\n\n  async asyncFromSeed (bytes) {\n    const workersResult = await Workers.asyncObjectMethod(this, 'fromSeed', [\n      bytes\n    ])\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static asyncFromSeed (bytes) {\n    return new this().asyncFromSeed(bytes)\n  }\n\n  fromBuffer (buf) {\n    // Both pub and private extended keys are 78 buf\n    if (buf.length !== 78) {\n      throw new Error('incorrect bip32 data length')\n    }\n\n    this.versionBytesNum = buf.slice(0, 4).readUInt32BE(0)\n    this.depth = buf.slice(4, 5).readUInt8(0)\n    this.parentFingerPrint = buf.slice(5, 9)\n    this.childIndex = buf.slice(9, 13).readUInt32BE(0)\n    this.chainCode = buf.slice(13, 45)\n    const keyBytes = buf.slice(45, 78)\n\n    const isPrivate = this.versionBytesNum === this.Constants.privKey\n    const isPublic = this.versionBytesNum === this.Constants.pubKey\n\n    if (isPrivate && keyBytes[0] === 0) {\n      this.privKey = new this.PrivKey().fromBn(\n        Bn().fromBuffer(keyBytes.slice(1, 33))\n      )\n      this.pubKey = new PubKey().fromPrivKey(this.privKey)\n    } else if (isPublic && (keyBytes[0] === 0x02 || keyBytes[0] === 0x03)) {\n      this.pubKey = new PubKey().fromDer(keyBytes)\n    } else {\n      throw new Error('Invalid key')\n    }\n\n    return this\n  }\n\n  /**\n   * This is a faster version of .fromBuffer that reads in the output from\n   * .toFastBuffer rather than from .toBuffer. .toFastBuffer outputs almost the\n   * same thing as .toBuffer, except the public key is uncompressed. That makes\n   * it larger, but also means that point multiplication doesn't have to be\n   * used to derive the y value. So reading it in is faster. The only thing we\n   * have to do is explicitely set the \"compressed\" value of public key to true\n   * after reading it in. That is because although .toFastBuffer and\n   * .fromFastBuffer transmit the public key in uncompressed form, we want it\n   * to be set to compressed when stored in memory.\n   */\n  fromFastBuffer (buf) {\n    if (buf.length === 0) {\n      return this\n    }\n    if (buf.length !== 78 && buf.length !== 78 + 33) {\n      throw new Error('incorrect bip32 fastBuffer data length: ' + buf.length)\n    }\n\n    this.versionBytesNum = buf.slice(0, 4).readUInt32BE(0)\n    this.depth = buf.slice(4, 5).readUInt8(0)\n    this.parentFingerPrint = buf.slice(5, 9)\n    this.childIndex = buf.slice(9, 13).readUInt32BE(0)\n    this.chainCode = buf.slice(13, 45)\n\n    const keyBytes = buf.slice(45, buf.length)\n\n    const isPrivate = this.versionBytesNum === this.Constants.privKey\n    const isPublic = this.versionBytesNum === this.Constants.pubKey\n\n    if (isPrivate && keyBytes[0] === 0 && buf.length === 78) {\n      this.privKey = new this.PrivKey().fromBn(\n        Bn().fromBuffer(keyBytes.slice(1, 33))\n      )\n      this.pubKey = new PubKey().fromPrivKey(this.privKey)\n    } else if (isPublic && buf.length === 78 + 33) {\n      this.pubKey = new PubKey().fromFastBuffer(keyBytes)\n      this.pubKey.compressed = true\n    } else {\n      throw new Error('Invalid key')\n    }\n\n    return this\n  }\n\n  derive (path) {\n    const e = path.split('/')\n\n    if (path === 'm') {\n      return this\n    }\n\n    let bip32 = this\n    for (const i in e) {\n      const c = e[i]\n\n      if (i === '0') {\n        if (c !== 'm') throw new Error('invalid path')\n        continue\n      }\n\n      if (\n        parseInt(c.replace(\"'\", ''), 10).toString() !== c.replace(\"'\", '')\n      ) {\n        throw new Error('invalid path')\n      }\n\n      const usePrivate = c.length > 1 && c[c.length - 1] === \"'\"\n      let childIndex =\n        parseInt(usePrivate ? c.slice(0, c.length - 1) : c, 10) & 0x7fffffff\n\n      if (usePrivate) {\n        childIndex += 0x80000000\n      }\n\n      bip32 = bip32.deriveChild(childIndex)\n    }\n\n    return bip32\n  }\n\n  async asyncDerive (path) {\n    const workersResult = await Workers.asyncObjectMethod(this, 'derive', [\n      path\n    ])\n    return new this.constructor().fromFastBuffer(workersResult.resbuf)\n  }\n\n  deriveChild (i) {\n    if (typeof i !== 'number') {\n      throw new Error('i must be a number')\n    }\n\n    let ib = []\n    ib.push((i >> 24) & 0xff)\n    ib.push((i >> 16) & 0xff)\n    ib.push((i >> 8) & 0xff)\n    ib.push(i & 0xff)\n    ib = Buffer.from(ib)\n\n    const usePrivate = (i & 0x80000000) !== 0\n\n    const isPrivate = this.versionBytesNum === this.Constants.privKey\n\n    if (usePrivate && (!this.privKey || !isPrivate)) {\n      throw new Error('Cannot do private key derivation without private key')\n    }\n\n    let ret = null\n    if (this.privKey) {\n      let data = null\n\n      if (usePrivate) {\n        data = Buffer.concat([\n          Buffer.from([0]),\n          this.privKey.bn.toBuffer({ size: 32 }),\n          ib\n        ])\n      } else {\n        data = Buffer.concat([this.pubKey.toBuffer({ size: 32 }), ib])\n      }\n\n      const hash = Hash.sha512Hmac(data, this.chainCode)\n      const il = Bn().fromBuffer(hash.slice(0, 32), { size: 32 })\n      const ir = hash.slice(32, 64)\n\n      // ki = IL + kpar (mod n).\n      const k = il.add(this.privKey.bn).mod(Point.getN())\n\n      ret = new this.constructor()\n      ret.chainCode = ir\n\n      ret.privKey = new this.PrivKey().fromBn(k)\n      ret.pubKey = new PubKey().fromPrivKey(ret.privKey)\n    } else {\n      const data = Buffer.concat([this.pubKey.toBuffer(), ib])\n      const hash = Hash.sha512Hmac(data, this.chainCode)\n      const il = Bn().fromBuffer(hash.slice(0, 32))\n      const ir = hash.slice(32, 64)\n\n      // Ki = (IL + kpar)*G = IL*G + Kpar\n      const ilG = Point.getG().mul(il)\n      const Kpar = this.pubKey.point\n      const Ki = ilG.add(Kpar)\n      const newpub = new PubKey()\n      newpub.point = Ki\n\n      ret = new this.constructor()\n      ret.chainCode = ir\n\n      ret.pubKey = newpub\n    }\n\n    ret.childIndex = i\n    const pubKeyhash = Hash.sha256Ripemd160(this.pubKey.toBuffer())\n    ret.parentFingerPrint = pubKeyhash.slice(0, 4)\n    ret.versionBytesNum = this.versionBytesNum\n    ret.depth = this.depth + 1\n\n    return ret\n  }\n\n  toPublic () {\n    const bip32 = new this.constructor().fromObject(this)\n    bip32.versionBytesNum = this.Constants.pubKey\n    bip32.privKey = undefined\n    return bip32\n  }\n\n  toBuffer () {\n    const isPrivate = this.versionBytesNum === this.Constants.privKey\n    const isPublic = this.versionBytesNum === this.Constants.pubKey\n    if (isPrivate) {\n      return new Bw()\n        .writeUInt32BE(this.versionBytesNum)\n        .writeUInt8(this.depth)\n        .write(this.parentFingerPrint)\n        .writeUInt32BE(this.childIndex)\n        .write(this.chainCode)\n        .writeUInt8(0)\n        .write(this.privKey.bn.toBuffer({ size: 32 }))\n        .toBuffer()\n    } else if (isPublic) {\n      if (this.pubKey.compressed === false) {\n        throw new Error(\n          'cannot convert bip32 to buffer if pubKey is not compressed'\n        )\n      }\n      return new Bw()\n        .writeUInt32BE(this.versionBytesNum)\n        .writeUInt8(this.depth)\n        .write(this.parentFingerPrint)\n        .writeUInt32BE(this.childIndex)\n        .write(this.chainCode)\n        .write(this.pubKey.toBuffer())\n        .toBuffer()\n    } else {\n      throw new Error('bip32: invalid versionBytesNum byte')\n    }\n  }\n\n  /**\n   * This is the \"fast\" analog of toBuffer. It is almost the same as toBuffer,\n   * and in fact is actually not any faster. The only difference is that it\n   * adds an uncompressed rather than compressed public key to the output. This\n   * is so that .fromFastBufer can read in the public key without having to do\n   * fancy, slow point multiplication to derive the y value of the public key.\n   * Thus, although .toFastBuffer is not any faster, .fromFastBuffer is faster.\n   */\n  toFastBuffer () {\n    if (!this.versionBytesNum) {\n      return Buffer.alloc(0)\n    }\n    const isPrivate = this.versionBytesNum === this.Constants.privKey\n    const isPublic = this.versionBytesNum === this.Constants.pubKey\n    if (isPrivate) {\n      return new Bw()\n        .writeUInt32BE(this.versionBytesNum)\n        .writeUInt8(this.depth)\n        .write(this.parentFingerPrint)\n        .writeUInt32BE(this.childIndex)\n        .write(this.chainCode)\n        .writeUInt8(0)\n        .write(this.privKey.bn.toBuffer({ size: 32 }))\n        .toBuffer()\n    } else if (isPublic) {\n      return new Bw()\n        .writeUInt32BE(this.versionBytesNum)\n        .writeUInt8(this.depth)\n        .write(this.parentFingerPrint)\n        .writeUInt32BE(this.childIndex)\n        .write(this.chainCode)\n        .write(this.pubKey.toFastBuffer())\n        .toBuffer()\n    } else {\n      throw new Error('bip32: invalid versionBytesNum byte')\n    }\n  }\n\n  toString () {\n    return Base58Check.encode(this.toBuffer())\n  }\n\n  /**\n   * Use workers to convert a bip32 object into a bip32 string without\n   * blocking.\n   */\n  async asyncToString () {\n    const workersResult = await Workers.asyncObjectMethod(this, 'toString', [])\n    return JSON.parse(workersResult.resbuf.toString())\n  }\n\n  toJSON () {\n    return this.toFastHex()\n  }\n\n  fromJSON (json) {\n    return this.fromFastHex(json)\n  }\n\n  isPrivate () {\n    return this.versionBytesNum === this.Constants.privKey\n  }\n}\n\nBip32.Mainnet = class extends Bip32 {\n  constructor (\n    versionBytesNum,\n    depth,\n    parentFingerPrint,\n    childIndex,\n    chainCode,\n    privKey,\n    pubKey\n  ) {\n    super(\n      versionBytesNum,\n      depth,\n      parentFingerPrint,\n      childIndex,\n      chainCode,\n      privKey,\n      pubKey,\n      Constants.Mainnet.Bip32,\n      PrivKeyClass.Mainnet\n    )\n  }\n}\n\nBip32.Testnet = class extends Bip32 {\n  constructor (\n    versionBytesNum,\n    depth,\n    parentFingerPrint,\n    childIndex,\n    chainCode,\n    privKey,\n    pubKey\n  ) {\n    super(\n      versionBytesNum,\n      depth,\n      parentFingerPrint,\n      childIndex,\n      chainCode,\n      privKey,\n      pubKey,\n      Constants.Testnet.Bip32,\n      PrivKeyClass.Testnet\n    )\n  }\n}\n\nexport { Bip32 }\n","'use strict'\nconst wordList = [\n  'abandon',\n  'ability',\n  'able',\n  'about',\n  'above',\n  'absent',\n  'absorb',\n  'abstract',\n  'absurd',\n  'abuse',\n  'access',\n  'accident',\n  'account',\n  'accuse',\n  'achieve',\n  'acid',\n  'acoustic',\n  'acquire',\n  'across',\n  'act',\n  'action',\n  'actor',\n  'actress',\n  'actual',\n  'adapt',\n  'add',\n  'addict',\n  'address',\n  'adjust',\n  'admit',\n  'adult',\n  'advance',\n  'advice',\n  'aerobic',\n  'affair',\n  'afford',\n  'afraid',\n  'again',\n  'age',\n  'agent',\n  'agree',\n  'ahead',\n  'aim',\n  'air',\n  'airport',\n  'aisle',\n  'alarm',\n  'album',\n  'alcohol',\n  'alert',\n  'alien',\n  'all',\n  'alley',\n  'allow',\n  'almost',\n  'alone',\n  'alpha',\n  'already',\n  'also',\n  'alter',\n  'always',\n  'amateur',\n  'amazing',\n  'among',\n  'amount',\n  'amused',\n  'analyst',\n  'anchor',\n  'ancient',\n  'anger',\n  'angle',\n  'angry',\n  'animal',\n  'ankle',\n  'announce',\n  'annual',\n  'another',\n  'answer',\n  'antenna',\n  'antique',\n  'anxiety',\n  'any',\n  'apart',\n  'apology',\n  'appear',\n  'apple',\n  'approve',\n  'april',\n  'arch',\n  'arctic',\n  'area',\n  'arena',\n  'argue',\n  'arm',\n  'armed',\n  'armor',\n  'army',\n  'around',\n  'arrange',\n  'arrest',\n  'arrive',\n  'arrow',\n  'art',\n  'artefact',\n  'artist',\n  'artwork',\n  'ask',\n  'aspect',\n  'assault',\n  'asset',\n  'assist',\n  'assume',\n  'asthma',\n  'athlete',\n  'atom',\n  'attack',\n  'attend',\n  'attitude',\n  'attract',\n  'auction',\n  'audit',\n  'august',\n  'aunt',\n  'author',\n  'auto',\n  'autumn',\n  'average',\n  'avocado',\n  'avoid',\n  'awake',\n  'aware',\n  'away',\n  'awesome',\n  'awful',\n  'awkward',\n  'axis',\n  'baby',\n  'bachelor',\n  'bacon',\n  'badge',\n  'bag',\n  'balance',\n  'balcony',\n  'ball',\n  'bamboo',\n  'banana',\n  'banner',\n  'bar',\n  'barely',\n  'bargain',\n  'barrel',\n  'base',\n  'basic',\n  'basket',\n  'battle',\n  'beach',\n  'bean',\n  'beauty',\n  'because',\n  'become',\n  'beef',\n  'before',\n  'begin',\n  'behave',\n  'behind',\n  'believe',\n  'below',\n  'belt',\n  'bench',\n  'benefit',\n  'best',\n  'betray',\n  'better',\n  'between',\n  'beyond',\n  'bicycle',\n  'bid',\n  'bike',\n  'bind',\n  'biology',\n  'bird',\n  'birth',\n  'bitter',\n  'black',\n  'blade',\n  'blame',\n  'blanket',\n  'blast',\n  'bleak',\n  'bless',\n  'blind',\n  'blood',\n  'blossom',\n  'blouse',\n  'blue',\n  'blur',\n  'blush',\n  'board',\n  'boat',\n  'body',\n  'boil',\n  'bomb',\n  'bone',\n  'bonus',\n  'book',\n  'boost',\n  'border',\n  'boring',\n  'borrow',\n  'boss',\n  'bottom',\n  'bounce',\n  'box',\n  'boy',\n  'bracket',\n  'brain',\n  'brand',\n  'brass',\n  'brave',\n  'bread',\n  'breeze',\n  'brick',\n  'bridge',\n  'brief',\n  'bright',\n  'bring',\n  'brisk',\n  'broccoli',\n  'broken',\n  'bronze',\n  'broom',\n  'brother',\n  'brown',\n  'brush',\n  'bubble',\n  'buddy',\n  'budget',\n  'buffalo',\n  'build',\n  'bulb',\n  'bulk',\n  'bullet',\n  'bundle',\n  'bunker',\n  'burden',\n  'burger',\n  'burst',\n  'bus',\n  'business',\n  'busy',\n  'butter',\n  'buyer',\n  'buzz',\n  'cabbage',\n  'cabin',\n  'cable',\n  'cactus',\n  'cage',\n  'cake',\n  'call',\n  'calm',\n  'camera',\n  'camp',\n  'can',\n  'canal',\n  'cancel',\n  'candy',\n  'cannon',\n  'canoe',\n  'canvas',\n  'canyon',\n  'capable',\n  'capital',\n  'captain',\n  'car',\n  'carbon',\n  'card',\n  'cargo',\n  'carpet',\n  'carry',\n  'cart',\n  'case',\n  'cash',\n  'casino',\n  'castle',\n  'casual',\n  'cat',\n  'catalog',\n  'catch',\n  'category',\n  'cattle',\n  'caught',\n  'cause',\n  'caution',\n  'cave',\n  'ceiling',\n  'celery',\n  'cement',\n  'census',\n  'century',\n  'cereal',\n  'certain',\n  'chair',\n  'chalk',\n  'champion',\n  'change',\n  'chaos',\n  'chapter',\n  'charge',\n  'chase',\n  'chat',\n  'cheap',\n  'check',\n  'cheese',\n  'chef',\n  'cherry',\n  'chest',\n  'chicken',\n  'chief',\n  'child',\n  'chimney',\n  'choice',\n  'choose',\n  'chronic',\n  'chuckle',\n  'chunk',\n  'churn',\n  'cigar',\n  'cinnamon',\n  'circle',\n  'citizen',\n  'city',\n  'civil',\n  'claim',\n  'clap',\n  'clarify',\n  'claw',\n  'clay',\n  'clean',\n  'clerk',\n  'clever',\n  'click',\n  'client',\n  'cliff',\n  'climb',\n  'clinic',\n  'clip',\n  'clock',\n  'clog',\n  'close',\n  'cloth',\n  'cloud',\n  'clown',\n  'club',\n  'clump',\n  'cluster',\n  'clutch',\n  'coach',\n  'coast',\n  'coconut',\n  'code',\n  'coffee',\n  'coil',\n  'coin',\n  'collect',\n  'color',\n  'column',\n  'combine',\n  'come',\n  'comfort',\n  'comic',\n  'common',\n  'company',\n  'concert',\n  'conduct',\n  'confirm',\n  'congress',\n  'connect',\n  'consider',\n  'control',\n  'convince',\n  'cook',\n  'cool',\n  'copper',\n  'copy',\n  'coral',\n  'core',\n  'corn',\n  'correct',\n  'cost',\n  'cotton',\n  'couch',\n  'country',\n  'couple',\n  'course',\n  'cousin',\n  'cover',\n  'coyote',\n  'crack',\n  'cradle',\n  'craft',\n  'cram',\n  'crane',\n  'crash',\n  'crater',\n  'crawl',\n  'crazy',\n  'cream',\n  'credit',\n  'creek',\n  'crew',\n  'cricket',\n  'crime',\n  'crisp',\n  'critic',\n  'crop',\n  'cross',\n  'crouch',\n  'crowd',\n  'crucial',\n  'cruel',\n  'cruise',\n  'crumble',\n  'crunch',\n  'crush',\n  'cry',\n  'crystal',\n  'cube',\n  'culture',\n  'cup',\n  'cupboard',\n  'curious',\n  'current',\n  'curtain',\n  'curve',\n  'cushion',\n  'custom',\n  'cute',\n  'cycle',\n  'dad',\n  'damage',\n  'damp',\n  'dance',\n  'danger',\n  'daring',\n  'dash',\n  'daughter',\n  'dawn',\n  'day',\n  'deal',\n  'debate',\n  'debris',\n  'decade',\n  'december',\n  'decide',\n  'decline',\n  'decorate',\n  'decrease',\n  'deer',\n  'defense',\n  'define',\n  'defy',\n  'degree',\n  'delay',\n  'deliver',\n  'demand',\n  'demise',\n  'denial',\n  'dentist',\n  'deny',\n  'depart',\n  'depend',\n  'deposit',\n  'depth',\n  'deputy',\n  'derive',\n  'describe',\n  'desert',\n  'design',\n  'desk',\n  'despair',\n  'destroy',\n  'detail',\n  'detect',\n  'develop',\n  'device',\n  'devote',\n  'diagram',\n  'dial',\n  'diamond',\n  'diary',\n  'dice',\n  'diesel',\n  'diet',\n  'differ',\n  'digital',\n  'dignity',\n  'dilemma',\n  'dinner',\n  'dinosaur',\n  'direct',\n  'dirt',\n  'disagree',\n  'discover',\n  'disease',\n  'dish',\n  'dismiss',\n  'disorder',\n  'display',\n  'distance',\n  'divert',\n  'divide',\n  'divorce',\n  'dizzy',\n  'doctor',\n  'document',\n  'dog',\n  'doll',\n  'dolphin',\n  'domain',\n  'donate',\n  'donkey',\n  'donor',\n  'door',\n  'dose',\n  'double',\n  'dove',\n  'draft',\n  'dragon',\n  'drama',\n  'drastic',\n  'draw',\n  'dream',\n  'dress',\n  'drift',\n  'drill',\n  'drink',\n  'drip',\n  'drive',\n  'drop',\n  'drum',\n  'dry',\n  'duck',\n  'dumb',\n  'dune',\n  'during',\n  'dust',\n  'dutch',\n  'duty',\n  'dwarf',\n  'dynamic',\n  'eager',\n  'eagle',\n  'early',\n  'earn',\n  'earth',\n  'easily',\n  'east',\n  'easy',\n  'echo',\n  'ecology',\n  'economy',\n  'edge',\n  'edit',\n  'educate',\n  'effort',\n  'egg',\n  'eight',\n  'either',\n  'elbow',\n  'elder',\n  'electric',\n  'elegant',\n  'element',\n  'elephant',\n  'elevator',\n  'elite',\n  'else',\n  'embark',\n  'embody',\n  'embrace',\n  'emerge',\n  'emotion',\n  'employ',\n  'empower',\n  'empty',\n  'enable',\n  'enact',\n  'end',\n  'endless',\n  'endorse',\n  'enemy',\n  'energy',\n  'enforce',\n  'engage',\n  'engine',\n  'enhance',\n  'enjoy',\n  'enlist',\n  'enough',\n  'enrich',\n  'enroll',\n  'ensure',\n  'enter',\n  'entire',\n  'entry',\n  'envelope',\n  'episode',\n  'equal',\n  'equip',\n  'era',\n  'erase',\n  'erode',\n  'erosion',\n  'error',\n  'erupt',\n  'escape',\n  'essay',\n  'essence',\n  'estate',\n  'eternal',\n  'ethics',\n  'evidence',\n  'evil',\n  'evoke',\n  'evolve',\n  'exact',\n  'example',\n  'excess',\n  'exchange',\n  'excite',\n  'exclude',\n  'excuse',\n  'execute',\n  'exercise',\n  'exhaust',\n  'exhibit',\n  'exile',\n  'exist',\n  'exit',\n  'exotic',\n  'expand',\n  'expect',\n  'expire',\n  'explain',\n  'expose',\n  'express',\n  'extend',\n  'extra',\n  'eye',\n  'eyebrow',\n  'fabric',\n  'face',\n  'faculty',\n  'fade',\n  'faint',\n  'faith',\n  'fall',\n  'false',\n  'fame',\n  'family',\n  'famous',\n  'fan',\n  'fancy',\n  'fantasy',\n  'farm',\n  'fashion',\n  'fat',\n  'fatal',\n  'father',\n  'fatigue',\n  'fault',\n  'favorite',\n  'feature',\n  'february',\n  'federal',\n  'fee',\n  'feed',\n  'feel',\n  'female',\n  'fence',\n  'festival',\n  'fetch',\n  'fever',\n  'few',\n  'fiber',\n  'fiction',\n  'field',\n  'figure',\n  'file',\n  'film',\n  'filter',\n  'final',\n  'find',\n  'fine',\n  'finger',\n  'finish',\n  'fire',\n  'firm',\n  'first',\n  'fiscal',\n  'fish',\n  'fit',\n  'fitness',\n  'fix',\n  'flag',\n  'flame',\n  'flash',\n  'flat',\n  'flavor',\n  'flee',\n  'flight',\n  'flip',\n  'float',\n  'flock',\n  'floor',\n  'flower',\n  'fluid',\n  'flush',\n  'fly',\n  'foam',\n  'focus',\n  'fog',\n  'foil',\n  'fold',\n  'follow',\n  'food',\n  'foot',\n  'force',\n  'forest',\n  'forget',\n  'fork',\n  'fortune',\n  'forum',\n  'forward',\n  'fossil',\n  'foster',\n  'found',\n  'fox',\n  'fragile',\n  'frame',\n  'frequent',\n  'fresh',\n  'friend',\n  'fringe',\n  'frog',\n  'front',\n  'frost',\n  'frown',\n  'frozen',\n  'fruit',\n  'fuel',\n  'fun',\n  'funny',\n  'furnace',\n  'fury',\n  'future',\n  'gadget',\n  'gain',\n  'galaxy',\n  'gallery',\n  'game',\n  'gap',\n  'garage',\n  'garbage',\n  'garden',\n  'garlic',\n  'garment',\n  'gas',\n  'gasp',\n  'gate',\n  'gather',\n  'gauge',\n  'gaze',\n  'general',\n  'genius',\n  'genre',\n  'gentle',\n  'genuine',\n  'gesture',\n  'ghost',\n  'giant',\n  'gift',\n  'giggle',\n  'ginger',\n  'giraffe',\n  'girl',\n  'give',\n  'glad',\n  'glance',\n  'glare',\n  'glass',\n  'glide',\n  'glimpse',\n  'globe',\n  'gloom',\n  'glory',\n  'glove',\n  'glow',\n  'glue',\n  'goat',\n  'goddess',\n  'gold',\n  'good',\n  'goose',\n  'gorilla',\n  'gospel',\n  'gossip',\n  'govern',\n  'gown',\n  'grab',\n  'grace',\n  'grain',\n  'grant',\n  'grape',\n  'grass',\n  'gravity',\n  'great',\n  'green',\n  'grid',\n  'grief',\n  'grit',\n  'grocery',\n  'group',\n  'grow',\n  'grunt',\n  'guard',\n  'guess',\n  'guide',\n  'guilt',\n  'guitar',\n  'gun',\n  'gym',\n  'habit',\n  'hair',\n  'half',\n  'hammer',\n  'hamster',\n  'hand',\n  'happy',\n  'harbor',\n  'hard',\n  'harsh',\n  'harvest',\n  'hat',\n  'have',\n  'hawk',\n  'hazard',\n  'head',\n  'health',\n  'heart',\n  'heavy',\n  'hedgehog',\n  'height',\n  'hello',\n  'helmet',\n  'help',\n  'hen',\n  'hero',\n  'hidden',\n  'high',\n  'hill',\n  'hint',\n  'hip',\n  'hire',\n  'history',\n  'hobby',\n  'hockey',\n  'hold',\n  'hole',\n  'holiday',\n  'hollow',\n  'home',\n  'honey',\n  'hood',\n  'hope',\n  'horn',\n  'horror',\n  'horse',\n  'hospital',\n  'host',\n  'hotel',\n  'hour',\n  'hover',\n  'hub',\n  'huge',\n  'human',\n  'humble',\n  'humor',\n  'hundred',\n  'hungry',\n  'hunt',\n  'hurdle',\n  'hurry',\n  'hurt',\n  'husband',\n  'hybrid',\n  'ice',\n  'icon',\n  'idea',\n  'identify',\n  'idle',\n  'ignore',\n  'ill',\n  'illegal',\n  'illness',\n  'image',\n  'imitate',\n  'immense',\n  'immune',\n  'impact',\n  'impose',\n  'improve',\n  'impulse',\n  'inch',\n  'include',\n  'income',\n  'increase',\n  'index',\n  'indicate',\n  'indoor',\n  'industry',\n  'infant',\n  'inflict',\n  'inform',\n  'inhale',\n  'inherit',\n  'initial',\n  'inject',\n  'injury',\n  'inmate',\n  'inner',\n  'innocent',\n  'input',\n  'inquiry',\n  'insane',\n  'insect',\n  'inside',\n  'inspire',\n  'install',\n  'intact',\n  'interest',\n  'into',\n  'invest',\n  'invite',\n  'involve',\n  'iron',\n  'island',\n  'isolate',\n  'issue',\n  'item',\n  'ivory',\n  'jacket',\n  'jaguar',\n  'jar',\n  'jazz',\n  'jealous',\n  'jeans',\n  'jelly',\n  'jewel',\n  'job',\n  'join',\n  'joke',\n  'journey',\n  'joy',\n  'judge',\n  'juice',\n  'jump',\n  'jungle',\n  'junior',\n  'junk',\n  'just',\n  'kangaroo',\n  'keen',\n  'keep',\n  'ketchup',\n  'key',\n  'kick',\n  'kid',\n  'kidney',\n  'kind',\n  'kingdom',\n  'kiss',\n  'kit',\n  'kitchen',\n  'kite',\n  'kitten',\n  'kiwi',\n  'knee',\n  'knife',\n  'knock',\n  'know',\n  'lab',\n  'label',\n  'labor',\n  'ladder',\n  'lady',\n  'lake',\n  'lamp',\n  'language',\n  'laptop',\n  'large',\n  'later',\n  'latin',\n  'laugh',\n  'laundry',\n  'lava',\n  'law',\n  'lawn',\n  'lawsuit',\n  'layer',\n  'lazy',\n  'leader',\n  'leaf',\n  'learn',\n  'leave',\n  'lecture',\n  'left',\n  'leg',\n  'legal',\n  'legend',\n  'leisure',\n  'lemon',\n  'lend',\n  'length',\n  'lens',\n  'leopard',\n  'lesson',\n  'letter',\n  'level',\n  'liar',\n  'liberty',\n  'library',\n  'license',\n  'life',\n  'lift',\n  'light',\n  'like',\n  'limb',\n  'limit',\n  'link',\n  'lion',\n  'liquid',\n  'list',\n  'little',\n  'live',\n  'lizard',\n  'load',\n  'loan',\n  'lobster',\n  'local',\n  'lock',\n  'logic',\n  'lonely',\n  'long',\n  'loop',\n  'lottery',\n  'loud',\n  'lounge',\n  'love',\n  'loyal',\n  'lucky',\n  'luggage',\n  'lumber',\n  'lunar',\n  'lunch',\n  'luxury',\n  'lyrics',\n  'machine',\n  'mad',\n  'magic',\n  'magnet',\n  'maid',\n  'mail',\n  'main',\n  'major',\n  'make',\n  'mammal',\n  'man',\n  'manage',\n  'mandate',\n  'mango',\n  'mansion',\n  'manual',\n  'maple',\n  'marble',\n  'march',\n  'margin',\n  'marine',\n  'market',\n  'marriage',\n  'mask',\n  'mass',\n  'master',\n  'match',\n  'material',\n  'math',\n  'matrix',\n  'matter',\n  'maximum',\n  'maze',\n  'meadow',\n  'mean',\n  'measure',\n  'meat',\n  'mechanic',\n  'medal',\n  'media',\n  'melody',\n  'melt',\n  'member',\n  'memory',\n  'mention',\n  'menu',\n  'mercy',\n  'merge',\n  'merit',\n  'merry',\n  'mesh',\n  'message',\n  'metal',\n  'method',\n  'middle',\n  'midnight',\n  'milk',\n  'million',\n  'mimic',\n  'mind',\n  'minimum',\n  'minor',\n  'minute',\n  'miracle',\n  'mirror',\n  'misery',\n  'miss',\n  'mistake',\n  'mix',\n  'mixed',\n  'mixture',\n  'mobile',\n  'model',\n  'modify',\n  'mom',\n  'moment',\n  'monitor',\n  'monkey',\n  'monster',\n  'month',\n  'moon',\n  'moral',\n  'more',\n  'morning',\n  'mosquito',\n  'mother',\n  'motion',\n  'motor',\n  'mountain',\n  'mouse',\n  'move',\n  'movie',\n  'much',\n  'muffin',\n  'mule',\n  'multiply',\n  'muscle',\n  'museum',\n  'mushroom',\n  'music',\n  'must',\n  'mutual',\n  'myself',\n  'mystery',\n  'myth',\n  'naive',\n  'name',\n  'napkin',\n  'narrow',\n  'nasty',\n  'nation',\n  'nature',\n  'near',\n  'neck',\n  'need',\n  'negative',\n  'neglect',\n  'neither',\n  'nephew',\n  'nerve',\n  'nest',\n  'net',\n  'network',\n  'neutral',\n  'never',\n  'news',\n  'next',\n  'nice',\n  'night',\n  'noble',\n  'noise',\n  'nominee',\n  'noodle',\n  'normal',\n  'north',\n  'nose',\n  'notable',\n  'note',\n  'nothing',\n  'notice',\n  'novel',\n  'now',\n  'nuclear',\n  'number',\n  'nurse',\n  'nut',\n  'oak',\n  'obey',\n  'object',\n  'oblige',\n  'obscure',\n  'observe',\n  'obtain',\n  'obvious',\n  'occur',\n  'ocean',\n  'october',\n  'odor',\n  'off',\n  'offer',\n  'office',\n  'often',\n  'oil',\n  'okay',\n  'old',\n  'olive',\n  'olympic',\n  'omit',\n  'once',\n  'one',\n  'onion',\n  'online',\n  'only',\n  'open',\n  'opera',\n  'opinion',\n  'oppose',\n  'option',\n  'orange',\n  'orbit',\n  'orchard',\n  'order',\n  'ordinary',\n  'organ',\n  'orient',\n  'original',\n  'orphan',\n  'ostrich',\n  'other',\n  'outdoor',\n  'outer',\n  'output',\n  'outside',\n  'oval',\n  'oven',\n  'over',\n  'own',\n  'owner',\n  'oxygen',\n  'oyster',\n  'ozone',\n  'pact',\n  'paddle',\n  'page',\n  'pair',\n  'palace',\n  'palm',\n  'panda',\n  'panel',\n  'panic',\n  'panther',\n  'paper',\n  'parade',\n  'parent',\n  'park',\n  'parrot',\n  'party',\n  'pass',\n  'patch',\n  'path',\n  'patient',\n  'patrol',\n  'pattern',\n  'pause',\n  'pave',\n  'payment',\n  'peace',\n  'peanut',\n  'pear',\n  'peasant',\n  'pelican',\n  'pen',\n  'penalty',\n  'pencil',\n  'people',\n  'pepper',\n  'perfect',\n  'permit',\n  'person',\n  'pet',\n  'phone',\n  'photo',\n  'phrase',\n  'physical',\n  'piano',\n  'picnic',\n  'picture',\n  'piece',\n  'pig',\n  'pigeon',\n  'pill',\n  'pilot',\n  'pink',\n  'pioneer',\n  'pipe',\n  'pistol',\n  'pitch',\n  'pizza',\n  'place',\n  'planet',\n  'plastic',\n  'plate',\n  'play',\n  'please',\n  'pledge',\n  'pluck',\n  'plug',\n  'plunge',\n  'poem',\n  'poet',\n  'point',\n  'polar',\n  'pole',\n  'police',\n  'pond',\n  'pony',\n  'pool',\n  'popular',\n  'portion',\n  'position',\n  'possible',\n  'post',\n  'potato',\n  'pottery',\n  'poverty',\n  'powder',\n  'power',\n  'practice',\n  'praise',\n  'predict',\n  'prefer',\n  'prepare',\n  'present',\n  'pretty',\n  'prevent',\n  'price',\n  'pride',\n  'primary',\n  'print',\n  'priority',\n  'prison',\n  'private',\n  'prize',\n  'problem',\n  'process',\n  'produce',\n  'profit',\n  'program',\n  'project',\n  'promote',\n  'proof',\n  'property',\n  'prosper',\n  'protect',\n  'proud',\n  'provide',\n  'public',\n  'pudding',\n  'pull',\n  'pulp',\n  'pulse',\n  'pumpkin',\n  'punch',\n  'pupil',\n  'puppy',\n  'purchase',\n  'purity',\n  'purpose',\n  'purse',\n  'push',\n  'put',\n  'puzzle',\n  'pyramid',\n  'quality',\n  'quantum',\n  'quarter',\n  'question',\n  'quick',\n  'quit',\n  'quiz',\n  'quote',\n  'rabbit',\n  'raccoon',\n  'race',\n  'rack',\n  'radar',\n  'radio',\n  'rail',\n  'rain',\n  'raise',\n  'rally',\n  'ramp',\n  'ranch',\n  'random',\n  'range',\n  'rapid',\n  'rare',\n  'rate',\n  'rather',\n  'raven',\n  'raw',\n  'razor',\n  'ready',\n  'real',\n  'reason',\n  'rebel',\n  'rebuild',\n  'recall',\n  'receive',\n  'recipe',\n  'record',\n  'recycle',\n  'reduce',\n  'reflect',\n  'reform',\n  'refuse',\n  'region',\n  'regret',\n  'regular',\n  'reject',\n  'relax',\n  'release',\n  'relief',\n  'rely',\n  'remain',\n  'remember',\n  'remind',\n  'remove',\n  'render',\n  'renew',\n  'rent',\n  'reopen',\n  'repair',\n  'repeat',\n  'replace',\n  'report',\n  'require',\n  'rescue',\n  'resemble',\n  'resist',\n  'resource',\n  'response',\n  'result',\n  'retire',\n  'retreat',\n  'return',\n  'reunion',\n  'reveal',\n  'review',\n  'reward',\n  'rhythm',\n  'rib',\n  'ribbon',\n  'rice',\n  'rich',\n  'ride',\n  'ridge',\n  'rifle',\n  'right',\n  'rigid',\n  'ring',\n  'riot',\n  'ripple',\n  'risk',\n  'ritual',\n  'rival',\n  'river',\n  'road',\n  'roast',\n  'robot',\n  'robust',\n  'rocket',\n  'romance',\n  'roof',\n  'rookie',\n  'room',\n  'rose',\n  'rotate',\n  'rough',\n  'round',\n  'route',\n  'royal',\n  'rubber',\n  'rude',\n  'rug',\n  'rule',\n  'run',\n  'runway',\n  'rural',\n  'sad',\n  'saddle',\n  'sadness',\n  'safe',\n  'sail',\n  'salad',\n  'salmon',\n  'salon',\n  'salt',\n  'salute',\n  'same',\n  'sample',\n  'sand',\n  'satisfy',\n  'satoshi',\n  'sauce',\n  'sausage',\n  'save',\n  'say',\n  'scale',\n  'scan',\n  'scare',\n  'scatter',\n  'scene',\n  'scheme',\n  'school',\n  'science',\n  'scissors',\n  'scorpion',\n  'scout',\n  'scrap',\n  'screen',\n  'script',\n  'scrub',\n  'sea',\n  'search',\n  'season',\n  'seat',\n  'second',\n  'secret',\n  'section',\n  'security',\n  'seed',\n  'seek',\n  'segment',\n  'select',\n  'sell',\n  'seminar',\n  'senior',\n  'sense',\n  'sentence',\n  'series',\n  'service',\n  'session',\n  'settle',\n  'setup',\n  'seven',\n  'shadow',\n  'shaft',\n  'shallow',\n  'share',\n  'shed',\n  'shell',\n  'sheriff',\n  'shield',\n  'shift',\n  'shine',\n  'ship',\n  'shiver',\n  'shock',\n  'shoe',\n  'shoot',\n  'shop',\n  'short',\n  'shoulder',\n  'shove',\n  'shrimp',\n  'shrug',\n  'shuffle',\n  'shy',\n  'sibling',\n  'sick',\n  'side',\n  'siege',\n  'sight',\n  'sign',\n  'silent',\n  'silk',\n  'silly',\n  'silver',\n  'similar',\n  'simple',\n  'since',\n  'sing',\n  'siren',\n  'sister',\n  'situate',\n  'six',\n  'size',\n  'skate',\n  'sketch',\n  'ski',\n  'skill',\n  'skin',\n  'skirt',\n  'skull',\n  'slab',\n  'slam',\n  'sleep',\n  'slender',\n  'slice',\n  'slide',\n  'slight',\n  'slim',\n  'slogan',\n  'slot',\n  'slow',\n  'slush',\n  'small',\n  'smart',\n  'smile',\n  'smoke',\n  'smooth',\n  'snack',\n  'snake',\n  'snap',\n  'sniff',\n  'snow',\n  'soap',\n  'soccer',\n  'social',\n  'sock',\n  'soda',\n  'soft',\n  'solar',\n  'soldier',\n  'solid',\n  'solution',\n  'solve',\n  'someone',\n  'song',\n  'soon',\n  'sorry',\n  'sort',\n  'soul',\n  'sound',\n  'soup',\n  'source',\n  'south',\n  'space',\n  'spare',\n  'spatial',\n  'spawn',\n  'speak',\n  'special',\n  'speed',\n  'spell',\n  'spend',\n  'sphere',\n  'spice',\n  'spider',\n  'spike',\n  'spin',\n  'spirit',\n  'split',\n  'spoil',\n  'sponsor',\n  'spoon',\n  'sport',\n  'spot',\n  'spray',\n  'spread',\n  'spring',\n  'spy',\n  'square',\n  'squeeze',\n  'squirrel',\n  'stable',\n  'stadium',\n  'staff',\n  'stage',\n  'stairs',\n  'stamp',\n  'stand',\n  'start',\n  'state',\n  'stay',\n  'steak',\n  'steel',\n  'stem',\n  'step',\n  'stereo',\n  'stick',\n  'still',\n  'sting',\n  'stock',\n  'stomach',\n  'stone',\n  'stool',\n  'story',\n  'stove',\n  'strategy',\n  'street',\n  'strike',\n  'strong',\n  'struggle',\n  'student',\n  'stuff',\n  'stumble',\n  'style',\n  'subject',\n  'submit',\n  'subway',\n  'success',\n  'such',\n  'sudden',\n  'suffer',\n  'sugar',\n  'suggest',\n  'suit',\n  'summer',\n  'sun',\n  'sunny',\n  'sunset',\n  'super',\n  'supply',\n  'supreme',\n  'sure',\n  'surface',\n  'surge',\n  'surprise',\n  'surround',\n  'survey',\n  'suspect',\n  'sustain',\n  'swallow',\n  'swamp',\n  'swap',\n  'swarm',\n  'swear',\n  'sweet',\n  'swift',\n  'swim',\n  'swing',\n  'switch',\n  'sword',\n  'symbol',\n  'symptom',\n  'syrup',\n  'system',\n  'table',\n  'tackle',\n  'tag',\n  'tail',\n  'talent',\n  'talk',\n  'tank',\n  'tape',\n  'target',\n  'task',\n  'taste',\n  'tattoo',\n  'taxi',\n  'teach',\n  'team',\n  'tell',\n  'ten',\n  'tenant',\n  'tennis',\n  'tent',\n  'term',\n  'test',\n  'text',\n  'thank',\n  'that',\n  'theme',\n  'then',\n  'theory',\n  'there',\n  'they',\n  'thing',\n  'this',\n  'thought',\n  'three',\n  'thrive',\n  'throw',\n  'thumb',\n  'thunder',\n  'ticket',\n  'tide',\n  'tiger',\n  'tilt',\n  'timber',\n  'time',\n  'tiny',\n  'tip',\n  'tired',\n  'tissue',\n  'title',\n  'toast',\n  'tobacco',\n  'today',\n  'toddler',\n  'toe',\n  'together',\n  'toilet',\n  'token',\n  'tomato',\n  'tomorrow',\n  'tone',\n  'tongue',\n  'tonight',\n  'tool',\n  'tooth',\n  'top',\n  'topic',\n  'topple',\n  'torch',\n  'tornado',\n  'tortoise',\n  'toss',\n  'total',\n  'tourist',\n  'toward',\n  'tower',\n  'town',\n  'toy',\n  'track',\n  'trade',\n  'traffic',\n  'tragic',\n  'train',\n  'transfer',\n  'trap',\n  'trash',\n  'travel',\n  'tray',\n  'treat',\n  'tree',\n  'trend',\n  'trial',\n  'tribe',\n  'trick',\n  'trigger',\n  'trim',\n  'trip',\n  'trophy',\n  'trouble',\n  'truck',\n  'true',\n  'truly',\n  'trumpet',\n  'trust',\n  'truth',\n  'try',\n  'tube',\n  'tuition',\n  'tumble',\n  'tuna',\n  'tunnel',\n  'turkey',\n  'turn',\n  'turtle',\n  'twelve',\n  'twenty',\n  'twice',\n  'twin',\n  'twist',\n  'two',\n  'type',\n  'typical',\n  'ugly',\n  'umbrella',\n  'unable',\n  'unaware',\n  'uncle',\n  'uncover',\n  'under',\n  'undo',\n  'unfair',\n  'unfold',\n  'unhappy',\n  'uniform',\n  'unique',\n  'unit',\n  'universe',\n  'unknown',\n  'unlock',\n  'until',\n  'unusual',\n  'unveil',\n  'update',\n  'upgrade',\n  'uphold',\n  'upon',\n  'upper',\n  'upset',\n  'urban',\n  'urge',\n  'usage',\n  'use',\n  'used',\n  'useful',\n  'useless',\n  'usual',\n  'utility',\n  'vacant',\n  'vacuum',\n  'vague',\n  'valid',\n  'valley',\n  'valve',\n  'van',\n  'vanish',\n  'vapor',\n  'various',\n  'vast',\n  'vault',\n  'vehicle',\n  'velvet',\n  'vendor',\n  'venture',\n  'venue',\n  'verb',\n  'verify',\n  'version',\n  'very',\n  'vessel',\n  'veteran',\n  'viable',\n  'vibrant',\n  'vicious',\n  'victory',\n  'video',\n  'view',\n  'village',\n  'vintage',\n  'violin',\n  'virtual',\n  'virus',\n  'visa',\n  'visit',\n  'visual',\n  'vital',\n  'vivid',\n  'vocal',\n  'voice',\n  'void',\n  'volcano',\n  'volume',\n  'vote',\n  'voyage',\n  'wage',\n  'wagon',\n  'wait',\n  'walk',\n  'wall',\n  'walnut',\n  'want',\n  'warfare',\n  'warm',\n  'warrior',\n  'wash',\n  'wasp',\n  'waste',\n  'water',\n  'wave',\n  'way',\n  'wealth',\n  'weapon',\n  'wear',\n  'weasel',\n  'weather',\n  'web',\n  'wedding',\n  'weekend',\n  'weird',\n  'welcome',\n  'west',\n  'wet',\n  'whale',\n  'what',\n  'wheat',\n  'wheel',\n  'when',\n  'where',\n  'whip',\n  'whisper',\n  'wide',\n  'width',\n  'wife',\n  'wild',\n  'will',\n  'win',\n  'window',\n  'wine',\n  'wing',\n  'wink',\n  'winner',\n  'winter',\n  'wire',\n  'wisdom',\n  'wise',\n  'wish',\n  'witness',\n  'wolf',\n  'woman',\n  'wonder',\n  'wood',\n  'wool',\n  'word',\n  'work',\n  'world',\n  'worry',\n  'worth',\n  'wrap',\n  'wreck',\n  'wrestle',\n  'wrist',\n  'write',\n  'wrong',\n  'yard',\n  'year',\n  'yellow',\n  'you',\n  'young',\n  'youth',\n  'zebra',\n  'zero',\n  'zone',\n  'zoo'\n]\nwordList.space = ' '\n\nexport { wordList }\n","/**\n * Bip39: Mnemonic Seeds\n * =====================\n *\n * Bip39 is a way to turn random entropy into a mnemonic (a string of words\n * from a wordlist), and then that mnemonic into a seed. The seed can then be\n * used in Bip32 to derive hierarchical deterministic keys. It does not go the\n * other way around (i.e., you cannot turn a seed into a mnemonic). The usual\n * way to use it is either to generate a new one, like this:\n *\n * const mnemonic = new Bip39().fromRandom().toString()\n *\n * or from a known mnemonic:\n *\n * const seed = new Bip39().fromString(mnemonic).toSeed()\n */\n'use strict'\n\nimport { Bw } from './bw'\nimport { Hash } from './hash'\nimport pbkdf2 from 'pbkdf2'\nimport { Random } from './random'\nimport { Struct } from './struct'\nimport { wordList } from './bip-39-en-wordlist'\nimport { Workers } from './workers'\n\nclass Bip39 extends Struct {\n  constructor (mnemonic, seed, wordlist = wordList) {\n    super({ mnemonic, seed })\n    this.Wordlist = wordlist\n  }\n\n  toBw (bw) {\n    if (!bw) {\n      bw = new Bw()\n    }\n    if (this.mnemonic) {\n      const buf = Buffer.from(this.mnemonic)\n      bw.writeVarIntNum(buf.length)\n      bw.write(buf)\n    } else {\n      bw.writeVarIntNum(0)\n    }\n    if (this.seed) {\n      bw.writeVarIntNum(this.seed.length)\n      bw.write(this.seed)\n    } else {\n      bw.writeVarIntNum(0)\n    }\n    return bw\n  }\n\n  fromBr (br) {\n    const mnemoniclen = br.readVarIntNum()\n    if (mnemoniclen > 0) {\n      this.mnemonic = br.read(mnemoniclen).toString()\n    }\n    const seedlen = br.readVarIntNum()\n    if (seedlen > 0) {\n      this.seed = br.read(seedlen)\n    }\n    return this\n  }\n\n  /**\n     * Generate a random new mnemonic from the wordlist.\n     */\n  fromRandom (bits) {\n    if (!bits) {\n      bits = 128\n    }\n    if (bits % 32 !== 0) {\n      throw new Error('bits must be multiple of 32')\n    }\n    if (bits < 128) {\n      throw new Error('bits must be at least 128')\n    }\n    const buf = Random.getRandomBuffer(bits / 8)\n    this.entropy2Mnemonic(buf)\n    this.mnemonic2Seed()\n    return this\n  }\n\n  static fromRandom (bits) {\n    return new this().fromRandom(bits)\n  }\n\n  async asyncFromRandom (bits) {\n    if (!bits) {\n      bits = 128\n    }\n    const buf = Random.getRandomBuffer(bits / 8)\n    let workersResult = await Workers.asyncObjectMethod(\n      this,\n      'entropy2Mnemonic',\n      [buf]\n    )\n    const bip39 = new Bip39().fromFastBuffer(workersResult.resbuf)\n    workersResult = await Workers.asyncObjectMethod(\n      bip39,\n      'mnemonic2Seed',\n      []\n    )\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static asyncFromRandom (bits) {\n    return new this().asyncFromRandom(bits)\n  }\n\n  fromEntropy (buf) {\n    this.entropy2Mnemonic(buf)\n    return this\n  }\n\n  static fromEntropy (buf) {\n    return new this().fromEntropy(buf)\n  }\n\n  async asyncFromEntropy (buf) {\n    const workersResult = await Workers.asyncObjectMethod(this, 'fromEntropy', [\n      buf\n    ])\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static asyncFromEntropy (buf) {\n    return new this().asyncFromEntropy(buf)\n  }\n\n  fromString (mnemonic) {\n    this.mnemonic = mnemonic\n    return this\n  }\n\n  toString () {\n    return this.mnemonic\n  }\n\n  toSeed (passphrase) {\n    this.mnemonic2Seed(passphrase)\n    return this.seed\n  }\n\n  async asyncToSeed (passphrase) {\n    if (passphrase === undefined) {\n      passphrase = ''\n    }\n    const args = [passphrase]\n    const workersResult = await Workers.asyncObjectMethod(this, 'toSeed', args)\n    return workersResult.resbuf\n  }\n\n  /**\n     * Generate a new mnemonic from some entropy generated somewhere else. The\n     * entropy must be at least 128 bits.\n     */\n  entropy2Mnemonic (buf) {\n    if (!Buffer.isBuffer(buf) || buf.length < 128 / 8) {\n      throw new Error(\n        'Entropy is less than 128 bits. It must be 128 bits or more.'\n      )\n    }\n\n    const hash = Hash.sha256(buf)\n    let bin = ''\n    const bits = buf.length * 8\n    for (let i = 0; i < buf.length; i++) {\n      bin = bin + ('00000000' + buf[i].toString(2)).slice(-8)\n    }\n    let hashbits = hash[0].toString(2)\n    hashbits = ('00000000' + hashbits).slice(-8).slice(0, bits / 32)\n    bin = bin + hashbits\n\n    if (bin.length % 11 !== 0) {\n      throw new Error(\n        'internal error - entropy not an even multiple of 11 bits - ' +\n            bin.length\n      )\n    }\n\n    let mnemonic = ''\n    for (let i = 0; i < bin.length / 11; i++) {\n      if (mnemonic !== '') {\n        mnemonic = mnemonic + this.Wordlist.space\n      }\n      const wi = parseInt(bin.slice(i * 11, (i + 1) * 11), 2)\n      mnemonic = mnemonic + this.Wordlist[wi]\n    }\n\n    this.mnemonic = mnemonic\n    return this\n  }\n\n  /**\n     * Check that a mnemonic is valid. This means there should be no superfluous\n     * whitespace, no invalid words, and the checksum should match.\n     */\n  check () {\n    const mnemonic = this.mnemonic\n\n    // confirm no invalid words\n    const words = mnemonic.split(this.Wordlist.space)\n    let bin = ''\n    for (let i = 0; i < words.length; i++) {\n      const ind = this.Wordlist.indexOf(words[i])\n      if (ind < 0) {\n        return false\n      }\n      bin = bin + ('00000000000' + ind.toString(2)).slice(-11)\n    }\n\n    if (bin.length % 11 !== 0) {\n      throw new Error(\n        'internal error - entropy not an even multiple of 11 bits - ' +\n            bin.length\n      )\n    }\n\n    // confirm checksum\n    const cs = bin.length / 33\n    const hashBits = bin.slice(-cs)\n    const nonhashBits = bin.slice(0, bin.length - cs)\n    const buf = Buffer.alloc(nonhashBits.length / 8)\n    for (let i = 0; i < nonhashBits.length / 8; i++) {\n      buf.writeUInt8(parseInt(bin.slice(i * 8, (i + 1) * 8), 2), i)\n    }\n    const hash = Hash.sha256(buf)\n    let expectedHashBits = hash[0].toString(2)\n    expectedHashBits = ('00000000' + expectedHashBits).slice(-8).slice(0, cs)\n\n    return expectedHashBits === hashBits\n  }\n\n  /**\n     * Convert a mnemonic to a seed. Does not check for validity of the mnemonic -\n     * for that, you should manually run check() first.\n     */\n  mnemonic2Seed (passphrase = '') {\n    let mnemonic = this.mnemonic\n    if (!this.check()) {\n      throw new Error(\n        'Mnemonic does not pass the check - was the mnemonic typed incorrectly? Are there extra spaces?'\n      )\n    }\n    if (typeof passphrase !== 'string') {\n      throw new Error('passphrase must be a string or undefined')\n    }\n    mnemonic = mnemonic.normalize('NFKD')\n    passphrase = passphrase.normalize('NFKD')\n    const mbuf = Buffer.from(mnemonic)\n    const pbuf = Buffer.concat([\n      Buffer.from('mnemonic'),\n      Buffer.from(passphrase)\n    ])\n    this.seed = pbkdf2.pbkdf2Sync(mbuf, pbuf, 2048, 64, 'sha512')\n    return this\n  }\n\n  isValid (passphrase = '') {\n    let isValid\n    try {\n      isValid = !!this.mnemonic2Seed(passphrase)\n    } catch (err) {\n      isValid = false\n    }\n    return isValid\n  }\n\n  static isValid (mnemonic, passphrase = '') {\n    return new Bip39(mnemonic).isValid(passphrase)\n  }\n}\n\nexport { Bip39 }\n","'use strict'\nconst wordList = [\n  'あいこくしん',\n  'あいさつ',\n  'あいだ',\n  'あおぞら',\n  'あかちゃん',\n  'あきる',\n  'あけがた',\n  'あける',\n  'あこがれる',\n  'あさい',\n  'あさひ',\n  'あしあと',\n  'あじわう',\n  'あずかる',\n  'あずき',\n  'あそぶ',\n  'あたえる',\n  'あたためる',\n  'あたりまえ',\n  'あたる',\n  'あつい',\n  'あつかう',\n  'あっしゅく',\n  'あつまり',\n  'あつめる',\n  'あてな',\n  'あてはまる',\n  'あひる',\n  'あぶら',\n  'あぶる',\n  'あふれる',\n  'あまい',\n  'あまど',\n  'あまやかす',\n  'あまり',\n  'あみもの',\n  'あめりか',\n  'あやまる',\n  'あゆむ',\n  'あらいぐま',\n  'あらし',\n  'あらすじ',\n  'あらためる',\n  'あらゆる',\n  'あらわす',\n  'ありがとう',\n  'あわせる',\n  'あわてる',\n  'あんい',\n  'あんがい',\n  'あんこ',\n  'あんぜん',\n  'あんてい',\n  'あんない',\n  'あんまり',\n  'いいだす',\n  'いおん',\n  'いがい',\n  'いがく',\n  'いきおい',\n  'いきなり',\n  'いきもの',\n  'いきる',\n  'いくじ',\n  'いくぶん',\n  'いけばな',\n  'いけん',\n  'いこう',\n  'いこく',\n  'いこつ',\n  'いさましい',\n  'いさん',\n  'いしき',\n  'いじゅう',\n  'いじょう',\n  'いじわる',\n  'いずみ',\n  'いずれ',\n  'いせい',\n  'いせえび',\n  'いせかい',\n  'いせき',\n  'いぜん',\n  'いそうろう',\n  'いそがしい',\n  'いだい',\n  'いだく',\n  'いたずら',\n  'いたみ',\n  'いたりあ',\n  'いちおう',\n  'いちじ',\n  'いちど',\n  'いちば',\n  'いちぶ',\n  'いちりゅう',\n  'いつか',\n  'いっしゅん',\n  'いっせい',\n  'いっそう',\n  'いったん',\n  'いっち',\n  'いってい',\n  'いっぽう',\n  'いてざ',\n  'いてん',\n  'いどう',\n  'いとこ',\n  'いない',\n  'いなか',\n  'いねむり',\n  'いのち',\n  'いのる',\n  'いはつ',\n  'いばる',\n  'いはん',\n  'いびき',\n  'いひん',\n  'いふく',\n  'いへん',\n  'いほう',\n  'いみん',\n  'いもうと',\n  'いもたれ',\n  'いもり',\n  'いやがる',\n  'いやす',\n  'いよかん',\n  'いよく',\n  'いらい',\n  'いらすと',\n  'いりぐち',\n  'いりょう',\n  'いれい',\n  'いれもの',\n  'いれる',\n  'いろえんぴつ',\n  'いわい',\n  'いわう',\n  'いわかん',\n  'いわば',\n  'いわゆる',\n  'いんげんまめ',\n  'いんさつ',\n  'いんしょう',\n  'いんよう',\n  'うえき',\n  'うえる',\n  'うおざ',\n  'うがい',\n  'うかぶ',\n  'うかべる',\n  'うきわ',\n  'うくらいな',\n  'うくれれ',\n  'うけたまわる',\n  'うけつけ',\n  'うけとる',\n  'うけもつ',\n  'うける',\n  'うごかす',\n  'うごく',\n  'うこん',\n  'うさぎ',\n  'うしなう',\n  'うしろがみ',\n  'うすい',\n  'うすぎ',\n  'うすぐらい',\n  'うすめる',\n  'うせつ',\n  'うちあわせ',\n  'うちがわ',\n  'うちき',\n  'うちゅう',\n  'うっかり',\n  'うつくしい',\n  'うったえる',\n  'うつる',\n  'うどん',\n  'うなぎ',\n  'うなじ',\n  'うなずく',\n  'うなる',\n  'うねる',\n  'うのう',\n  'うぶげ',\n  'うぶごえ',\n  'うまれる',\n  'うめる',\n  'うもう',\n  'うやまう',\n  'うよく',\n  'うらがえす',\n  'うらぐち',\n  'うらない',\n  'うりあげ',\n  'うりきれ',\n  'うるさい',\n  'うれしい',\n  'うれゆき',\n  'うれる',\n  'うろこ',\n  'うわき',\n  'うわさ',\n  'うんこう',\n  'うんちん',\n  'うんてん',\n  'うんどう',\n  'えいえん',\n  'えいが',\n  'えいきょう',\n  'えいご',\n  'えいせい',\n  'えいぶん',\n  'えいよう',\n  'えいわ',\n  'えおり',\n  'えがお',\n  'えがく',\n  'えきたい',\n  'えくせる',\n  'えしゃく',\n  'えすて',\n  'えつらん',\n  'えのぐ',\n  'えほうまき',\n  'えほん',\n  'えまき',\n  'えもじ',\n  'えもの',\n  'えらい',\n  'えらぶ',\n  'えりあ',\n  'えんえん',\n  'えんかい',\n  'えんぎ',\n  'えんげき',\n  'えんしゅう',\n  'えんぜつ',\n  'えんそく',\n  'えんちょう',\n  'えんとつ',\n  'おいかける',\n  'おいこす',\n  'おいしい',\n  'おいつく',\n  'おうえん',\n  'おうさま',\n  'おうじ',\n  'おうせつ',\n  'おうたい',\n  'おうふく',\n  'おうべい',\n  'おうよう',\n  'おえる',\n  'おおい',\n  'おおう',\n  'おおどおり',\n  'おおや',\n  'おおよそ',\n  'おかえり',\n  'おかず',\n  'おがむ',\n  'おかわり',\n  'おぎなう',\n  'おきる',\n  'おくさま',\n  'おくじょう',\n  'おくりがな',\n  'おくる',\n  'おくれる',\n  'おこす',\n  'おこなう',\n  'おこる',\n  'おさえる',\n  'おさない',\n  'おさめる',\n  'おしいれ',\n  'おしえる',\n  'おじぎ',\n  'おじさん',\n  'おしゃれ',\n  'おそらく',\n  'おそわる',\n  'おたがい',\n  'おたく',\n  'おだやか',\n  'おちつく',\n  'おっと',\n  'おつり',\n  'おでかけ',\n  'おとしもの',\n  'おとなしい',\n  'おどり',\n  'おどろかす',\n  'おばさん',\n  'おまいり',\n  'おめでとう',\n  'おもいで',\n  'おもう',\n  'おもたい',\n  'おもちゃ',\n  'おやつ',\n  'おやゆび',\n  'およぼす',\n  'おらんだ',\n  'おろす',\n  'おんがく',\n  'おんけい',\n  'おんしゃ',\n  'おんせん',\n  'おんだん',\n  'おんちゅう',\n  'おんどけい',\n  'かあつ',\n  'かいが',\n  'がいき',\n  'がいけん',\n  'がいこう',\n  'かいさつ',\n  'かいしゃ',\n  'かいすいよく',\n  'かいぜん',\n  'かいぞうど',\n  'かいつう',\n  'かいてん',\n  'かいとう',\n  'かいふく',\n  'がいへき',\n  'かいほう',\n  'かいよう',\n  'がいらい',\n  'かいわ',\n  'かえる',\n  'かおり',\n  'かかえる',\n  'かがく',\n  'かがし',\n  'かがみ',\n  'かくご',\n  'かくとく',\n  'かざる',\n  'がぞう',\n  'かたい',\n  'かたち',\n  'がちょう',\n  'がっきゅう',\n  'がっこう',\n  'がっさん',\n  'がっしょう',\n  'かなざわし',\n  'かのう',\n  'がはく',\n  'かぶか',\n  'かほう',\n  'かほご',\n  'かまう',\n  'かまぼこ',\n  'かめれおん',\n  'かゆい',\n  'かようび',\n  'からい',\n  'かるい',\n  'かろう',\n  'かわく',\n  'かわら',\n  'がんか',\n  'かんけい',\n  'かんこう',\n  'かんしゃ',\n  'かんそう',\n  'かんたん',\n  'かんち',\n  'がんばる',\n  'きあい',\n  'きあつ',\n  'きいろ',\n  'ぎいん',\n  'きうい',\n  'きうん',\n  'きえる',\n  'きおう',\n  'きおく',\n  'きおち',\n  'きおん',\n  'きかい',\n  'きかく',\n  'きかんしゃ',\n  'ききて',\n  'きくばり',\n  'きくらげ',\n  'きけんせい',\n  'きこう',\n  'きこえる',\n  'きこく',\n  'きさい',\n  'きさく',\n  'きさま',\n  'きさらぎ',\n  'ぎじかがく',\n  'ぎしき',\n  'ぎじたいけん',\n  'ぎじにってい',\n  'ぎじゅつしゃ',\n  'きすう',\n  'きせい',\n  'きせき',\n  'きせつ',\n  'きそう',\n  'きぞく',\n  'きぞん',\n  'きたえる',\n  'きちょう',\n  'きつえん',\n  'ぎっちり',\n  'きつつき',\n  'きつね',\n  'きてい',\n  'きどう',\n  'きどく',\n  'きない',\n  'きなが',\n  'きなこ',\n  'きぬごし',\n  'きねん',\n  'きのう',\n  'きのした',\n  'きはく',\n  'きびしい',\n  'きひん',\n  'きふく',\n  'きぶん',\n  'きぼう',\n  'きほん',\n  'きまる',\n  'きみつ',\n  'きむずかしい',\n  'きめる',\n  'きもだめし',\n  'きもち',\n  'きもの',\n  'きゃく',\n  'きやく',\n  'ぎゅうにく',\n  'きよう',\n  'きょうりゅう',\n  'きらい',\n  'きらく',\n  'きりん',\n  'きれい',\n  'きれつ',\n  'きろく',\n  'ぎろん',\n  'きわめる',\n  'ぎんいろ',\n  'きんかくじ',\n  'きんじょ',\n  'きんようび',\n  'ぐあい',\n  'くいず',\n  'くうかん',\n  'くうき',\n  'くうぐん',\n  'くうこう',\n  'ぐうせい',\n  'くうそう',\n  'ぐうたら',\n  'くうふく',\n  'くうぼ',\n  'くかん',\n  'くきょう',\n  'くげん',\n  'ぐこう',\n  'くさい',\n  'くさき',\n  'くさばな',\n  'くさる',\n  'くしゃみ',\n  'くしょう',\n  'くすのき',\n  'くすりゆび',\n  'くせげ',\n  'くせん',\n  'ぐたいてき',\n  'くださる',\n  'くたびれる',\n  'くちこみ',\n  'くちさき',\n  'くつした',\n  'ぐっすり',\n  'くつろぐ',\n  'くとうてん',\n  'くどく',\n  'くなん',\n  'くねくね',\n  'くのう',\n  'くふう',\n  'くみあわせ',\n  'くみたてる',\n  'くめる',\n  'くやくしょ',\n  'くらす',\n  'くらべる',\n  'くるま',\n  'くれる',\n  'くろう',\n  'くわしい',\n  'ぐんかん',\n  'ぐんしょく',\n  'ぐんたい',\n  'ぐんて',\n  'けあな',\n  'けいかく',\n  'けいけん',\n  'けいこ',\n  'けいさつ',\n  'げいじゅつ',\n  'けいたい',\n  'げいのうじん',\n  'けいれき',\n  'けいろ',\n  'けおとす',\n  'けおりもの',\n  'げきか',\n  'げきげん',\n  'げきだん',\n  'げきちん',\n  'げきとつ',\n  'げきは',\n  'げきやく',\n  'げこう',\n  'げこくじょう',\n  'げざい',\n  'けさき',\n  'げざん',\n  'けしき',\n  'けしごむ',\n  'けしょう',\n  'げすと',\n  'けたば',\n  'けちゃっぷ',\n  'けちらす',\n  'けつあつ',\n  'けつい',\n  'けつえき',\n  'けっこん',\n  'けつじょ',\n  'けっせき',\n  'けってい',\n  'けつまつ',\n  'げつようび',\n  'げつれい',\n  'けつろん',\n  'げどく',\n  'けとばす',\n  'けとる',\n  'けなげ',\n  'けなす',\n  'けなみ',\n  'けぬき',\n  'げねつ',\n  'けねん',\n  'けはい',\n  'げひん',\n  'けぶかい',\n  'げぼく',\n  'けまり',\n  'けみかる',\n  'けむし',\n  'けむり',\n  'けもの',\n  'けらい',\n  'けろけろ',\n  'けわしい',\n  'けんい',\n  'けんえつ',\n  'けんお',\n  'けんか',\n  'げんき',\n  'けんげん',\n  'けんこう',\n  'けんさく',\n  'けんしゅう',\n  'けんすう',\n  'げんそう',\n  'けんちく',\n  'けんてい',\n  'けんとう',\n  'けんない',\n  'けんにん',\n  'げんぶつ',\n  'けんま',\n  'けんみん',\n  'けんめい',\n  'けんらん',\n  'けんり',\n  'こあくま',\n  'こいぬ',\n  'こいびと',\n  'ごうい',\n  'こうえん',\n  'こうおん',\n  'こうかん',\n  'ごうきゅう',\n  'ごうけい',\n  'こうこう',\n  'こうさい',\n  'こうじ',\n  'こうすい',\n  'ごうせい',\n  'こうそく',\n  'こうたい',\n  'こうちゃ',\n  'こうつう',\n  'こうてい',\n  'こうどう',\n  'こうない',\n  'こうはい',\n  'ごうほう',\n  'ごうまん',\n  'こうもく',\n  'こうりつ',\n  'こえる',\n  'こおり',\n  'ごかい',\n  'ごがつ',\n  'ごかん',\n  'こくご',\n  'こくさい',\n  'こくとう',\n  'こくない',\n  'こくはく',\n  'こぐま',\n  'こけい',\n  'こける',\n  'ここのか',\n  'こころ',\n  'こさめ',\n  'こしつ',\n  'こすう',\n  'こせい',\n  'こせき',\n  'こぜん',\n  'こそだて',\n  'こたい',\n  'こたえる',\n  'こたつ',\n  'こちょう',\n  'こっか',\n  'こつこつ',\n  'こつばん',\n  'こつぶ',\n  'こてい',\n  'こてん',\n  'ことがら',\n  'ことし',\n  'ことば',\n  'ことり',\n  'こなごな',\n  'こねこね',\n  'このまま',\n  'このみ',\n  'このよ',\n  'ごはん',\n  'こひつじ',\n  'こふう',\n  'こふん',\n  'こぼれる',\n  'ごまあぶら',\n  'こまかい',\n  'ごますり',\n  'こまつな',\n  'こまる',\n  'こむぎこ',\n  'こもじ',\n  'こもち',\n  'こもの',\n  'こもん',\n  'こやく',\n  'こやま',\n  'こゆう',\n  'こゆび',\n  'こよい',\n  'こよう',\n  'こりる',\n  'これくしょん',\n  'ころっけ',\n  'こわもて',\n  'こわれる',\n  'こんいん',\n  'こんかい',\n  'こんき',\n  'こんしゅう',\n  'こんすい',\n  'こんだて',\n  'こんとん',\n  'こんなん',\n  'こんびに',\n  'こんぽん',\n  'こんまけ',\n  'こんや',\n  'こんれい',\n  'こんわく',\n  'ざいえき',\n  'さいかい',\n  'さいきん',\n  'ざいげん',\n  'ざいこ',\n  'さいしょ',\n  'さいせい',\n  'ざいたく',\n  'ざいちゅう',\n  'さいてき',\n  'ざいりょう',\n  'さうな',\n  'さかいし',\n  'さがす',\n  'さかな',\n  'さかみち',\n  'さがる',\n  'さぎょう',\n  'さくし',\n  'さくひん',\n  'さくら',\n  'さこく',\n  'さこつ',\n  'さずかる',\n  'ざせき',\n  'さたん',\n  'さつえい',\n  'ざつおん',\n  'ざっか',\n  'ざつがく',\n  'さっきょく',\n  'ざっし',\n  'さつじん',\n  'ざっそう',\n  'さつたば',\n  'さつまいも',\n  'さてい',\n  'さといも',\n  'さとう',\n  'さとおや',\n  'さとし',\n  'さとる',\n  'さのう',\n  'さばく',\n  'さびしい',\n  'さべつ',\n  'さほう',\n  'さほど',\n  'さます',\n  'さみしい',\n  'さみだれ',\n  'さむけ',\n  'さめる',\n  'さやえんどう',\n  'さゆう',\n  'さよう',\n  'さよく',\n  'さらだ',\n  'ざるそば',\n  'さわやか',\n  'さわる',\n  'さんいん',\n  'さんか',\n  'さんきゃく',\n  'さんこう',\n  'さんさい',\n  'ざんしょ',\n  'さんすう',\n  'さんせい',\n  'さんそ',\n  'さんち',\n  'さんま',\n  'さんみ',\n  'さんらん',\n  'しあい',\n  'しあげ',\n  'しあさって',\n  'しあわせ',\n  'しいく',\n  'しいん',\n  'しうち',\n  'しえい',\n  'しおけ',\n  'しかい',\n  'しかく',\n  'じかん',\n  'しごと',\n  'しすう',\n  'じだい',\n  'したうけ',\n  'したぎ',\n  'したて',\n  'したみ',\n  'しちょう',\n  'しちりん',\n  'しっかり',\n  'しつじ',\n  'しつもん',\n  'してい',\n  'してき',\n  'してつ',\n  'じてん',\n  'じどう',\n  'しなぎれ',\n  'しなもの',\n  'しなん',\n  'しねま',\n  'しねん',\n  'しのぐ',\n  'しのぶ',\n  'しはい',\n  'しばかり',\n  'しはつ',\n  'しはらい',\n  'しはん',\n  'しひょう',\n  'しふく',\n  'じぶん',\n  'しへい',\n  'しほう',\n  'しほん',\n  'しまう',\n  'しまる',\n  'しみん',\n  'しむける',\n  'じむしょ',\n  'しめい',\n  'しめる',\n  'しもん',\n  'しゃいん',\n  'しゃうん',\n  'しゃおん',\n  'じゃがいも',\n  'しやくしょ',\n  'しゃくほう',\n  'しゃけん',\n  'しゃこ',\n  'しゃざい',\n  'しゃしん',\n  'しゃせん',\n  'しゃそう',\n  'しゃたい',\n  'しゃちょう',\n  'しゃっきん',\n  'じゃま',\n  'しゃりん',\n  'しゃれい',\n  'じゆう',\n  'じゅうしょ',\n  'しゅくはく',\n  'じゅしん',\n  'しゅっせき',\n  'しゅみ',\n  'しゅらば',\n  'じゅんばん',\n  'しょうかい',\n  'しょくたく',\n  'しょっけん',\n  'しょどう',\n  'しょもつ',\n  'しらせる',\n  'しらべる',\n  'しんか',\n  'しんこう',\n  'じんじゃ',\n  'しんせいじ',\n  'しんちく',\n  'しんりん',\n  'すあげ',\n  'すあし',\n  'すあな',\n  'ずあん',\n  'すいえい',\n  'すいか',\n  'すいとう',\n  'ずいぶん',\n  'すいようび',\n  'すうがく',\n  'すうじつ',\n  'すうせん',\n  'すおどり',\n  'すきま',\n  'すくう',\n  'すくない',\n  'すける',\n  'すごい',\n  'すこし',\n  'ずさん',\n  'すずしい',\n  'すすむ',\n  'すすめる',\n  'すっかり',\n  'ずっしり',\n  'ずっと',\n  'すてき',\n  'すてる',\n  'すねる',\n  'すのこ',\n  'すはだ',\n  'すばらしい',\n  'ずひょう',\n  'ずぶぬれ',\n  'すぶり',\n  'すふれ',\n  'すべて',\n  'すべる',\n  'ずほう',\n  'すぼん',\n  'すまい',\n  'すめし',\n  'すもう',\n  'すやき',\n  'すらすら',\n  'するめ',\n  'すれちがう',\n  'すろっと',\n  'すわる',\n  'すんぜん',\n  'すんぽう',\n  'せあぶら',\n  'せいかつ',\n  'せいげん',\n  'せいじ',\n  'せいよう',\n  'せおう',\n  'せかいかん',\n  'せきにん',\n  'せきむ',\n  'せきゆ',\n  'せきらんうん',\n  'せけん',\n  'せこう',\n  'せすじ',\n  'せたい',\n  'せたけ',\n  'せっかく',\n  'せっきゃく',\n  'ぜっく',\n  'せっけん',\n  'せっこつ',\n  'せっさたくま',\n  'せつぞく',\n  'せつだん',\n  'せつでん',\n  'せっぱん',\n  'せつび',\n  'せつぶん',\n  'せつめい',\n  'せつりつ',\n  'せなか',\n  'せのび',\n  'せはば',\n  'せびろ',\n  'せぼね',\n  'せまい',\n  'せまる',\n  'せめる',\n  'せもたれ',\n  'せりふ',\n  'ぜんあく',\n  'せんい',\n  'せんえい',\n  'せんか',\n  'せんきょ',\n  'せんく',\n  'せんげん',\n  'ぜんご',\n  'せんさい',\n  'せんしゅ',\n  'せんすい',\n  'せんせい',\n  'せんぞ',\n  'せんたく',\n  'せんちょう',\n  'せんてい',\n  'せんとう',\n  'せんぬき',\n  'せんねん',\n  'せんぱい',\n  'ぜんぶ',\n  'ぜんぽう',\n  'せんむ',\n  'せんめんじょ',\n  'せんもん',\n  'せんやく',\n  'せんゆう',\n  'せんよう',\n  'ぜんら',\n  'ぜんりゃく',\n  'せんれい',\n  'せんろ',\n  'そあく',\n  'そいとげる',\n  'そいね',\n  'そうがんきょう',\n  'そうき',\n  'そうご',\n  'そうしん',\n  'そうだん',\n  'そうなん',\n  'そうび',\n  'そうめん',\n  'そうり',\n  'そえもの',\n  'そえん',\n  'そがい',\n  'そげき',\n  'そこう',\n  'そこそこ',\n  'そざい',\n  'そしな',\n  'そせい',\n  'そせん',\n  'そそぐ',\n  'そだてる',\n  'そつう',\n  'そつえん',\n  'そっかん',\n  'そつぎょう',\n  'そっけつ',\n  'そっこう',\n  'そっせん',\n  'そっと',\n  'そとがわ',\n  'そとづら',\n  'そなえる',\n  'そなた',\n  'そふぼ',\n  'そぼく',\n  'そぼろ',\n  'そまつ',\n  'そまる',\n  'そむく',\n  'そむりえ',\n  'そめる',\n  'そもそも',\n  'そよかぜ',\n  'そらまめ',\n  'そろう',\n  'そんかい',\n  'そんけい',\n  'そんざい',\n  'そんしつ',\n  'そんぞく',\n  'そんちょう',\n  'ぞんび',\n  'ぞんぶん',\n  'そんみん',\n  'たあい',\n  'たいいん',\n  'たいうん',\n  'たいえき',\n  'たいおう',\n  'だいがく',\n  'たいき',\n  'たいぐう',\n  'たいけん',\n  'たいこ',\n  'たいざい',\n  'だいじょうぶ',\n  'だいすき',\n  'たいせつ',\n  'たいそう',\n  'だいたい',\n  'たいちょう',\n  'たいてい',\n  'だいどころ',\n  'たいない',\n  'たいねつ',\n  'たいのう',\n  'たいはん',\n  'だいひょう',\n  'たいふう',\n  'たいへん',\n  'たいほ',\n  'たいまつばな',\n  'たいみんぐ',\n  'たいむ',\n  'たいめん',\n  'たいやき',\n  'たいよう',\n  'たいら',\n  'たいりょく',\n  'たいる',\n  'たいわん',\n  'たうえ',\n  'たえる',\n  'たおす',\n  'たおる',\n  'たおれる',\n  'たかい',\n  'たかね',\n  'たきび',\n  'たくさん',\n  'たこく',\n  'たこやき',\n  'たさい',\n  'たしざん',\n  'だじゃれ',\n  'たすける',\n  'たずさわる',\n  'たそがれ',\n  'たたかう',\n  'たたく',\n  'ただしい',\n  'たたみ',\n  'たちばな',\n  'だっかい',\n  'だっきゃく',\n  'だっこ',\n  'だっしゅつ',\n  'だったい',\n  'たてる',\n  'たとえる',\n  'たなばた',\n  'たにん',\n  'たぬき',\n  'たのしみ',\n  'たはつ',\n  'たぶん',\n  'たべる',\n  'たぼう',\n  'たまご',\n  'たまる',\n  'だむる',\n  'ためいき',\n  'ためす',\n  'ためる',\n  'たもつ',\n  'たやすい',\n  'たよる',\n  'たらす',\n  'たりきほんがん',\n  'たりょう',\n  'たりる',\n  'たると',\n  'たれる',\n  'たれんと',\n  'たろっと',\n  'たわむれる',\n  'だんあつ',\n  'たんい',\n  'たんおん',\n  'たんか',\n  'たんき',\n  'たんけん',\n  'たんご',\n  'たんさん',\n  'たんじょうび',\n  'だんせい',\n  'たんそく',\n  'たんたい',\n  'だんち',\n  'たんてい',\n  'たんとう',\n  'だんな',\n  'たんにん',\n  'だんねつ',\n  'たんのう',\n  'たんぴん',\n  'だんぼう',\n  'たんまつ',\n  'たんめい',\n  'だんれつ',\n  'だんろ',\n  'だんわ',\n  'ちあい',\n  'ちあん',\n  'ちいき',\n  'ちいさい',\n  'ちえん',\n  'ちかい',\n  'ちから',\n  'ちきゅう',\n  'ちきん',\n  'ちけいず',\n  'ちけん',\n  'ちこく',\n  'ちさい',\n  'ちしき',\n  'ちしりょう',\n  'ちせい',\n  'ちそう',\n  'ちたい',\n  'ちたん',\n  'ちちおや',\n  'ちつじょ',\n  'ちてき',\n  'ちてん',\n  'ちぬき',\n  'ちぬり',\n  'ちのう',\n  'ちひょう',\n  'ちへいせん',\n  'ちほう',\n  'ちまた',\n  'ちみつ',\n  'ちみどろ',\n  'ちめいど',\n  'ちゃんこなべ',\n  'ちゅうい',\n  'ちゆりょく',\n  'ちょうし',\n  'ちょさくけん',\n  'ちらし',\n  'ちらみ',\n  'ちりがみ',\n  'ちりょう',\n  'ちるど',\n  'ちわわ',\n  'ちんたい',\n  'ちんもく',\n  'ついか',\n  'ついたち',\n  'つうか',\n  'つうじょう',\n  'つうはん',\n  'つうわ',\n  'つかう',\n  'つかれる',\n  'つくね',\n  'つくる',\n  'つけね',\n  'つける',\n  'つごう',\n  'つたえる',\n  'つづく',\n  'つつじ',\n  'つつむ',\n  'つとめる',\n  'つながる',\n  'つなみ',\n  'つねづね',\n  'つのる',\n  'つぶす',\n  'つまらない',\n  'つまる',\n  'つみき',\n  'つめたい',\n  'つもり',\n  'つもる',\n  'つよい',\n  'つるぼ',\n  'つるみく',\n  'つわもの',\n  'つわり',\n  'てあし',\n  'てあて',\n  'てあみ',\n  'ていおん',\n  'ていか',\n  'ていき',\n  'ていけい',\n  'ていこく',\n  'ていさつ',\n  'ていし',\n  'ていせい',\n  'ていたい',\n  'ていど',\n  'ていねい',\n  'ていひょう',\n  'ていへん',\n  'ていぼう',\n  'てうち',\n  'ておくれ',\n  'てきとう',\n  'てくび',\n  'でこぼこ',\n  'てさぎょう',\n  'てさげ',\n  'てすり',\n  'てそう',\n  'てちがい',\n  'てちょう',\n  'てつがく',\n  'てつづき',\n  'でっぱ',\n  'てつぼう',\n  'てつや',\n  'でぬかえ',\n  'てぬき',\n  'てぬぐい',\n  'てのひら',\n  'てはい',\n  'てぶくろ',\n  'てふだ',\n  'てほどき',\n  'てほん',\n  'てまえ',\n  'てまきずし',\n  'てみじか',\n  'てみやげ',\n  'てらす',\n  'てれび',\n  'てわけ',\n  'てわたし',\n  'でんあつ',\n  'てんいん',\n  'てんかい',\n  'てんき',\n  'てんぐ',\n  'てんけん',\n  'てんごく',\n  'てんさい',\n  'てんし',\n  'てんすう',\n  'でんち',\n  'てんてき',\n  'てんとう',\n  'てんない',\n  'てんぷら',\n  'てんぼうだい',\n  'てんめつ',\n  'てんらんかい',\n  'でんりょく',\n  'でんわ',\n  'どあい',\n  'といれ',\n  'どうかん',\n  'とうきゅう',\n  'どうぐ',\n  'とうし',\n  'とうむぎ',\n  'とおい',\n  'とおか',\n  'とおく',\n  'とおす',\n  'とおる',\n  'とかい',\n  'とかす',\n  'ときおり',\n  'ときどき',\n  'とくい',\n  'とくしゅう',\n  'とくてん',\n  'とくに',\n  'とくべつ',\n  'とけい',\n  'とける',\n  'とこや',\n  'とさか',\n  'としょかん',\n  'とそう',\n  'とたん',\n  'とちゅう',\n  'とっきゅう',\n  'とっくん',\n  'とつぜん',\n  'とつにゅう',\n  'とどける',\n  'ととのえる',\n  'とない',\n  'となえる',\n  'となり',\n  'とのさま',\n  'とばす',\n  'どぶがわ',\n  'とほう',\n  'とまる',\n  'とめる',\n  'ともだち',\n  'ともる',\n  'どようび',\n  'とらえる',\n  'とんかつ',\n  'どんぶり',\n  'ないかく',\n  'ないこう',\n  'ないしょ',\n  'ないす',\n  'ないせん',\n  'ないそう',\n  'なおす',\n  'ながい',\n  'なくす',\n  'なげる',\n  'なこうど',\n  'なさけ',\n  'なたでここ',\n  'なっとう',\n  'なつやすみ',\n  'ななおし',\n  'なにごと',\n  'なにもの',\n  'なにわ',\n  'なのか',\n  'なふだ',\n  'なまいき',\n  'なまえ',\n  'なまみ',\n  'なみだ',\n  'なめらか',\n  'なめる',\n  'なやむ',\n  'ならう',\n  'ならび',\n  'ならぶ',\n  'なれる',\n  'なわとび',\n  'なわばり',\n  'にあう',\n  'にいがた',\n  'にうけ',\n  'におい',\n  'にかい',\n  'にがて',\n  'にきび',\n  'にくしみ',\n  'にくまん',\n  'にげる',\n  'にさんかたんそ',\n  'にしき',\n  'にせもの',\n  'にちじょう',\n  'にちようび',\n  'にっか',\n  'にっき',\n  'にっけい',\n  'にっこう',\n  'にっさん',\n  'にっしょく',\n  'にっすう',\n  'にっせき',\n  'にってい',\n  'になう',\n  'にほん',\n  'にまめ',\n  'にもつ',\n  'にやり',\n  'にゅういん',\n  'にりんしゃ',\n  'にわとり',\n  'にんい',\n  'にんか',\n  'にんき',\n  'にんげん',\n  'にんしき',\n  'にんずう',\n  'にんそう',\n  'にんたい',\n  'にんち',\n  'にんてい',\n  'にんにく',\n  'にんぷ',\n  'にんまり',\n  'にんむ',\n  'にんめい',\n  'にんよう',\n  'ぬいくぎ',\n  'ぬかす',\n  'ぬぐいとる',\n  'ぬぐう',\n  'ぬくもり',\n  'ぬすむ',\n  'ぬまえび',\n  'ぬめり',\n  'ぬらす',\n  'ぬんちゃく',\n  'ねあげ',\n  'ねいき',\n  'ねいる',\n  'ねいろ',\n  'ねぐせ',\n  'ねくたい',\n  'ねくら',\n  'ねこぜ',\n  'ねこむ',\n  'ねさげ',\n  'ねすごす',\n  'ねそべる',\n  'ねだん',\n  'ねつい',\n  'ねっしん',\n  'ねつぞう',\n  'ねったいぎょ',\n  'ねぶそく',\n  'ねふだ',\n  'ねぼう',\n  'ねほりはほり',\n  'ねまき',\n  'ねまわし',\n  'ねみみ',\n  'ねむい',\n  'ねむたい',\n  'ねもと',\n  'ねらう',\n  'ねわざ',\n  'ねんいり',\n  'ねんおし',\n  'ねんかん',\n  'ねんきん',\n  'ねんぐ',\n  'ねんざ',\n  'ねんし',\n  'ねんちゃく',\n  'ねんど',\n  'ねんぴ',\n  'ねんぶつ',\n  'ねんまつ',\n  'ねんりょう',\n  'ねんれい',\n  'のいず',\n  'のおづま',\n  'のがす',\n  'のきなみ',\n  'のこぎり',\n  'のこす',\n  'のこる',\n  'のせる',\n  'のぞく',\n  'のぞむ',\n  'のたまう',\n  'のちほど',\n  'のっく',\n  'のばす',\n  'のはら',\n  'のべる',\n  'のぼる',\n  'のみもの',\n  'のやま',\n  'のらいぬ',\n  'のらねこ',\n  'のりもの',\n  'のりゆき',\n  'のれん',\n  'のんき',\n  'ばあい',\n  'はあく',\n  'ばあさん',\n  'ばいか',\n  'ばいく',\n  'はいけん',\n  'はいご',\n  'はいしん',\n  'はいすい',\n  'はいせん',\n  'はいそう',\n  'はいち',\n  'ばいばい',\n  'はいれつ',\n  'はえる',\n  'はおる',\n  'はかい',\n  'ばかり',\n  'はかる',\n  'はくしゅ',\n  'はけん',\n  'はこぶ',\n  'はさみ',\n  'はさん',\n  'はしご',\n  'ばしょ',\n  'はしる',\n  'はせる',\n  'ぱそこん',\n  'はそん',\n  'はたん',\n  'はちみつ',\n  'はつおん',\n  'はっかく',\n  'はづき',\n  'はっきり',\n  'はっくつ',\n  'はっけん',\n  'はっこう',\n  'はっさん',\n  'はっしん',\n  'はったつ',\n  'はっちゅう',\n  'はってん',\n  'はっぴょう',\n  'はっぽう',\n  'はなす',\n  'はなび',\n  'はにかむ',\n  'はぶらし',\n  'はみがき',\n  'はむかう',\n  'はめつ',\n  'はやい',\n  'はやし',\n  'はらう',\n  'はろうぃん',\n  'はわい',\n  'はんい',\n  'はんえい',\n  'はんおん',\n  'はんかく',\n  'はんきょう',\n  'ばんぐみ',\n  'はんこ',\n  'はんしゃ',\n  'はんすう',\n  'はんだん',\n  'ぱんち',\n  'ぱんつ',\n  'はんてい',\n  'はんとし',\n  'はんのう',\n  'はんぱ',\n  'はんぶん',\n  'はんぺん',\n  'はんぼうき',\n  'はんめい',\n  'はんらん',\n  'はんろん',\n  'ひいき',\n  'ひうん',\n  'ひえる',\n  'ひかく',\n  'ひかり',\n  'ひかる',\n  'ひかん',\n  'ひくい',\n  'ひけつ',\n  'ひこうき',\n  'ひこく',\n  'ひさい',\n  'ひさしぶり',\n  'ひさん',\n  'びじゅつかん',\n  'ひしょ',\n  'ひそか',\n  'ひそむ',\n  'ひたむき',\n  'ひだり',\n  'ひたる',\n  'ひつぎ',\n  'ひっこし',\n  'ひっし',\n  'ひつじゅひん',\n  'ひっす',\n  'ひつぜん',\n  'ぴったり',\n  'ぴっちり',\n  'ひつよう',\n  'ひてい',\n  'ひとごみ',\n  'ひなまつり',\n  'ひなん',\n  'ひねる',\n  'ひはん',\n  'ひびく',\n  'ひひょう',\n  'ひほう',\n  'ひまわり',\n  'ひまん',\n  'ひみつ',\n  'ひめい',\n  'ひめじし',\n  'ひやけ',\n  'ひやす',\n  'ひよう',\n  'びょうき',\n  'ひらがな',\n  'ひらく',\n  'ひりつ',\n  'ひりょう',\n  'ひるま',\n  'ひるやすみ',\n  'ひれい',\n  'ひろい',\n  'ひろう',\n  'ひろき',\n  'ひろゆき',\n  'ひんかく',\n  'ひんけつ',\n  'ひんこん',\n  'ひんしゅ',\n  'ひんそう',\n  'ぴんち',\n  'ひんぱん',\n  'びんぼう',\n  'ふあん',\n  'ふいうち',\n  'ふうけい',\n  'ふうせん',\n  'ぷうたろう',\n  'ふうとう',\n  'ふうふ',\n  'ふえる',\n  'ふおん',\n  'ふかい',\n  'ふきん',\n  'ふくざつ',\n  'ふくぶくろ',\n  'ふこう',\n  'ふさい',\n  'ふしぎ',\n  'ふじみ',\n  'ふすま',\n  'ふせい',\n  'ふせぐ',\n  'ふそく',\n  'ぶたにく',\n  'ふたん',\n  'ふちょう',\n  'ふつう',\n  'ふつか',\n  'ふっかつ',\n  'ふっき',\n  'ふっこく',\n  'ぶどう',\n  'ふとる',\n  'ふとん',\n  'ふのう',\n  'ふはい',\n  'ふひょう',\n  'ふへん',\n  'ふまん',\n  'ふみん',\n  'ふめつ',\n  'ふめん',\n  'ふよう',\n  'ふりこ',\n  'ふりる',\n  'ふるい',\n  'ふんいき',\n  'ぶんがく',\n  'ぶんぐ',\n  'ふんしつ',\n  'ぶんせき',\n  'ふんそう',\n  'ぶんぽう',\n  'へいあん',\n  'へいおん',\n  'へいがい',\n  'へいき',\n  'へいげん',\n  'へいこう',\n  'へいさ',\n  'へいしゃ',\n  'へいせつ',\n  'へいそ',\n  'へいたく',\n  'へいてん',\n  'へいねつ',\n  'へいわ',\n  'へきが',\n  'へこむ',\n  'べにいろ',\n  'べにしょうが',\n  'へらす',\n  'へんかん',\n  'べんきょう',\n  'べんごし',\n  'へんさい',\n  'へんたい',\n  'べんり',\n  'ほあん',\n  'ほいく',\n  'ぼうぎょ',\n  'ほうこく',\n  'ほうそう',\n  'ほうほう',\n  'ほうもん',\n  'ほうりつ',\n  'ほえる',\n  'ほおん',\n  'ほかん',\n  'ほきょう',\n  'ぼきん',\n  'ほくろ',\n  'ほけつ',\n  'ほけん',\n  'ほこう',\n  'ほこる',\n  'ほしい',\n  'ほしつ',\n  'ほしゅ',\n  'ほしょう',\n  'ほせい',\n  'ほそい',\n  'ほそく',\n  'ほたて',\n  'ほたる',\n  'ぽちぶくろ',\n  'ほっきょく',\n  'ほっさ',\n  'ほったん',\n  'ほとんど',\n  'ほめる',\n  'ほんい',\n  'ほんき',\n  'ほんけ',\n  'ほんしつ',\n  'ほんやく',\n  'まいにち',\n  'まかい',\n  'まかせる',\n  'まがる',\n  'まける',\n  'まこと',\n  'まさつ',\n  'まじめ',\n  'ますく',\n  'まぜる',\n  'まつり',\n  'まとめ',\n  'まなぶ',\n  'まぬけ',\n  'まねく',\n  'まほう',\n  'まもる',\n  'まゆげ',\n  'まよう',\n  'まろやか',\n  'まわす',\n  'まわり',\n  'まわる',\n  'まんが',\n  'まんきつ',\n  'まんぞく',\n  'まんなか',\n  'みいら',\n  'みうち',\n  'みえる',\n  'みがく',\n  'みかた',\n  'みかん',\n  'みけん',\n  'みこん',\n  'みじかい',\n  'みすい',\n  'みすえる',\n  'みせる',\n  'みっか',\n  'みつかる',\n  'みつける',\n  'みてい',\n  'みとめる',\n  'みなと',\n  'みなみかさい',\n  'みねらる',\n  'みのう',\n  'みのがす',\n  'みほん',\n  'みもと',\n  'みやげ',\n  'みらい',\n  'みりょく',\n  'みわく',\n  'みんか',\n  'みんぞく',\n  'むいか',\n  'むえき',\n  'むえん',\n  'むかい',\n  'むかう',\n  'むかえ',\n  'むかし',\n  'むぎちゃ',\n  'むける',\n  'むげん',\n  'むさぼる',\n  'むしあつい',\n  'むしば',\n  'むじゅん',\n  'むしろ',\n  'むすう',\n  'むすこ',\n  'むすぶ',\n  'むすめ',\n  'むせる',\n  'むせん',\n  'むちゅう',\n  'むなしい',\n  'むのう',\n  'むやみ',\n  'むよう',\n  'むらさき',\n  'むりょう',\n  'むろん',\n  'めいあん',\n  'めいうん',\n  'めいえん',\n  'めいかく',\n  'めいきょく',\n  'めいさい',\n  'めいし',\n  'めいそう',\n  'めいぶつ',\n  'めいれい',\n  'めいわく',\n  'めぐまれる',\n  'めざす',\n  'めした',\n  'めずらしい',\n  'めだつ',\n  'めまい',\n  'めやす',\n  'めんきょ',\n  'めんせき',\n  'めんどう',\n  'もうしあげる',\n  'もうどうけん',\n  'もえる',\n  'もくし',\n  'もくてき',\n  'もくようび',\n  'もちろん',\n  'もどる',\n  'もらう',\n  'もんく',\n  'もんだい',\n  'やおや',\n  'やける',\n  'やさい',\n  'やさしい',\n  'やすい',\n  'やすたろう',\n  'やすみ',\n  'やせる',\n  'やそう',\n  'やたい',\n  'やちん',\n  'やっと',\n  'やっぱり',\n  'やぶる',\n  'やめる',\n  'ややこしい',\n  'やよい',\n  'やわらかい',\n  'ゆうき',\n  'ゆうびんきょく',\n  'ゆうべ',\n  'ゆうめい',\n  'ゆけつ',\n  'ゆしゅつ',\n  'ゆせん',\n  'ゆそう',\n  'ゆたか',\n  'ゆちゃく',\n  'ゆでる',\n  'ゆにゅう',\n  'ゆびわ',\n  'ゆらい',\n  'ゆれる',\n  'ようい',\n  'ようか',\n  'ようきゅう',\n  'ようじ',\n  'ようす',\n  'ようちえん',\n  'よかぜ',\n  'よかん',\n  'よきん',\n  'よくせい',\n  'よくぼう',\n  'よけい',\n  'よごれる',\n  'よさん',\n  'よしゅう',\n  'よそう',\n  'よそく',\n  'よっか',\n  'よてい',\n  'よどがわく',\n  'よねつ',\n  'よやく',\n  'よゆう',\n  'よろこぶ',\n  'よろしい',\n  'らいう',\n  'らくがき',\n  'らくご',\n  'らくさつ',\n  'らくだ',\n  'らしんばん',\n  'らせん',\n  'らぞく',\n  'らたい',\n  'らっか',\n  'られつ',\n  'りえき',\n  'りかい',\n  'りきさく',\n  'りきせつ',\n  'りくぐん',\n  'りくつ',\n  'りけん',\n  'りこう',\n  'りせい',\n  'りそう',\n  'りそく',\n  'りてん',\n  'りねん',\n  'りゆう',\n  'りゅうがく',\n  'りよう',\n  'りょうり',\n  'りょかん',\n  'りょくちゃ',\n  'りょこう',\n  'りりく',\n  'りれき',\n  'りろん',\n  'りんご',\n  'るいけい',\n  'るいさい',\n  'るいじ',\n  'るいせき',\n  'るすばん',\n  'るりがわら',\n  'れいかん',\n  'れいぎ',\n  'れいせい',\n  'れいぞうこ',\n  'れいとう',\n  'れいぼう',\n  'れきし',\n  'れきだい',\n  'れんあい',\n  'れんけい',\n  'れんこん',\n  'れんさい',\n  'れんしゅう',\n  'れんぞく',\n  'れんらく',\n  'ろうか',\n  'ろうご',\n  'ろうじん',\n  'ろうそく',\n  'ろくが',\n  'ろこつ',\n  'ろじうら',\n  'ろしゅつ',\n  'ろせん',\n  'ろてん',\n  'ろめん',\n  'ろれつ',\n  'ろんぎ',\n  'ろんぱ',\n  'ろんぶん',\n  'ろんり',\n  'わかす',\n  'わかめ',\n  'わかやま',\n  'わかれる',\n  'わしつ',\n  'わじまし',\n  'わすれもの',\n  'わらう',\n  'われる'\n]\nwordList.space = '　'\nexport { wordList }\n","/**\n * KeyPair\n * =======\n *\n * A keyPair is a collection of a private key and a public key.\n * const keyPair = new KeyPair().fromRandom()\n * const keyPair = new KeyPair().fromPrivKey(privKey)\n * const privKey = keyPair.privKey\n * const pubKey = keyPair.pubKey\n */\n'use strict'\n\nimport { PrivKey as DefaultPrivKey } from './priv-key'\nimport { PubKey } from './pub-key'\nimport { Struct } from './struct'\nimport { Bw } from './bw'\n\nclass KeyPair extends Struct {\n  constructor (privKey, pubKey, PrivKey = DefaultPrivKey) {\n    super({ privKey, pubKey })\n    this.PrivKey = PrivKey\n  }\n\n  fromJSON (json) {\n    if (json.privKey) {\n      this.privKey = this.PrivKey.fromJSON(json.privKey)\n    }\n    if (json.pubKey) {\n      this.pubKey = PubKey.fromJSON(json.pubKey)\n    }\n    return this\n  }\n\n  fromBr (br) {\n    const buflen1 = br.readUInt8()\n    if (buflen1 > 0) {\n      this.privKey = new this.PrivKey().fromFastBuffer(br.read(buflen1))\n    }\n    const buflen2 = br.readUInt8()\n    if (buflen2 > 0) {\n      this.pubKey = new PubKey().fromFastBuffer(br.read(buflen2))\n    }\n    return this\n  }\n\n  toBw (bw) {\n    if (!bw) {\n      bw = new Bw()\n    }\n    if (this.privKey) {\n      const privKeybuf = this.privKey.toFastBuffer()\n      bw.writeUInt8(privKeybuf.length)\n      bw.write(privKeybuf)\n    } else {\n      bw.writeUInt8(0)\n    }\n    if (this.pubKey) {\n      const pubKeybuf = this.pubKey.toFastBuffer()\n      bw.writeUInt8(pubKeybuf.length)\n      bw.write(pubKeybuf)\n    } else {\n      bw.writeUInt8(0)\n    }\n    return bw\n  }\n\n  fromString (str) {\n    return this.fromJSON(JSON.parse(str))\n  }\n\n  toString () {\n    return JSON.stringify(this.toJSON())\n  }\n\n  toPublic () {\n    const keyPair = new KeyPair().fromObject(this)\n    keyPair.privKey = undefined\n    return keyPair\n  }\n\n  fromPrivKey (privKey) {\n    this.privKey = privKey\n    this.pubKey = new PubKey().fromPrivKey(privKey)\n    return this\n  }\n\n  static fromPrivKey (privKey) {\n    return new this().fromPrivKey(privKey)\n  }\n\n  async asyncFromPrivKey (privKey) {\n    this.privKey = privKey\n    this.pubKey = await new PubKey().asyncFromPrivKey(privKey)\n    return this\n  }\n\n  static asyncFromPrivKey (privKey) {\n    return new this().asyncFromPrivKey(privKey)\n  }\n\n  fromRandom () {\n    this.privKey = new this.PrivKey().fromRandom()\n    this.pubKey = new PubKey().fromPrivKey(this.privKey)\n    return this\n  }\n\n  static fromRandom () {\n    return new this().fromRandom()\n  }\n\n  async asyncFromRandom () {\n    this.privKey = new this.PrivKey().fromRandom()\n    return this.asyncFromPrivKey(this.privKey)\n  }\n\n  static asyncFromRandom () {\n    return new this().asyncFromRandom()\n  }\n}\n\nKeyPair.Mainnet = class extends KeyPair {\n  constructor (privKey, pubKey) {\n    super(privKey, pubKey, DefaultPrivKey.Mainnet)\n  }\n}\n\nKeyPair.Testnet = class extends KeyPair {\n  constructor (privKey, pubKey) {\n    super(privKey, pubKey, DefaultPrivKey.Testnet)\n  }\n}\n\nexport { KeyPair }\n","/**\n * Ecdsa\n * =====\n *\n * Ecdsa is the signature algorithm used by bitcoin. The way you probably want\n * to use this is with the static Ecdsa.sign( ... ) and Ecdsa.verify( ... )\n * functions. Note that in bitcoin, the hashBuf is little endian, so if you are\n * signing or verifying something that has to do with a transaction, you should\n * explicitly plug in that it is little endian as an option to the sign and\n * verify functions.\n *\n * This implementation of Ecdsa uses deterministic signatures as defined in RFC\n * 6979 as the default, which has become a defacto standard in bitcoin wallets\n * due to recurring security issues around using a value of k pulled from a\n * possibly faulty entropy pool. If you use the same value of k twice, someone\n * can derive your private key. Deterministic k prevents this without needing\n * an entropy pool.\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport { Br } from './br'\nimport { Hash } from './hash'\nimport { KeyPair } from './key-pair'\nimport { Point } from './point'\nimport { PubKey } from './pub-key'\nimport { Random } from './random'\nimport { Sig } from './sig'\nimport { Struct } from './struct'\nimport { Workers } from './workers'\n\nclass Ecdsa extends Struct {\n  constructor (sig, keyPair, hashBuf, k, endian, verified) {\n    super({ sig, keyPair, hashBuf, k, endian, verified })\n  }\n\n  toJSON () {\n    return {\n      sig: this.sig ? this.sig.toString() : undefined,\n      keyPair: this.keyPair\n        ? this.keyPair.toBuffer().toString('hex')\n        : undefined,\n      hashBuf: this.hashBuf ? this.hashBuf.toString('hex') : undefined,\n      k: this.k ? this.k.toString() : undefined,\n      endian: this.endian,\n      verified: this.verified\n    }\n  }\n\n  fromJSON (json) {\n    this.sig = json.sig ? new Sig().fromString(json.sig) : undefined\n    this.keyPair = json.keyPair\n      ? new KeyPair().fromBuffer(Buffer.from(json.keyPair, 'hex'))\n      : undefined\n    this.hashBuf = json.hashBuf ? Buffer.from(json.hashBuf, 'hex') : undefined\n    this.k = json.k ? new Bn().fromString(json.k) : undefined\n    this.endian = json.endian\n    this.verified = json.verified\n    return this\n  }\n\n  toBuffer () {\n    const str = JSON.stringify(this.toJSON())\n    return Buffer.from(str)\n  }\n\n  fromBuffer (buf) {\n    const json = JSON.parse(buf.toString())\n    return this.fromJSON(json)\n  }\n\n  calcrecovery () {\n    for (let recovery = 0; recovery < 4; recovery++) {\n      let Qprime\n      this.sig.recovery = recovery\n      try {\n        Qprime = this.sig2PubKey()\n      } catch (e) {\n        continue\n      }\n\n      if (Qprime.point.eq(this.keyPair.pubKey.point)) {\n        const compressed = this.keyPair.pubKey.compressed\n        this.sig.compressed =\n            this.keyPair.pubKey.compressed === undefined ? true : compressed\n        return this\n      }\n    }\n\n    this.sig.recovery = undefined\n    throw new Error('Unable to find valid recovery factor')\n  }\n\n  async asyncCalcrecovery () {\n    const workersResult = await Workers.asyncObjectMethod(\n      this,\n      'calcrecovery',\n      []\n    )\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  /**\n     * Calculates the recovery factor, and mutates sig so that it now contains\n     * the recovery factor and the \"compressed\" variable. Throws an exception on\n     * failure.\n     */\n  static calcrecovery (sig, pubKey, hashBuf) {\n    const ecdsa = new Ecdsa().fromObject({\n      sig: sig,\n      keyPair: new KeyPair().fromObject({ pubKey: pubKey }),\n      hashBuf: hashBuf\n    })\n    return ecdsa.calcrecovery().sig\n  }\n\n  static async asyncCalcrecovery (sig, pubKey, hashBuf) {\n    const workersResult = await Workers.asyncClassMethod(\n      Ecdsa,\n      'calcrecovery',\n      [sig, pubKey, hashBuf]\n    )\n    return new Sig().fromFastBuffer(workersResult.resbuf)\n  }\n\n  fromString (str) {\n    const obj = JSON.parse(str)\n    if (obj.hashBuf) {\n      this.hashBuf = Buffer.from(obj.hashBuf, 'hex')\n    }\n    if (obj.keyPair) {\n      this.keyPair = new KeyPair().fromString(obj.keyPair)\n    }\n    if (obj.sig) {\n      this.sig = new Sig().fromString(obj.sig)\n    }\n    if (obj.k) {\n      this.k = new Bn(obj.k, 10)\n    }\n    return this\n  }\n\n  randomK () {\n    const N = Point.getN()\n    let k\n    do {\n      k = new Bn().fromBuffer(Random.getRandomBuffer(32))\n    } while (!(k.lt(N) && k.gt(0)))\n    this.k = k\n    return this\n  }\n\n  /**\n     * The traditional Ecdsa algorithm uses a purely random value of k. This has\n     * the negative that when signing, your entropy must be good, or the private\n     * key can be recovered if two signatures use the same value of k. It turns out\n     * that k does not have to be purely random. It can be deterministic, so long\n     * as an attacker can't guess it. RFC 6979 specifies how to do this using a\n     * combination of the private key and the hash of the thing to be signed. It is\n     * best practice to use this value, which can be tested for byte-for-byte\n     * accuracy, and is resistant to a broken RNG. Note that it is actually the\n     * case that bitcoin private keys have been compromised through that attack.\n     * Deterministic k is a best practice.\n     *\n     * https://tools.ietf.org/html/rfc6979#section-3.2\n     */\n  deterministicK (badrs) {\n    let v = Buffer.alloc(32)\n    v.fill(0x01)\n    let k = Buffer.alloc(32)\n    k.fill(0x00)\n    const x = this.keyPair.privKey.bn.toBuffer({ size: 32 })\n    k = Hash.sha256Hmac(\n      Buffer.concat([v, Buffer.from([0x00]), x, this.hashBuf]),\n      k\n    )\n    v = Hash.sha256Hmac(v, k)\n    k = Hash.sha256Hmac(\n      Buffer.concat([v, Buffer.from([0x01]), x, this.hashBuf]),\n      k\n    )\n    v = Hash.sha256Hmac(v, k)\n    v = Hash.sha256Hmac(v, k)\n    let T = new Bn().fromBuffer(v)\n    const N = Point.getN()\n\n    // if r or s were invalid when this function was used in signing,\n    // we do not want to actually compute r, s here for efficiency, so,\n    // we can increment badrs. explained at end of RFC 6979 section 3.2\n    if (badrs === undefined) {\n      badrs = 0\n    }\n    // also explained in 3.2, we must ensure T is in the proper range (0, N)\n    for (let i = 0; i < badrs || !(T.lt(N) && T.gt(0)); i++) {\n      k = Hash.sha256Hmac(Buffer.concat([v, Buffer.from([0x00])]), k)\n      v = Hash.sha256Hmac(v, k)\n      v = Hash.sha256Hmac(v, k)\n      T = new Bn().fromBuffer(v)\n    }\n\n    this.k = T\n    return this\n  }\n\n  /**\n     * Information about public key recovery:\n     * https://bitcointalk.org/index.php?topic=6430.0\n     * http://stackoverflow.com/questions/19665491/how-do-i-get-an-ecdsa-public-key-from-just-a-bitcoin-signature-sec1-4-1-6-k\n     * This code was originally taken from BitcoinJS\n     */\n  sig2PubKey () {\n    const recovery = this.sig.recovery\n    if (\n      !(recovery === 0 || recovery === 1 || recovery === 2 || recovery === 3)\n    ) {\n      throw new Error('i must be equal to 0, 1, 2, or 3')\n    }\n\n    const e = new Bn().fromBuffer(this.hashBuf)\n    const r = this.sig.r\n    const s = this.sig.s\n\n    // A set LSB signifies that the y-coordinate is odd\n    const isYOdd = recovery & 1\n\n    // The more significant bit specifies whether we should use the\n    // first or second candidate key.\n    const isSecondKey = recovery >> 1\n\n    const n = Point.getN()\n    const G = Point.getG()\n\n    // 1.1 LEt x = r + jn\n    const x = isSecondKey ? r.add(n) : r\n    const R = Point.fromX(isYOdd, x)\n\n    // 1.4 Check that nR is at infinity\n    let errm = ''\n    try {\n      R.mul(n)\n    } catch (err) {\n      errm = err.message\n    }\n    if (errm !== 'point mul out of range') {\n      throw new Error('nR is not a valid curve point')\n    }\n\n    // Compute -e from e\n    const eNeg = e.neg().umod(n)\n\n    // 1.6.1 Compute Q = r^-1 (sR - eG)\n    // Q = r^-1 (sR + -eG)\n    const rInv = r.invm(n)\n\n    // const Q = R.multiplyTwo(s, G, eNeg).mul(rInv)\n    const Q = R.mul(s)\n      .add(G.mul(eNeg))\n      .mul(rInv)\n\n    const pubKey = new PubKey(Q)\n    pubKey.compressed = this.sig.compressed\n    pubKey.validate()\n\n    return pubKey\n  }\n\n  async asyncSig2PubKey () {\n    const workersResult = await Workers.asyncObjectMethod(\n      this,\n      'sig2PubKey',\n      []\n    )\n    return PubKey.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static sig2PubKey (sig, hashBuf) {\n    const ecdsa = new Ecdsa().fromObject({\n      sig: sig,\n      hashBuf: hashBuf\n    })\n    return ecdsa.sig2PubKey()\n  }\n\n  static async asyncSig2PubKey (sig, hashBuf) {\n    const ecdsa = new Ecdsa().fromObject({\n      sig: sig,\n      hashBuf: hashBuf\n    })\n    const pubKey = await ecdsa.asyncSig2PubKey()\n    return pubKey\n  }\n\n  verifyStr (enforceLowS = true) {\n    if (!Buffer.isBuffer(this.hashBuf) || this.hashBuf.length !== 32) {\n      return 'hashBuf must be a 32 byte buffer'\n    }\n\n    try {\n      this.keyPair.pubKey.validate()\n    } catch (e) {\n      return 'Invalid pubKey: ' + e\n    }\n\n    const r = this.sig.r\n    const s = this.sig.s\n    if (\n      !(r.gt(0) && r.lt(Point.getN())) ||\n        !(s.gt(0) && s.lt(Point.getN()))\n    ) {\n      return 'r and s not in range'\n    }\n\n    if (enforceLowS) {\n      if (!this.sig.hasLowS()) {\n        return 's is too high and does not satisfy low s contraint - see bip 62'\n      }\n    }\n\n    const e = new Bn().fromBuffer(\n      this.hashBuf,\n      this.endian ? { endian: this.endian } : undefined\n    )\n    const n = Point.getN()\n    const sinv = s.invm(n)\n    const u1 = sinv.mul(e).mod(n)\n    const u2 = sinv.mul(r).mod(n)\n\n    const p = Point.getG().mulAdd(u1, this.keyPair.pubKey.point, u2)\n    // const p = Point.getG().mulAdd(u1, this.keyPair.pubKey.point, u2)\n    if (p.isInfinity()) {\n      return 'p is infinity'\n    }\n\n    if (\n      !(\n        p\n          .getX()\n          .mod(n)\n          .cmp(r) === 0\n      )\n    ) {\n      return 'Invalid signature'\n    } else {\n      return false\n    }\n  }\n\n  sign () {\n    const hashBuf =\n        this.endian === 'little'\n          ? new Br(this.hashBuf).readReverse()\n          : this.hashBuf\n\n    const privKey = this.keyPair.privKey\n\n    const d = privKey.bn\n\n    if (!hashBuf || !privKey || !d) {\n      throw new Error('invalid parameters')\n    }\n\n    if (!Buffer.isBuffer(hashBuf) || hashBuf.length !== 32) {\n      throw new Error('hashBuf must be a 32 byte buffer')\n    }\n\n    const N = Point.getN()\n    const G = Point.getG()\n    const e = new Bn().fromBuffer(hashBuf)\n\n    // try different values of k until r, s are valid\n    let badrs = 0\n    let k, Q, r, s\n    do {\n      if (!this.k || badrs > 0) {\n        this.deterministicK(badrs)\n      }\n      badrs++\n      k = this.k\n      Q = G.mul(k)\n      r = Q.getX().mod(N)\n      s = k\n        .invm(N)\n        .mul(e.add(d.mul(r)))\n        .mod(N)\n    } while (r.cmp(0) <= 0 || s.cmp(0) <= 0)\n\n    // enforce low s\n    // see Bip 62, \"low S values in signatures\"\n    if (\n      s.gt(\n        new Bn().fromBuffer(\n          Buffer.from(\n            '7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0',\n            'hex'\n          )\n        )\n      )\n    ) {\n      s = Point.getN().sub(s)\n    }\n    this.sig = Sig.fromObject({\n      r: r,\n      s: s,\n      compressed: this.keyPair.pubKey.compressed\n    })\n    return this\n  }\n\n  async asyncSign () {\n    const workersResult = await Workers.asyncObjectMethod(this, 'sign', [])\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  signRandomK () {\n    this.randomK()\n    return this.sign()\n  }\n\n  toString () {\n    const obj = {}\n    if (this.hashBuf) {\n      obj.hashBuf = this.hashBuf.toString('hex')\n    }\n    if (this.keyPair) {\n      obj.keyPair = this.keyPair.toString()\n    }\n    if (this.sig) {\n      obj.sig = this.sig.toString()\n    }\n    if (this.k) {\n      obj.k = this.k.toString()\n    }\n    return JSON.stringify(obj)\n  }\n\n  verify (enforceLowS = true) {\n    if (!this.verifyStr(enforceLowS)) {\n      this.verified = true\n    } else {\n      this.verified = false\n    }\n    return this\n  }\n\n  async asyncVerify (enforceLowS = true) {\n    const workersResult = await Workers.asyncObjectMethod(this, 'verify', [\n      enforceLowS\n    ])\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static sign (hashBuf, keyPair, endian) {\n    return new Ecdsa()\n      .fromObject({\n        hashBuf: hashBuf,\n        endian: endian,\n        keyPair: keyPair\n      })\n      .sign().sig\n  }\n\n  static async asyncSign (hashBuf, keyPair, endian) {\n    const ecdsa = new Ecdsa().fromObject({\n      hashBuf: hashBuf,\n      endian: endian,\n      keyPair: keyPair\n    })\n    await ecdsa.asyncSign()\n    return ecdsa.sig\n  }\n\n  static verify (hashBuf, sig, pubKey, endian, enforceLowS = true) {\n    return new Ecdsa()\n      .fromObject({\n        hashBuf: hashBuf,\n        endian: endian,\n        sig: sig,\n        keyPair: new KeyPair().fromObject({ pubKey: pubKey })\n      })\n      .verify(enforceLowS).verified\n  }\n\n  static async asyncVerify (hashBuf, sig, pubKey, endian, enforceLowS = true) {\n    const ecdsa = new Ecdsa().fromObject({\n      hashBuf: hashBuf,\n      endian: endian,\n      sig: sig,\n      keyPair: new KeyPair().fromObject({ pubKey: pubKey })\n    })\n    await ecdsa.asyncVerify(enforceLowS)\n    return ecdsa.verified\n  }\n}\n\nexport { Ecdsa }\n","/**\n * Bitcoin Signed Message\n * ======================\n *\n * \"Bitcoin Signed Message\" just refers to a standard way of signing and\n * verifying an arbitrary message. The standard way to do this involves using a\n * \"Bitcoin Signed Message:\\n\" prefix, which this code does. You are probably\n * interested in the static Bsm.sign( ... ) and Bsm.verify( ... ) functions,\n * which deal with a base64 string representing the compressed format of a\n * signature.\n */\n'use strict'\n\nimport { Address } from './address'\nimport { Bw } from './bw'\nimport { cmp } from './cmp'\nimport { Ecdsa } from './ecdsa'\nimport { Hash } from './hash'\nimport { KeyPair } from './key-pair'\nimport { Sig } from './sig'\nimport { Struct } from './struct'\nimport { Workers } from './workers'\n\nclass Bsm extends Struct {\n  constructor (messageBuf, keyPair, sig, address, verified) {\n    super({ messageBuf, keyPair, sig, address, verified })\n  }\n\n  static magicHash (messageBuf) {\n    if (!Buffer.isBuffer(messageBuf)) {\n      throw new Error('messageBuf must be a buffer')\n    }\n    const bw = new Bw()\n    bw.writeVarIntNum(Bsm.magicBytes.length)\n    bw.write(Bsm.magicBytes)\n    bw.writeVarIntNum(messageBuf.length)\n    bw.write(messageBuf)\n    const buf = bw.toBuffer()\n\n    const hashBuf = Hash.sha256Sha256(buf)\n\n    return hashBuf\n  }\n\n  static async asyncMagicHash (messageBuf) {\n    const args = [messageBuf]\n    const workersResult = await Workers.asyncClassMethod(Bsm, 'magicHash', args)\n    return workersResult.resbuf\n  }\n\n  static sign (messageBuf, keyPair) {\n    const m = new Bsm(messageBuf, keyPair)\n    m.sign()\n    const sigbuf = m.sig.toCompact()\n    const sigstr = sigbuf.toString('base64')\n    return sigstr\n  }\n\n  static async asyncSign (messageBuf, keyPair) {\n    const args = [messageBuf, keyPair]\n    const workersResult = await Workers.asyncClassMethod(Bsm, 'sign', args)\n    const sigstr = JSON.parse(workersResult.resbuf.toString())\n    return sigstr\n  }\n\n  static verify (messageBuf, sigstr, address) {\n    const sigbuf = Buffer.from(sigstr, 'base64')\n    const message = new Bsm()\n    message.messageBuf = messageBuf\n    message.sig = new Sig().fromCompact(sigbuf)\n    message.address = address\n\n    return message.verify().verified\n  }\n\n  static async asyncVerify (messageBuf, sigstr, address) {\n    const args = [messageBuf, sigstr, address]\n    const workersResult = await Workers.asyncClassMethod(Bsm, 'verify', args)\n    const res = JSON.parse(workersResult.resbuf.toString())\n    return res\n  }\n\n  sign () {\n    const hashBuf = Bsm.magicHash(this.messageBuf)\n    const ecdsa = new Ecdsa().fromObject({\n      hashBuf: hashBuf,\n      keyPair: this.keyPair\n    })\n    ecdsa.sign()\n    ecdsa.calcrecovery()\n    this.sig = ecdsa.sig\n    return this\n  }\n\n  verify () {\n    const hashBuf = Bsm.magicHash(this.messageBuf)\n\n    const ecdsa = new Ecdsa()\n    ecdsa.hashBuf = hashBuf\n    ecdsa.sig = this.sig\n    ecdsa.keyPair = new KeyPair()\n    ecdsa.keyPair.pubKey = ecdsa.sig2PubKey()\n\n    if (!ecdsa.verify()) {\n      this.verified = false\n      return this\n    }\n\n    const address = new Address().fromPubKey(\n      ecdsa.keyPair.pubKey,\n      undefined,\n      this.sig.compressed\n    )\n    // TODO: what if livenet/testnet mismatch?\n    if (cmp(address.hashBuf, this.address.hashBuf)) {\n      this.verified = true\n    } else {\n      this.verified = false\n    }\n\n    return this\n  }\n}\n\nBsm.magicBytes = Buffer.from('Bitcoin Signed Message:\\n')\n\nexport { Bsm }\n","/**\n * Block Header\n * ============\n *\n * Every block contains a blockHeader. This is probably not something you will\n * personally use, but it's here if you need it.\n */\n'use strict'\n\nimport { Bw } from './bw'\nimport { Struct } from './struct'\n\nclass BlockHeader extends Struct {\n  constructor (\n    versionBytesNum,\n    prevBlockHashBuf,\n    merkleRootBuf,\n    time,\n    bits,\n    nonce\n  ) {\n    super({\n      versionBytesNum,\n      prevBlockHashBuf,\n      merkleRootBuf,\n      time,\n      bits,\n      nonce\n    })\n  }\n\n  fromJSON (json) {\n    this.fromObject({\n      versionBytesNum: json.versionBytesNum,\n      prevBlockHashBuf: Buffer.from(json.prevBlockHashBuf, 'hex'),\n      merkleRootBuf: Buffer.from(json.merkleRootBuf, 'hex'),\n      time: json.time,\n      bits: json.bits,\n      nonce: json.nonce\n    })\n    return this\n  }\n\n  toJSON () {\n    return {\n      versionBytesNum: this.versionBytesNum,\n      prevBlockHashBuf: this.prevBlockHashBuf.toString('hex'),\n      merkleRootBuf: this.merkleRootBuf.toString('hex'),\n      time: this.time,\n      bits: this.bits,\n      nonce: this.nonce\n    }\n  }\n\n  fromBr (br) {\n    this.versionBytesNum = br.readUInt32LE()\n    this.prevBlockHashBuf = br.read(32)\n    this.merkleRootBuf = br.read(32)\n    this.time = br.readUInt32LE()\n    this.bits = br.readUInt32LE()\n    this.nonce = br.readUInt32LE()\n    return this\n  }\n\n  toBw (bw) {\n    if (!bw) {\n      bw = new Bw()\n    }\n    bw.writeUInt32LE(this.versionBytesNum)\n    bw.write(this.prevBlockHashBuf)\n    bw.write(this.merkleRootBuf)\n    bw.writeUInt32LE(this.time)\n    bw.writeUInt32LE(this.bits)\n    bw.writeUInt32LE(this.nonce)\n    return bw\n  }\n}\n\nexport { BlockHeader }\n","/**\n * Merkle\n * ======\n *\n * A node in a Merkle tree (possibly the root node, in which case it is the\n * Merkle root). A node either contains a buffer or links to two other nodes.\n */\n'use strict'\n\nimport { Hash } from './hash'\nimport { Struct } from './struct'\n\nclass Merkle extends Struct {\n  constructor (hashBuf, buf, merkle1, merkle2) {\n    super({ hashBuf, buf, merkle1, merkle2 })\n  }\n\n  hash () {\n    if (this.hashBuf) {\n      return this.hashBuf\n    }\n    if (this.buf) {\n      return Hash.sha256Sha256(this.buf)\n    }\n    const hashBuf1 = this.merkle1.hash()\n    const hashBuf2 = this.merkle2.hash()\n    this.buf = Buffer.concat([hashBuf1, hashBuf2])\n    return Hash.sha256Sha256(this.buf)\n  }\n\n  fromBuffers (bufs) {\n    if (bufs.length < 1) {\n      throw new Error('buffers must have a length')\n    }\n    bufs = bufs.slice()\n    const log = Math.log2(bufs.length)\n    if (!Number.isInteger(log)) {\n      // If a merkle tree does not have a number of ends that is a power of 2,\n      // then we have to copy the last value until it is a power of 2. Note\n      // that we copy *the actual object* over and over again, which ensures\n      // that when we finds its hash, the hash is cached.\n      const lastval = bufs[bufs.length - 1]\n      var len = Math.pow(2, Math.ceil(log))\n      for (let i = bufs.length; i < len; i++) {\n        bufs.push(lastval)\n      }\n    }\n    const bufs1 = bufs.slice(0, bufs.length / 2)\n    const bufs2 = bufs.slice(bufs.length / 2)\n    this.fromBufferArrays(bufs1, bufs2)\n    return this\n  }\n\n  static fromBuffers (bufs) {\n    return new this().fromBuffers(bufs)\n  }\n\n  /**\n     * Takes two arrays, both of which *must* be of a length that is a power of\n     * two.\n     */\n  fromBufferArrays (bufs1, bufs2) {\n    if (bufs1.length === 1) {\n      this.merkle1 = new Merkle(undefined, bufs1[0])\n      this.merkle2 = new Merkle(undefined, bufs2[0])\n      return this\n    }\n    const bufs11 = bufs1.slice(0, bufs1.length / 2)\n    const bufs12 = bufs1.slice(bufs1.length / 2)\n    this.merkle1 = new Merkle().fromBufferArrays(bufs11, bufs12)\n    const bufs21 = bufs2.slice(0, bufs2.length / 2)\n    const bufs22 = bufs2.slice(bufs2.length / 2)\n    this.merkle2 = new Merkle().fromBufferArrays(bufs21, bufs22)\n    return this\n  }\n\n  static fromBufferArrays (bufs1, bufs2) {\n    return new this().fromBufferArrays(bufs1, bufs2)\n  }\n\n  leavesNum () {\n    if (this.merkle1) {\n      return this.merkle1.leavesNum() + this.merkle2.leavesNum()\n    }\n    if (this.buf) {\n      return 1\n    }\n    throw new Error('invalid number of leaves')\n  }\n}\n\nexport { Merkle }\n","/**\n * Hash Cache\n * ==========\n *\n * For use in sighash.\n */\n'use strict'\n\nimport { Struct } from './struct'\n\nclass HashCache extends Struct {\n  constructor (prevoutsHashBuf, sequenceHashBuf, outputsHashBuf) {\n    super()\n    this.fromObject({ prevoutsHashBuf, sequenceHashBuf, outputsHashBuf })\n  }\n\n  fromBuffer (buf) {\n    return this.fromJSON(JSON.parse(buf.toString()))\n  }\n\n  toBuffer () {\n    return Buffer.from(JSON.stringify(this.toJSON()))\n  }\n\n  fromJSON (json) {\n    this.prevoutsHashBuf = json.prevoutsHashBuf ? Buffer.from(json.prevoutsHashBuf, 'hex') : undefined\n    this.sequenceHashBuf = json.sequenceHashBuf ? Buffer.from(json.sequenceHashBuf, 'hex') : undefined\n    this.outputsHashBuf = json.outputsHashBuf ? Buffer.from(json.outputsHashBuf, 'hex') : undefined\n    return this\n  }\n\n  toJSON () {\n    return {\n      prevoutsHashBuf: this.prevoutsHashBuf ? this.prevoutsHashBuf.toString('hex') : undefined,\n      sequenceHashBuf: this.sequenceHashBuf ? this.sequenceHashBuf.toString('hex') : undefined,\n      outputsHashBuf: this.outputsHashBuf ? this.outputsHashBuf.toString('hex') : undefined\n    }\n  }\n}\n\nexport { HashCache }\n","/**\n * VarInt (a.k.a. Compact Size)\n * ============================\n *\n * A varInt is a varible sized integer, and it is a format that is unique to\n * bitcoin, and used throughout bitcoin to represent the length of binary data\n * in a compact format that can take up as little as 1 byte or as much as 9\n * bytes.\n */\n'use strict'\n\nimport { Br } from './br'\nimport { Bw } from './bw'\nimport { Struct } from './struct'\n\nclass VarInt extends Struct {\n  constructor (buf) {\n    super({ buf })\n  }\n\n  fromJSON (json) {\n    this.fromObject({\n      buf: Buffer.from(json, 'hex')\n    })\n    return this\n  }\n\n  toJSON () {\n    return this.buf.toString('hex')\n  }\n\n  fromBuffer (buf) {\n    this.buf = buf\n    return this\n  }\n\n  fromBr (br) {\n    this.buf = br.readVarIntBuf()\n    return this\n  }\n\n  fromBn (bn) {\n    this.buf = new Bw().writeVarIntBn(bn).toBuffer()\n    return this\n  }\n\n  static fromBn (bn) {\n    return new this().fromBn(bn)\n  }\n\n  fromNumber (num) {\n    this.buf = new Bw().writeVarIntNum(num).toBuffer()\n    return this\n  }\n\n  static fromNumber (num) {\n    return new this().fromNumber(num)\n  }\n\n  toBuffer () {\n    return this.buf\n  }\n\n  toBn () {\n    return new Br(this.buf).readVarIntBn()\n  }\n\n  toNumber () {\n    return new Br(this.buf).readVarIntNum()\n  }\n}\n\nexport { VarInt }\n","/*\n * Transaction Input\n * =================\n *\n * An input to a transaction. The way you probably want to use this is through\n * the convenient method of new TxIn(txHashBuf, txOutNum, script, nSequence) (i.e., you\n * can leave out the scriptVi, which is computed automatically if you leave it\n * out.)\n */\n'use strict'\n\nimport { Bw } from './bw'\nimport { VarInt } from './var-int'\nimport { OpCode } from './op-code'\nimport { Script } from './script'\nimport { Struct } from './struct'\n\nclass TxIn extends Struct {\n  constructor (txHashBuf, txOutNum, scriptVi, script, nSequence = 0xffffffff) {\n    super({ txHashBuf, txOutNum, scriptVi, script, nSequence })\n  }\n\n  setScript (script) {\n    this.scriptVi = VarInt.fromNumber(script.toBuffer().length)\n    this.script = script\n    return this\n  }\n\n  fromProperties (txHashBuf, txOutNum, script, nSequence) {\n    this.fromObject({ txHashBuf, txOutNum, nSequence })\n    this.setScript(script)\n    return this\n  }\n\n  static fromProperties (txHashBuf, txOutNum, script, nSequence) {\n    return new this().fromProperties(txHashBuf, txOutNum, script, nSequence)\n  }\n\n  fromJSON (json) {\n    this.fromObject({\n      txHashBuf:\n          typeof json.txHashBuf !== 'undefined'\n            ? Buffer.from(json.txHashBuf, 'hex')\n            : undefined,\n      txOutNum: json.txOutNum,\n      scriptVi:\n          typeof json.scriptVi !== 'undefined'\n            ? VarInt.fromJSON(json.scriptVi)\n            : undefined,\n      script:\n          typeof json.script !== 'undefined'\n            ? Script.fromJSON(json.script)\n            : undefined,\n      nSequence: json.nSequence\n    })\n    return this\n  }\n\n  toJSON () {\n    return {\n      txHashBuf:\n          typeof this.txHashBuf !== 'undefined'\n            ? this.txHashBuf.toString('hex')\n            : undefined,\n      txOutNum: this.txOutNum,\n      scriptVi:\n          typeof this.scriptVi !== 'undefined'\n            ? this.scriptVi.toJSON()\n            : undefined,\n      script:\n          typeof this.script !== 'undefined' ? this.script.toJSON() : undefined,\n      nSequence: this.nSequence\n    }\n  }\n\n  fromBr (br) {\n    this.txHashBuf = br.read(32)\n    this.txOutNum = br.readUInt32LE()\n    this.scriptVi = VarInt.fromBuffer(br.readVarIntBuf())\n    this.script = Script.fromBuffer(br.read(this.scriptVi.toNumber()))\n    this.nSequence = br.readUInt32LE()\n    return this\n  }\n\n  toBw (bw) {\n    if (!bw) {\n      bw = new Bw()\n    }\n    bw.write(this.txHashBuf)\n    bw.writeUInt32LE(this.txOutNum)\n    bw.write(this.scriptVi.buf)\n    bw.write(this.script.toBuffer())\n    bw.writeUInt32LE(this.nSequence)\n    return bw\n  }\n\n  /**\n     * Generate txIn with blank signatures from a txOut and its\n     * txHashBuf+txOutNum. A \"blank\" signature is just an OP_0. The pubKey also\n     * defaults to blank but can be substituted with the real public key if you\n     * know what it is.\n     */\n  fromPubKeyHashTxOut (txHashBuf, txOutNum, txOut, pubKey) {\n    const script = new Script()\n    if (txOut.script.isPubKeyHashOut()) {\n      script.writeOpCode(OpCode.OP_0) // blank signature\n      if (pubKey) {\n        script.writeBuffer(pubKey.toBuffer())\n      } else {\n        script.writeOpCode(OpCode.OP_0)\n      }\n    } else {\n      throw new Error('txOut must be of type pubKeyHash')\n    }\n    this.txHashBuf = txHashBuf\n    this.txOutNum = txOutNum\n    this.setScript(script)\n    return this\n  }\n\n  hasNullInput () {\n    const hex = this.txHashBuf.toString('hex')\n    if (\n      hex ===\n          '0000000000000000000000000000000000000000000000000000000000000000' &&\n        this.txOutNum === 0xffffffff\n    ) {\n      return true\n    }\n    return false\n  }\n\n  /**\n     * Analagous to bitcoind's SetNull in COutPoint\n     */\n  setNullInput () {\n    this.txHashBuf = Buffer.alloc(32)\n    this.txHashBuf.fill(0)\n    this.txOutNum = 0xffffffff // -1 cast to unsigned int\n  }\n}\n\n/* Interpret sequence numbers as relative lock-time constraints. */\nTxIn.LOCKTIME_VERIFY_SEQUENCE = 1 << 0\n\n/* Setting nSequence to this value for every input in a transaction disables\n   * nLockTime. */\nTxIn.SEQUENCE_FINAL = 0xffffffff\n\n/* Below flags apply in the context of Bip 68 */\n/* If this flag set, txIn.nSequence is NOT interpreted as a relative lock-time.\n   * */\nTxIn.SEQUENCE_LOCKTIME_DISABLE_FLAG = 1 << 31\n\n/* If txIn.nSequence encodes a relative lock-time and this flag is set, the\n   * relative lock-time has units of 512 seconds, otherwise it specifies blocks\n   * with a granularity of 1. */\nTxIn.SEQUENCE_LOCKTIME_TYPE_FLAG = 1 << 22\n\n/* If txIn.nSequence encodes a relative lock-time, this mask is applied to\n   * extract that lock-time from the sequence field. */\nTxIn.SEQUENCE_LOCKTIME_MASK = 0x0000ffff\n\n/* In order to use the same number of bits to encode roughly the same\n   * wall-clock duration, and because blocks are naturally limited to occur\n   * every 600s on average, the minimum granularity for time-based relative\n   * lock-time is fixed at 512 seconds.  Converting from CTxIn::nSequence to\n   * seconds is performed by multiplying by 512 = 2^9, or equivalently\n   * shifting up by 9 bits. */\nTxIn.SEQUENCE_LOCKTIME_GRANULARITY = 9\n\nexport { TxIn }\n","/**\n * Transaction Output\n * ==================\n *\n * An output to a transaction. The way you normally want to make one is with\n * new TxOut(valueBn, script) (i.e., just as with TxIn, you can leave out the\n * scriptVi, since it can be computed automatically.\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport { Bw } from './bw'\nimport { Script } from './script'\nimport { Struct } from './struct'\nimport { VarInt } from './var-int'\n\nclass TxOut extends Struct {\n  constructor (valueBn, scriptVi, script) {\n    super({ valueBn, scriptVi, script })\n  }\n\n  setScript (script) {\n    this.scriptVi = VarInt.fromNumber(script.toBuffer().length)\n    this.script = script\n    return this\n  }\n\n  fromProperties (valueBn, script) {\n    this.fromObject({ valueBn })\n    this.setScript(script)\n    return this\n  }\n\n  static fromProperties (valueBn, script) {\n    return new this().fromProperties(valueBn, script)\n  }\n\n  fromJSON (json) {\n    this.fromObject({\n      valueBn: new Bn().fromJSON(json.valueBn),\n      scriptVi: new VarInt().fromJSON(json.scriptVi),\n      script: new Script().fromJSON(json.script)\n    })\n    return this\n  }\n\n  toJSON () {\n    return {\n      valueBn: this.valueBn.toJSON(),\n      scriptVi: this.scriptVi.toJSON(),\n      script: this.script.toJSON()\n    }\n  }\n\n  fromBr (br) {\n    this.valueBn = br.readUInt64LEBn()\n    this.scriptVi = VarInt.fromNumber(br.readVarIntNum())\n    this.script = new Script().fromBuffer(br.read(this.scriptVi.toNumber()))\n    return this\n  }\n\n  toBw (bw) {\n    if (!bw) {\n      bw = new Bw()\n    }\n    bw.writeUInt64LEBn(this.valueBn)\n    bw.write(this.scriptVi.buf)\n    bw.write(this.script.toBuffer())\n    return bw\n  }\n}\n\nexport { TxOut }\n","/**\n * Transaction\n * ===========\n *\n * A bitcoin transaction.\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport { Br } from './br'\nimport { Bw } from './bw'\nimport { Ecdsa } from './ecdsa'\nimport { Hash } from './hash'\nimport { HashCache } from './hash-cache'\nimport { Script } from './script'\nimport { Sig } from './sig'\nimport { Struct } from './struct'\nimport { TxIn } from './tx-in'\nimport { TxOut } from './tx-out'\nimport { VarInt } from './var-int'\nimport { Workers } from './workers'\n\nclass Tx extends Struct {\n  constructor (\n    versionBytesNum = 1,\n    txInsVi = VarInt.fromNumber(0),\n    txIns = [],\n    txOutsVi = VarInt.fromNumber(0),\n    txOuts = [],\n    nLockTime = 0\n  ) {\n    super({ versionBytesNum, txInsVi, txIns, txOutsVi, txOuts, nLockTime })\n  }\n\n  fromJSON (json) {\n    const txIns = []\n    json.txIns.forEach(function (txIn) {\n      txIns.push(new TxIn().fromJSON(txIn))\n    })\n    const txOuts = []\n    json.txOuts.forEach(function (txOut) {\n      txOuts.push(new TxOut().fromJSON(txOut))\n    })\n    this.fromObject({\n      versionBytesNum: json.versionBytesNum,\n      txInsVi: new VarInt().fromJSON(json.txInsVi),\n      txIns: txIns,\n      txOutsVi: new VarInt().fromJSON(json.txOutsVi),\n      txOuts: txOuts,\n      nLockTime: json.nLockTime\n    })\n    return this\n  }\n\n  toJSON () {\n    const txIns = []\n    this.txIns.forEach(function (txIn) {\n      txIns.push(txIn.toJSON())\n    })\n    const txOuts = []\n    this.txOuts.forEach(function (txOut) {\n      txOuts.push(txOut.toJSON())\n    })\n    return {\n      versionBytesNum: this.versionBytesNum,\n      txInsVi: this.txInsVi.toJSON(),\n      txIns: txIns,\n      txOutsVi: this.txOutsVi.toJSON(),\n      txOuts: txOuts,\n      nLockTime: this.nLockTime\n    }\n  }\n\n  fromBr (br) {\n    this.versionBytesNum = br.readUInt32LE()\n    this.txInsVi = new VarInt(br.readVarIntBuf())\n    const txInsNum = this.txInsVi.toNumber()\n    this.txIns = []\n    for (let i = 0; i < txInsNum; i++) {\n      this.txIns.push(new TxIn().fromBr(br))\n    }\n    this.txOutsVi = new VarInt(br.readVarIntBuf())\n    const txOutsNum = this.txOutsVi.toNumber()\n    this.txOuts = []\n    for (let i = 0; i < txOutsNum; i++) {\n      this.txOuts.push(new TxOut().fromBr(br))\n    }\n    this.nLockTime = br.readUInt32LE()\n    return this\n  }\n\n  toBw (bw) {\n    if (!bw) {\n      bw = new Bw()\n    }\n    bw.writeUInt32LE(this.versionBytesNum)\n    bw.write(this.txInsVi.buf)\n    for (let i = 0; i < this.txIns.length; i++) {\n      this.txIns[i].toBw(bw)\n    }\n    bw.write(this.txOutsVi.buf)\n    for (let i = 0; i < this.txOuts.length; i++) {\n      this.txOuts[i].toBw(bw)\n    }\n    bw.writeUInt32LE(this.nLockTime)\n    return bw\n  }\n\n  // https://github.com/Bitcoin-UAHF/spec/blob/master/replay-protected-sighash.md\n  hashPrevouts () {\n    const bw = new Bw()\n    for (const i in this.txIns) {\n      const txIn = this.txIns[i]\n      bw.write(txIn.txHashBuf) // outpoint (1/2)\n      bw.writeUInt32LE(txIn.txOutNum) // outpoint (2/2)\n    }\n    return Hash.sha256Sha256(bw.toBuffer())\n  }\n\n  hashSequence () {\n    const bw = new Bw()\n    for (const i in this.txIns) {\n      const txIn = this.txIns[i]\n      bw.writeUInt32LE(txIn.nSequence)\n    }\n    return Hash.sha256Sha256(bw.toBuffer())\n  }\n\n  hashOutputs () {\n    const bw = new Bw()\n    for (const i in this.txOuts) {\n      const txOut = this.txOuts[i]\n      bw.write(txOut.toBuffer())\n    }\n    return Hash.sha256Sha256(bw.toBuffer())\n  }\n\n  /**\n   * For a normal transaction, subScript is usually the scriptPubKey. For a\n   * p2sh transaction, subScript is usually the redeemScript. If you're not\n   * normal because you're using OP_CODESEPARATORs, you know what to do.\n   */\n  sighash (nHashType, nIn, subScript, valueBn, flags = 0, hashCache = new HashCache()) {\n    const buf = this.sighashPreimage(nHashType, nIn, subScript, valueBn, flags, hashCache)\n    if (buf.compare(Buffer.from('0000000000000000000000000000000000000000000000000000000000000001', 'hex')) === 0) {\n      return buf\n    }\n    return new Br(Hash.sha256Sha256(buf)).readReverse()\n  }\n\n  async asyncSighash (nHashType, nIn, subScript, valueBn, flags = 0, hashCache = {}) {\n    const workersResult = await Workers.asyncObjectMethod(this, 'sighash', [\n      nHashType,\n      nIn,\n      subScript,\n      valueBn,\n      flags,\n      hashCache\n    ])\n    return workersResult.resbuf\n  }\n\n  sighashPreimage (nHashType, nIn, subScript, valueBn, flags = 0, hashCache = new HashCache()) {\n    // start with UAHF part (Bitcoin SV)\n    // https://github.com/Bitcoin-UAHF/spec/blob/master/replay-protected-sighash.md\n    if (\n      nHashType & Sig.SIGHASH_FORKID &&\n      flags & Tx.SCRIPT_ENABLE_SIGHASH_FORKID\n    ) {\n      let hashPrevouts = Buffer.alloc(32, 0)\n      let hashSequence = Buffer.alloc(32, 0)\n      let hashOutputs = Buffer.alloc(32, 0)\n\n      if (!(nHashType & Sig.SIGHASH_ANYONECANPAY)) {\n        hashPrevouts = hashCache.prevoutsHashBuf ? hashCache.prevoutsHashBuf : hashCache.prevoutsHashBuf = this.hashPrevouts()\n      }\n\n      if (\n        !(nHashType & Sig.SIGHASH_ANYONECANPAY) &&\n        (nHashType & 0x1f) !== Sig.SIGHASH_SINGLE &&\n        (nHashType & 0x1f) !== Sig.SIGHASH_NONE\n      ) {\n        hashSequence = hashCache.sequenceHashBuf ? hashCache.sequenceHashBuf : hashCache.sequenceHashBuf = this.hashSequence()\n      }\n\n      if (\n        (nHashType & 0x1f) !== Sig.SIGHASH_SINGLE &&\n        (nHashType & 0x1f) !== Sig.SIGHASH_NONE\n      ) {\n        hashOutputs = hashCache.outputsHashBuf ? hashCache.outputsHashBuf : hashCache.outputsHashBuf = this.hashOutputs()\n      } else if (\n        (nHashType & 0x1f) === Sig.SIGHASH_SINGLE &&\n        nIn < this.txOuts.length\n      ) {\n        hashOutputs = Hash.sha256Sha256(this.txOuts[nIn].toBuffer())\n      }\n\n      const bw = new Bw()\n      bw.writeUInt32LE(this.versionBytesNum)\n      bw.write(hashPrevouts)\n      bw.write(hashSequence)\n      bw.write(this.txIns[nIn].txHashBuf) // outpoint (1/2)\n      bw.writeUInt32LE(this.txIns[nIn].txOutNum) // outpoint (2/2)\n      bw.writeVarIntNum(subScript.toBuffer().length)\n      bw.write(subScript.toBuffer())\n      bw.writeUInt64LEBn(valueBn)\n      bw.writeUInt32LE(this.txIns[nIn].nSequence)\n      bw.write(hashOutputs)\n      bw.writeUInt32LE(this.nLockTime)\n      bw.writeUInt32LE(nHashType >>> 0)\n\n      return bw.toBuffer()\n    }\n\n    // original bitcoin code follows - not related to UAHF (Bitcoin SV)\n    const txcopy = this.cloneByBuffer()\n\n    subScript = new Script().fromBuffer(subScript.toBuffer())\n    subScript.removeCodeseparators()\n\n    for (let i = 0; i < txcopy.txIns.length; i++) {\n      txcopy.txIns[i] = TxIn.fromBuffer(txcopy.txIns[i].toBuffer()).setScript(\n        new Script()\n      )\n    }\n\n    txcopy.txIns[nIn] = TxIn.fromBuffer(\n      txcopy.txIns[nIn].toBuffer()\n    ).setScript(subScript)\n\n    if ((nHashType & 31) === Sig.SIGHASH_NONE) {\n      txcopy.txOuts.length = 0\n      txcopy.txOutsVi = VarInt.fromNumber(0)\n\n      for (let i = 0; i < txcopy.txIns.length; i++) {\n        if (i !== nIn) {\n          txcopy.txIns[i].nSequence = 0\n        }\n      }\n    } else if ((nHashType & 31) === Sig.SIGHASH_SINGLE) {\n      // The SIGHASH_SINGLE bug.\n      // https://bitcointalk.org/index.php?topic=260595.0\n      if (nIn > txcopy.txOuts.length - 1) {\n        return Buffer.from(\n          '0000000000000000000000000000000000000000000000000000000000000001',\n          'hex'\n        )\n      }\n\n      txcopy.txOuts.length = nIn + 1\n      txcopy.txOutsVi = VarInt.fromNumber(nIn + 1)\n\n      for (let i = 0; i < txcopy.txOuts.length; i++) {\n        if (i < nIn) {\n          txcopy.txOuts[i] = TxOut.fromProperties(\n            new Bn().fromBuffer(Buffer.from('ffffffffffffffff', 'hex')),\n            new Script()\n          )\n        }\n      }\n\n      for (let i = 0; i < txcopy.txIns.length; i++) {\n        if (i !== nIn) {\n          txcopy.txIns[i].nSequence = 0\n        }\n      }\n    }\n    // else, SIGHASH_ALL\n\n    if (nHashType & Sig.SIGHASH_ANYONECANPAY) {\n      txcopy.txIns[0] = txcopy.txIns[nIn]\n      txcopy.txIns.length = 1\n      txcopy.txInsVi = VarInt.fromNumber(1)\n    }\n\n    const buf = new Bw()\n      .write(txcopy.toBuffer())\n      .writeInt32LE(nHashType)\n      .toBuffer()\n    return buf\n  }\n\n  async asyncSighashPreimage (nHashType, nIn, subScript, valueBn, flags = 0, hashCache = {}) {\n    const workersResult = await Workers.asyncObjectMethod(this, 'sighashPreimage', [\n      nHashType,\n      nIn,\n      subScript,\n      valueBn,\n      flags,\n      hashCache\n    ])\n    return workersResult.resbuf\n  }\n\n  // This function returns a signature but does not update any inputs\n  sign (keyPair, nHashType = Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID, nIn, subScript, valueBn, flags = Tx.SCRIPT_ENABLE_SIGHASH_FORKID, hashCache = {}) {\n    const hashBuf = this.sighash(nHashType, nIn, subScript, valueBn, flags, hashCache)\n    const sig = Ecdsa.sign(hashBuf, keyPair, 'little').fromObject({\n      nHashType: nHashType\n    })\n    return sig\n  }\n\n  async asyncSign (keyPair, nHashType = Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID, nIn, subScript, valueBn, flags = Tx.SCRIPT_ENABLE_SIGHASH_FORKID, hashCache = {}) {\n    const workersResult = await Workers.asyncObjectMethod(this, 'sign', [\n      keyPair,\n      nHashType,\n      nIn,\n      subScript,\n      valueBn,\n      flags,\n      hashCache\n    ])\n    return new Sig().fromFastBuffer(workersResult.resbuf)\n  }\n\n  // This function takes a signature as input and does not parse any inputs\n  verify (\n    sig,\n    pubKey,\n    nIn,\n    subScript,\n    enforceLowS = false,\n    valueBn,\n    flags = Tx.SCRIPT_ENABLE_SIGHASH_FORKID,\n    hashCache = {}\n  ) {\n    const hashBuf = this.sighash(sig.nHashType, nIn, subScript, valueBn, flags, hashCache)\n    return Ecdsa.verify(hashBuf, sig, pubKey, 'little', enforceLowS)\n  }\n\n  async asyncVerify (\n    sig,\n    pubKey,\n    nIn,\n    subScript,\n    enforceLowS = false,\n    valueBn,\n    flags = Tx.SCRIPT_ENABLE_SIGHASH_FORKID,\n    hashCache = {}\n  ) {\n    const workersResult = await Workers.asyncObjectMethod(this, 'verify', [\n      sig,\n      pubKey,\n      nIn,\n      subScript,\n      enforceLowS,\n      valueBn,\n      flags,\n      hashCache\n    ])\n    return JSON.parse(workersResult.resbuf.toString())\n  }\n\n  hash () {\n    return Hash.sha256Sha256(this.toBuffer())\n  }\n\n  async asyncHash () {\n    const workersResult = await Workers.asyncObjectMethod(this, 'hash', [])\n    return workersResult.resbuf\n  }\n\n  id () {\n    return new Br(this.hash()).readReverse().toString('hex')\n  }\n\n  async asyncId () {\n    const workersResult = await Workers.asyncObjectMethod(this, 'id', [])\n    return JSON.parse(workersResult.resbuf.toString())\n  }\n\n  addTxIn (txHashBuf, txOutNum, script, nSequence) {\n    let txIn\n    if (txHashBuf instanceof TxIn) {\n      txIn = txHashBuf\n    } else {\n      txIn = new TxIn()\n        .fromObject({ txHashBuf, txOutNum, nSequence })\n        .setScript(script)\n    }\n    this.txIns.push(txIn)\n    this.txInsVi = VarInt.fromNumber(this.txInsVi.toNumber() + 1)\n    return this\n  }\n\n  addTxOut (valueBn, script) {\n    let txOut\n    if (valueBn instanceof TxOut) {\n      txOut = valueBn\n    } else {\n      txOut = new TxOut().fromObject({ valueBn }).setScript(script)\n    }\n    this.txOuts.push(txOut)\n    this.txOutsVi = VarInt.fromNumber(this.txOutsVi.toNumber() + 1)\n    return this\n  }\n\n  /**\n   * Analagous to bitcoind's IsCoinBase function in transaction.h\n   */\n  isCoinbase () {\n    return this.txIns.length === 1 && this.txIns[0].hasNullInput()\n  }\n\n  /**\n   * BIP 69 sorting. Be sure to sign after sorting.\n   */\n  sort () {\n    this.txIns.sort((first, second) => {\n      return new Br(first.txHashBuf).readReverse().compare(new Br(second.txHashBuf).readReverse()) ||\n        first.txOutNum - second.txOutNum\n    })\n\n    this.txOuts.sort((first, second) => {\n      return first.valueBn.sub(second.valueBn).toNumber() ||\n        first.script.toBuffer().compare(second.script.toBuffer())\n    })\n\n    return this\n  }\n}\n\nTx.MAX_MONEY = 21000000 * 1e8\n\n// This is defined on Interp, but Tx cannot depend on Interp - must redefine here\nTx.SCRIPT_ENABLE_SIGHASH_FORKID = 1 << 16\n\nexport { Tx }\n","/**\n * Block\n * =====\n *\n * A block, of course, is a collection of transactions. This class is somewhat\n * incompconste at the moment. In the future, it should support the ability to\n * check to see if a transaction is in a block (thanks to the magic of merkle\n * trees). You will probably never use Yours Bitcoin to create a block, since almost\n * everyone will use bitcoind for that. As such, the primary way to use this is\n * new Block().fromBuffer(buf), which will parse the block and prepare its insides\n * for you to inspect.\n */\n'use strict'\n\nimport { Br } from './br'\nimport { Bw } from './bw'\nimport { BlockHeader } from './block-header'\nimport { Hash } from './hash'\nimport { Merkle } from './merkle'\nimport { Struct } from './struct'\nimport { Tx } from './tx'\nimport { VarInt } from './var-int'\nimport { Workers } from './workers'\n\nclass Block extends Struct {\n  constructor (blockHeader, txsVi, txs) {\n    super({ blockHeader, txsVi, txs })\n  }\n\n  fromJSON (json) {\n    const txs = []\n    json.txs.forEach(function (tx) {\n      txs.push(new Tx().fromJSON(tx))\n    })\n    this.fromObject({\n      blockHeader: new BlockHeader().fromJSON(json.blockHeader),\n      txsVi: new VarInt().fromJSON(json.txsVi),\n      txs: txs\n    })\n    return this\n  }\n\n  toJSON () {\n    const txs = []\n    this.txs.forEach(function (tx) {\n      txs.push(tx.toJSON())\n    })\n    return {\n      blockHeader: this.blockHeader.toJSON(),\n      txsVi: this.txsVi.toJSON(),\n      txs: txs\n    }\n  }\n\n  fromBr (br) {\n    this.blockHeader = new BlockHeader().fromBr(br)\n    this.txsVi = new VarInt(br.readVarIntBuf())\n    const txsNum = this.txsVi.toNumber()\n    this.txs = []\n    for (let i = 0; i < txsNum; i++) {\n      this.txs.push(new Tx().fromBr(br))\n    }\n    return this\n  }\n\n  toBw (bw) {\n    if (!bw) {\n      bw = new Bw()\n    }\n    bw.write(this.blockHeader.toBuffer())\n    bw.write(this.txsVi.buf)\n    const txsNum = this.txsVi.toNumber()\n    for (let i = 0; i < txsNum; i++) {\n      this.txs[i].toBw(bw)\n    }\n    return bw\n  }\n\n  hash () {\n    return Hash.sha256Sha256(this.blockHeader.toBuffer())\n  }\n\n  async asyncHash () {\n    const workersResult = await Workers.asyncObjectMethod(this, 'hash', [])\n    return workersResult.resbuf\n  }\n\n  id () {\n    return new Br(this.hash()).readReverse().toString('hex')\n  }\n\n  async asyncId () {\n    const workersResult = await Workers.asyncObjectMethod(this, 'id', [])\n    return JSON.parse(workersResult.resbuf.toString())\n  }\n\n  verifyMerkleRoot () {\n    const txsbufs = this.txs.map(tx => tx.toBuffer())\n    const merkleRootBuf = Merkle.fromBuffers(txsbufs).hash()\n    return Buffer.compare(merkleRootBuf, this.blockHeader.merkleRootBuf)\n  }\n\n  /**\n   * Sometimes we don't want to parse an entire block into memory. Instead, we\n   * simply want to iterate through all transactions in the block. That is what\n   * this method is for. This method returns an efficient iterator which can be\n   * used in a `for (tx of txs)` construct that returns each tx one at a time\n   * without first parsing all of them into memory.\n   *\n   * @param {Buffer} blockBuf A buffer of a block.\n   */\n  static iterateTxs (blockBuf) {\n    const br = new Br(blockBuf)\n    const blockHeader = new BlockHeader().fromBr(br)\n    const txsVi = new VarInt(br.readVarIntBuf())\n    const txsNum = txsVi.toNumber()\n    return {\n      blockHeader,\n      txsVi,\n      txsNum,\n      * [Symbol.iterator] () {\n        for (let i = 0; i < txsNum; i++) {\n          yield new Tx().fromBr(br)\n        }\n      }\n    }\n  }\n}\n\nBlock.MAX_BLOCK_SIZE = 1000000\n\nexport { Block }\n","/**\n * Script Interpreter\n * ==================\n *\n * Bitcoin transactions contain scripts. Each input has a script called the\n * scriptSig, and each output has a script called the scriptPubKey. To validate\n * an input, the ScriptSig is executed, then with the same stack, the\n * scriptPubKey from the output corresponding to that input is run. The primary\n * way to use this class is via the verify function:\n *\n * new Interp().verify( ... )\n *\n * In some ways, the script interpreter is one of the most poorly architected\n * components of Yours Bitcoin because of the giant switch statement in step(). But\n * that is deliberately so to make it similar to bitcoin core, and thus easier\n * to audit.\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport { Bw } from './bw'\nimport { cmp } from './cmp'\nimport { Hash } from './hash'\nimport { OpCode } from './op-code'\nimport { PubKey } from './pub-key'\nimport { Script } from './script'\nimport { Sig } from './sig'\nimport { Struct } from './struct'\nimport { Tx } from './tx'\nimport { TxIn } from './tx-in'\n\n  class Interp extends Struct {\n    constructor (\n      script,\n      tx,\n      nIn,\n      stack = [],\n      altStack = [],\n      pc = 0,\n      pBeginCodeHash = 0,\n      nOpCount = 0,\n      ifStack = [],\n      errStr = '',\n      flags = Interp.defaultFlags,\n      valueBn = new Bn(0)\n    ) {\n      super({\n        script,\n        tx,\n        nIn,\n        stack,\n        altStack,\n        pc,\n        pBeginCodeHash,\n        nOpCount,\n        ifStack,\n        errStr,\n        flags,\n        valueBn\n      })\n    }\n\n    initialize () {\n      this.script = new Script()\n      this.stack = []\n      this.altStack = []\n      this.pc = 0\n      this.pBeginCodeHash = 0\n      this.nOpCount = 0\n      this.ifStack = []\n      this.errStr = ''\n      this.flags = Interp.defaultFlags\n      return this\n    }\n\n    fromJSON (json) {\n      this.fromJSONNoTx(json)\n      this.tx = json.tx ? new Tx().fromJSON(json.tx) : undefined\n      return this\n    }\n    /**\n     * Convert JSON containing everything but the tx to an interp object.\n     */\n    fromJSONNoTx (json) {\n      this.fromObject({\n        script:\n          json.script !== undefined\n            ? new Script().fromJSON(json.script)\n            : undefined,\n        nIn: json.nIn\n      })\n      this.stack = []\n      json.stack.forEach(\n        function (hex) {\n          this.stack.push(Buffer.from(hex, 'hex'))\n        }.bind(this)\n      )\n      this.altStack = []\n      json.altStack.forEach(\n        function (hex) {\n          this.altStack.push(Buffer.from(hex, 'hex'))\n        }.bind(this)\n      )\n      this.fromObject({\n        pc: json.pc,\n        pBeginCodeHash: json.pBeginCodeHash,\n        nOpCount: json.nOpCount,\n        ifStack: json.ifStack,\n        errStr: json.errStr,\n        flags: json.flags\n      })\n      return this\n    }\n\n    fromBr (br) {\n      let jsonNoTxBufLEn = br.readVarIntNum()\n      let jsonNoTxBuf = br.read(jsonNoTxBufLEn)\n      this.fromJSONNoTx(JSON.parse(jsonNoTxBuf.toString()))\n      let txbuflen = br.readVarIntNum()\n      if (txbuflen > 0) {\n        let txbuf = br.read(txbuflen)\n        this.tx = new Tx().fromFastBuffer(txbuf)\n      }\n      return this\n    }\n\n    toJSON () {\n      let json = this.toJSONNoTx()\n      json.tx = this.tx ? this.tx.toJSON() : undefined\n      return json\n    }\n\n    /**\n     * Convert everything but the tx to JSON.\n     */\n    toJSONNoTx () {\n      let stack = []\n      this.stack.forEach(function (buf) {\n        stack.push(buf.toString('hex'))\n      })\n      let altStack = []\n      this.altStack.forEach(function (buf) {\n        altStack.push(buf.toString('hex'))\n      })\n      return {\n        script: this.script ? this.script.toJSON() : undefined,\n        nIn: this.nIn,\n        stack: stack,\n        altStack: altStack,\n        pc: this.pc,\n        pBeginCodeHash: this.pBeginCodeHash,\n        nOpCount: this.nOpCount,\n        ifStack: this.ifStack,\n        errStr: this.errStr,\n        flags: this.flags\n      }\n    }\n\n    toBw (bw) {\n      if (!bw) {\n        bw = new Bw()\n      }\n      let jsonNoTxBuf = Buffer.from(JSON.stringify(this.toJSONNoTx()))\n      bw.writeVarIntNum(jsonNoTxBuf.length)\n      bw.write(jsonNoTxBuf)\n      if (this.tx) {\n        let txbuf = this.tx.toFastBuffer()\n        bw.writeVarIntNum(txbuf.length)\n        bw.write(txbuf)\n      } else {\n        bw.writeVarIntNum(0)\n      }\n      return bw\n    }\n\n    /**\n     * In order to make auduting the script interpreter easier, we use the same\n     * constants as bitcoin core, including the flags, which customize the\n     * operation of the interpreter.\n     */\n    static getFlags (flagstr) {\n      let flags = 0\n      if (flagstr.indexOf('NONE') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_NONE\n      }\n      if (flagstr.indexOf('P2SH') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_P2SH\n      }\n      if (flagstr.indexOf('STRICTENC') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_STRICTENC\n      }\n      if (flagstr.indexOf('DERSIG') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_DERSIG\n      }\n      if (flagstr.indexOf('LOW_S') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_LOW_S\n      }\n      if (flagstr.indexOf('NULLDUMMY') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_NULLDUMMY\n      }\n      if (flagstr.indexOf('SIGPUSHONLY') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_SIGPUSHONLY\n      }\n      if (flagstr.indexOf('MINIMALDATA') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_MINIMALDATA\n      }\n      if (flagstr.indexOf('DISCOURAGE_UPGRADABLE_NOPS') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS\n      }\n      if (flagstr.indexOf('CLEANSTACK') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_CLEANSTACK\n      }\n      if (flagstr.indexOf('CHECKLOCKTIMEVERIFY') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY\n      }\n      if (flagstr.indexOf('CHECKSEQUENCEVERIFY') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY\n      }\n      if (flagstr.indexOf('SIGHASH_FORKID') !== -1) {\n        flags = flags | Interp.SCRIPT_ENABLE_SIGHASH_FORKID\n      }\n      return flags\n    }\n\n    static castToBool (buf) {\n      for (let i = 0; i < buf.length; i++) {\n        if (buf[i] !== 0) {\n          // can be negative zero\n          if (i === buf.length - 1 && buf[i] === 0x80) {\n            return false\n          }\n          return true\n        }\n      }\n      return false\n    }\n\n    /**\n     * Translated from bitcoin core's CheckSigEncoding\n     */\n    checkSigEncoding (buf) {\n      // Empty signature. Not strictly DER encoded, but allowed to provide a\n      // compact way to provide an invalid signature for use with CHECK(MULTI)SIG\n      if (buf.length === 0) {\n        return true\n      }\n      if (\n        (this.flags &\n          (Interp.SCRIPT_VERIFY_DERSIG |\n            Interp.SCRIPT_VERIFY_LOW_S |\n            Interp.SCRIPT_VERIFY_STRICTENC)) !==\n          0 &&\n        !Sig.IsTxDer(buf)\n      ) {\n        this.errStr = 'SCRIPT_ERR_SIG_DER'\n        return false\n      } else if ((this.flags & Interp.SCRIPT_VERIFY_LOW_S) !== 0) {\n        let sig = new Sig().fromTxFormat(buf)\n        if (!sig.hasLowS()) {\n          this.errStr = 'SCRIPT_ERR_SIG_DER'\n          return false\n        }\n      } else if ((this.flags & Interp.SCRIPT_VERIFY_STRICTENC) !== 0) {\n        let sig = new Sig().fromTxFormat(buf)\n        if (!sig.hasDefinedHashType()) {\n          this.errStr = 'SCRIPT_ERR_SIG_HASHTYPE'\n          return false\n        }\n      }\n      return true\n    }\n\n    /**\n     * Translated from bitcoin core's CheckPubKeyEncoding\n     */\n    checkPubKeyEncoding (buf) {\n      if (\n        (this.flags & Interp.SCRIPT_VERIFY_STRICTENC) !== 0 &&\n        !PubKey.isCompressedOrUncompressed(buf)\n      ) {\n        this.errStr = 'SCRIPT_ERR_PUBKEYTYPE'\n        return false\n      }\n      return true\n    }\n\n    /**\n     * Translated from bitcoin core's CheckLockTime\n     */\n    checkLockTime (nLockTime) {\n      // There are two kinds of nLockTime: lock-by-blockheight\n      // and lock-by-blocktime, distinguished by whether\n      // nLockTime < LOCKTIME_THRESHOLD.\n      //\n      // We want to compare apples to apples, so fail the script\n      // unless the type of nLockTime being tested is the same as\n      // the nLockTime in the transaction.\n      if (\n        !(\n          (this.tx.nLockTime < Interp.LOCKTIME_THRESHOLD &&\n            nLockTime < Interp.LOCKTIME_THRESHOLD) ||\n          (this.tx.nLockTime >= Interp.LOCKTIME_THRESHOLD &&\n            nLockTime >= Interp.LOCKTIME_THRESHOLD)\n        )\n      ) {\n        return false\n      }\n\n      // Now that we know we're comparing apples-to-apples, the\n      // comparison is a simple numeric one.\n      if (nLockTime > this.tx.nLockTime) {\n        return false\n      }\n\n      // Finally the nLockTime feature can be disabled and thus\n      // CHECKLOCKTIMEVERIFY bypassed if every txIn has been\n      // finalized by setting nSequence to maxint. The\n      // transaction would be allowed into the blockchain, making\n      // the opCode ineffective.\n      //\n      // Testing if this vin is not final is sufficient to\n      // prevent this condition. Alternatively we could test all\n      // inputs, but testing just this input minimizes the data\n      // required to prove correct CHECKLOCKTIMEVERIFY execution.\n      if (TxIn.SEQUENCE_FINAL === this.tx.txIns[this.nIn].nSequence) {\n        return false\n      }\n\n      return true\n    }\n\n    /**\n     * Translated from bitcoin core's CheckSequence.\n     */\n    checkSequence (nSequence) {\n      // Relative lock times are supported by comparing the passed\n      // in operand to the sequence number of the input.\n      let txToSequence = this.tx.txIns[this.nIn].nSequence\n\n      // Fail if the transaction's version number is not set high\n      // enough to trigger Bip 68 rules.\n      if (this.tx.versionBytesNum < 2) {\n        return false\n      }\n\n      // Sequence numbers with their most significant bit set are not\n      // consensus constrained. Testing that the transaction's sequence\n      // number do not have this bit set prevents using this property\n      // to get around a CHECKSEQUENCEVERIFY check.\n      if (txToSequence & TxIn.SEQUENCE_LOCKTIME_DISABLE_FLAG) {\n        return false\n      }\n\n      // Mask off any bits that do not have consensus-enforced meaning\n      // before doing the integer comparisons\n      let nLockTimeMask =\n        TxIn.SEQUENCE_LOCKTIME_TYPE_FLAG | TxIn.SEQUENCE_LOCKTIME_MASK\n      let txToSequenceMasked = txToSequence & nLockTimeMask\n      let nSequenceMasked = nSequence & nLockTimeMask\n\n      // There are two kinds of nSequence: lock-by-blockheight\n      // and lock-by-blocktime, distinguished by whether\n      // nSequenceMasked < CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG.\n      //\n      // We want to compare apples to apples, so fail the script\n      // unless the type of nSequenceMasked being tested is the same as\n      // the nSequenceMasked in the transaction.\n      if (\n        !(\n          (txToSequenceMasked < TxIn.SEQUENCE_LOCKTIME_TYPE_FLAG &&\n            nSequenceMasked < TxIn.SEQUENCE_LOCKTIME_TYPE_FLAG) ||\n          (txToSequenceMasked >= TxIn.SEQUENCE_LOCKTIME_TYPE_FLAG &&\n            nSequenceMasked >= TxIn.SEQUENCE_LOCKTIME_TYPE_FLAG)\n        )\n      ) {\n        return false\n      }\n\n      // Now that we know we're comparing apples-to-apples, the\n      // comparison is a simple numeric one.\n      if (nSequenceMasked > txToSequenceMasked) {\n        return false\n      }\n\n      return true\n    }\n\n    /**\n     * Based on bitcoin core's EvalScript function, with the inner loop moved to\n     * Interp.prototype.step()\n     * bitcoin core commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n     */\n    * eval () {\n      if (this.script.toBuffer().length > 10000) {\n        this.errStr = 'SCRIPT_ERR_SCRIPT_SIZE'\n        yield false\n      }\n\n      try {\n        while (this.pc < this.script.chunks.length) {\n          let fSuccess = this.step()\n          if (!fSuccess) {\n            yield false\n          } else {\n            yield fSuccess\n          }\n        }\n\n        // Size limits\n        if (this.stack.length + this.altStack.length > 1000) {\n          this.errStr = 'SCRIPT_ERR_STACK_SIZE'\n          yield false\n        }\n      } catch (e) {\n        this.errStr = 'SCRIPT_ERR_UNKNOWN_ERROR: ' + e\n        yield false\n      }\n\n      if (this.ifStack.length > 0) {\n        this.errStr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n        yield false\n      }\n\n      yield true\n    }\n\n    /**\n     * Based on the inner loop of bitcoin core's EvalScript function\n     */\n    step () {\n      let fRequireMinimal =\n        (this.flags & Interp.SCRIPT_VERIFY_MINIMALDATA) !== 0\n\n      // bool fExec = !count(ifStack.begin(), ifStack.end(), false)\n      let fExec = !(this.ifStack.indexOf(false) + 1)\n\n      //\n      // Read instruction\n      //\n      let chunk = this.script.chunks[this.pc]\n      this.pc++\n      let opCodeNum = chunk.opCodeNum\n      if (opCodeNum === undefined) {\n        this.errStr = 'SCRIPT_ERR_BAD_OPCODE'\n        return false\n      }\n      if (chunk.buf && chunk.buf.length > Interp.MAX_SCRIPT_ELEMENT_SIZE) {\n        this.errStr = 'SCRIPT_ERR_PUSH_SIZE'\n        return false\n      }\n\n      // Note how OpCode.OP_RESERVED does not count towards the opCode limit.\n      if (opCodeNum > OpCode.OP_16 && ++this.nOpCount > 201) {\n        this.errStr = 'SCRIPT_ERR_OP_COUNT'\n        return false\n      }\n\n      if (\n        opCodeNum === OpCode.OP_LEFT ||\n        opCodeNum === OpCode.OP_RIGHT ||\n        opCodeNum === OpCode.OP_2MUL ||\n        opCodeNum === OpCode.OP_2DIV\n      ) {\n        this.errStr = 'SCRIPT_ERR_DISABLED_OPCODE'\n        return false\n      }\n\n      if (fExec && opCodeNum >= 0 && opCodeNum <= OpCode.OP_PUSHDATA4) {\n        if (fRequireMinimal && !this.script.checkMinimalPush(this.pc - 1)) {\n          this.errStr = 'SCRIPT_ERR_MINIMALDATA'\n          return false\n        }\n        if (!chunk.buf) {\n          this.stack.push(Interp.false)\n        } else if (chunk.len !== chunk.buf.length) {\n          throw new Error('LEngth of push value not equal to length of data')\n        } else {\n          this.stack.push(chunk.buf)\n        }\n      } else if (\n        fExec ||\n        (OpCode.OP_IF <= opCodeNum && opCodeNum <= OpCode.OP_ENDIF)\n      ) {\n        switch (opCodeNum) {\n          //\n          // Push value\n          //\n          case OpCode.OP_1NEGATE:\n          case OpCode.OP_1:\n          case OpCode.OP_2:\n          case OpCode.OP_3:\n          case OpCode.OP_4:\n          case OpCode.OP_5:\n          case OpCode.OP_6:\n          case OpCode.OP_7:\n          case OpCode.OP_8:\n          case OpCode.OP_9:\n          case OpCode.OP_10:\n          case OpCode.OP_11:\n          case OpCode.OP_12:\n          case OpCode.OP_13:\n          case OpCode.OP_14:\n          case OpCode.OP_15:\n          case OpCode.OP_16:\n            {\n              // ( -- value)\n              // ScriptNum bn((int)opCode - (int)(OpCode.OP_1 - 1))\n              let n = opCodeNum - (OpCode.OP_1 - 1)\n              let buf = new Bn(n).toScriptNumBuffer()\n              this.stack.push(buf)\n              // The result of these opCodes should always be the minimal way to push the data\n              // they push, so no need for a CheckMinimalPush here.\n            }\n            break\n\n          //\n          // Control\n          //\n          case OpCode.OP_NOP:\n            break\n\n          case OpCode.OP_CHECKLOCKTIMEVERIFY:\n            {\n              if (!(this.flags & Interp.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)) {\n                // not enabled; treat as a NOP2\n                if (\n                  this.flags & Interp.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS\n                ) {\n                  this.errStr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS'\n                  return false\n                }\n                break\n              }\n\n              if (this.stack.length < 1) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n\n              // Note that elsewhere numeric opCodes are limited to\n              // operands in the range -2**31+1 to 2**31-1, however it is\n              // legal for opCodes to produce results exceeding that\n              // range. This limitation is implemented by CScriptNum's\n              // default 4-byte limit.\n              //\n              // If we kept to that limit we'd have a year 2038 problem,\n              // even though the nLockTime field in transactions\n              // themselves is uint32 which only becomes meaningless\n              // after the year 2106.\n              //\n              // Thus as a special case we tell CScriptNum to accept up\n              // to 5-byte bignums, which are good until 2**39-1, well\n              // beyond the 2**32-1 limit of the nLockTime field itself.\n              let nLockTimebuf = this.stack[this.stack.length - 1]\n              let nLockTimebn = new Bn().fromScriptNumBuffer(\n                nLockTimebuf,\n                fRequireMinimal,\n                5\n              )\n              let nLockTime = nLockTimebn.toNumber()\n\n              // In the rare event that the argument may be < 0 due to\n              // some arithmetic being done first, you can always use\n              // 0 MAX CHECKLOCKTIMEVERIFY.\n              if (nLockTime < 0) {\n                this.errStr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME'\n                return false\n              }\n\n              // Actually compare the specified lock time with the transaction.\n              if (!this.checkLockTime(nLockTime)) {\n                this.errStr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME'\n                return false\n              }\n            }\n            break\n\n          case OpCode.OP_CHECKSEQUENCEVERIFY:\n            {\n              if (!(this.flags & Interp.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)) {\n                // not enabled; treat as a NOP3\n                if (\n                  this.flags & Interp.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS\n                ) {\n                  this.errStr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS'\n                  return false\n                }\n                break\n              }\n\n              if (this.stack.length < 1) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n\n              // nSequence, like nLockTime, is a 32-bit unsigned integer\n              // field. See the comment in CHECKLOCKTIMEVERIFY regarding\n              // 5-byte numeric operands.\n              let nSequencebuf = this.stack[this.stack.length - 1]\n              let nSequencebn = new Bn().fromScriptNumBuffer(\n                nSequencebuf,\n                fRequireMinimal,\n                5\n              )\n              let nSequence = nSequencebn.toNumber()\n\n              // In the rare event that the argument may be < 0 due to\n              // some arithmetic being done first, you can always use\n              // 0 MAX CHECKSEQUENCEVERIFY.\n              if (nSequence < 0) {\n                this.errStr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME'\n                return false\n              }\n\n              // To provide for future soft-fork extensibility, if the\n              // operand has the disabled lock-time flag set,\n              // CHECKSEQUENCEVERIFY behaves as a NOP.\n              if ((nSequence & TxIn.SEQUENCE_LOCKTIME_DISABLE_FLAG) !== 0) {\n                break\n              }\n\n              // Compare the specified sequence number with the input.\n              if (!this.checkSequence(nSequence)) {\n                this.errStr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME'\n                return false\n              }\n            }\n            break\n\n          case OpCode.OP_NOP1:\n          case OpCode.OP_NOP3:\n          case OpCode.OP_NOP4:\n          case OpCode.OP_NOP5:\n          case OpCode.OP_NOP6:\n          case OpCode.OP_NOP7:\n          case OpCode.OP_NOP8:\n          case OpCode.OP_NOP9:\n          case OpCode.OP_NOP10:\n            if (this.flags & Interp.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n              this.errStr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS'\n              return false\n            }\n            break\n\n          case OpCode.OP_IF:\n          case OpCode.OP_NOTIF:\n            {\n              // <expression> if [statements] [else [statements]] endif\n              // bool fValue = false\n              let fValue = false\n              if (fExec) {\n                if (this.stack.length < 1) {\n                  this.errStr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n                  return false\n                }\n                let buf = this.stack.pop()\n                fValue = Interp.castToBool(buf)\n                if (opCodeNum === OpCode.OP_NOTIF) {\n                  fValue = !fValue\n                }\n              }\n              this.ifStack.push(fValue)\n            }\n            break\n\n          case OpCode.OP_ELSE:\n            if (this.ifStack.length === 0) {\n              this.errStr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n              return false\n            }\n            this.ifStack[this.ifStack.length - 1] = !this.ifStack[\n              this.ifStack.length - 1\n            ]\n            break\n\n          case OpCode.OP_ENDIF:\n            if (this.ifStack.length === 0) {\n              this.errStr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n              return false\n            }\n            this.ifStack.pop()\n            break\n\n          case OpCode.OP_VERIFY:\n            {\n              // (true -- ) or\n              // (false -- false) and return\n              if (this.stack.length < 1) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let buf = this.stack[this.stack.length - 1]\n              let fValue = Interp.castToBool(buf)\n              if (fValue) {\n                this.stack.pop()\n              } else {\n                this.errStr = 'SCRIPT_ERR_VERIFY'\n                return false\n              }\n            }\n            break\n\n          case OpCode.OP_RETURN: {\n            this.errStr = 'SCRIPT_ERR_OP_RETURN'\n            return false\n          }\n          // unreachable code: break\n\n          //\n          // Stack ops\n          //\n          case OpCode.OP_TOALTSTACK:\n            if (this.stack.length < 1) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n            this.altStack.push(this.stack.pop())\n            break\n\n          case OpCode.OP_FROMALTSTACK:\n            if (this.altStack.length < 1) {\n              this.errStr = 'SCRIPT_ERR_INVALID_ALTSTACK_OPERATION'\n              return false\n            }\n            this.stack.push(this.altStack.pop())\n            break\n\n          case OpCode.OP_2DROP:\n            // (x1 x2 -- )\n            if (this.stack.length < 2) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n            this.stack.pop()\n            this.stack.pop()\n            break\n\n          case OpCode.OP_2DUP:\n            {\n              // (x1 x2 -- x1 x2 x1 x2)\n              if (this.stack.length < 2) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let buf1 = this.stack[this.stack.length - 2]\n              let buf2 = this.stack[this.stack.length - 1]\n              this.stack.push(buf1)\n              this.stack.push(buf2)\n            }\n            break\n\n          case OpCode.OP_3DUP:\n            {\n              // (x1 x2 x3 -- x1 x2 x3 x1 x2 x3)\n              if (this.stack.length < 3) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let buf1 = this.stack[this.stack.length - 3]\n              let buf2 = this.stack[this.stack.length - 2]\n              let buf3 = this.stack[this.stack.length - 1]\n              this.stack.push(buf1)\n              this.stack.push(buf2)\n              this.stack.push(buf3)\n            }\n            break\n\n          case OpCode.OP_2OVER:\n            {\n              // (x1 x2 x3 x4 -- x1 x2 x3 x4 x1 x2)\n              if (this.stack.length < 4) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let buf1 = this.stack[this.stack.length - 4]\n              let buf2 = this.stack[this.stack.length - 3]\n              this.stack.push(buf1)\n              this.stack.push(buf2)\n            }\n            break\n\n          case OpCode.OP_2ROT:\n            {\n              // (x1 x2 x3 x4 x5 x6 -- x3 x4 x5 x6 x1 x2)\n              if (this.stack.length < 6) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let spliced = this.stack.splice(this.stack.length - 6, 2)\n              this.stack.push(spliced[0])\n              this.stack.push(spliced[1])\n            }\n            break\n\n          case OpCode.OP_2SWAP:\n            {\n              // (x1 x2 x3 x4 -- x3 x4 x1 x2)\n              if (this.stack.length < 4) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let spliced = this.stack.splice(this.stack.length - 4, 2)\n              this.stack.push(spliced[0])\n              this.stack.push(spliced[1])\n            }\n            break\n\n          case OpCode.OP_IFDUP:\n            {\n              // (x - 0 | x x)\n              if (this.stack.length < 1) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let buf = this.stack[this.stack.length - 1]\n              let fValue = Interp.castToBool(buf)\n              if (fValue) {\n                this.stack.push(buf)\n              }\n            }\n            break\n\n          case OpCode.OP_DEPTH:\n            {\n              // -- stacksize\n              let buf = new Bn(this.stack.length).toScriptNumBuffer()\n              this.stack.push(buf)\n            }\n            break\n\n          case OpCode.OP_DROP:\n            // (x -- )\n            if (this.stack.length < 1) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n            this.stack.pop()\n            break\n\n          case OpCode.OP_DUP:\n            // (x -- x x)\n            if (this.stack.length < 1) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n            this.stack.push(this.stack[this.stack.length - 1])\n            break\n\n          case OpCode.OP_NIP:\n            // (x1 x2 -- x2)\n            if (this.stack.length < 2) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n            this.stack.splice(this.stack.length - 2, 1)\n            break\n\n          case OpCode.OP_OVER:\n            // (x1 x2 -- x1 x2 x1)\n            if (this.stack.length < 2) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n            this.stack.push(this.stack[this.stack.length - 2])\n            break\n\n          case OpCode.OP_PICK:\n          case OpCode.OP_ROLL:\n            {\n              // (xn ... x2 x1 x0 n - xn ... x2 x1 x0 xn)\n              // (xn ... x2 x1 x0 n - ... x2 x1 x0 xn)\n              if (this.stack.length < 2) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let buf = this.stack[this.stack.length - 1]\n              let bn = new Bn().fromScriptNumBuffer(buf, fRequireMinimal)\n              let n = bn.toNumber()\n              this.stack.pop()\n              if (n < 0 || n >= this.stack.length) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              buf = this.stack[this.stack.length - n - 1]\n              if (opCodeNum === OpCode.OP_ROLL) {\n                this.stack.splice(this.stack.length - n - 1, 1)\n              }\n              this.stack.push(buf)\n            }\n            break\n\n          case OpCode.OP_ROT:\n            {\n              // (x1 x2 x3 -- x2 x3 x1)\n              //  x2 x1 x3  after first swap\n              //  x2 x3 x1  after second swap\n              if (this.stack.length < 3) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let x1 = this.stack[this.stack.length - 3]\n              let x2 = this.stack[this.stack.length - 2]\n              let x3 = this.stack[this.stack.length - 1]\n              this.stack[this.stack.length - 3] = x2\n              this.stack[this.stack.length - 2] = x3\n              this.stack[this.stack.length - 1] = x1\n            }\n            break\n\n          case OpCode.OP_SWAP:\n            {\n              // (x1 x2 -- x2 x1)\n              if (this.stack.length < 2) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let x1 = this.stack[this.stack.length - 2]\n              let x2 = this.stack[this.stack.length - 1]\n              this.stack[this.stack.length - 2] = x2\n              this.stack[this.stack.length - 1] = x1\n            }\n            break\n\n          case OpCode.OP_TUCK:\n            // (x1 x2 -- x2 x1 x2)\n            if (this.stack.length < 2) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n            this.stack.splice(\n              this.stack.length - 2,\n              0,\n              this.stack[this.stack.length - 1]\n            )\n            break\n\n          case OpCode.OP_SIZE:\n            {\n              // (in -- in size)\n              if (this.stack.length < 1) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let bn = new Bn(this.stack[this.stack.length - 1].length)\n              this.stack.push(bn.toScriptNumBuffer())\n            }\n            break\n\n          //\n          // Bitwise logic\n          //\n          case OpCode.OP_OR:\n          case OpCode.OP_AND:\n          case OpCode.OP_XOR:\n            // (x1 x2 -- out)\n            if (this.stack.length < 2) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n            let buf1 = this.stack[this.stack.length - 2]\n            let buf2 = this.stack[this.stack.length - 1]\n\n            if (buf1.length != buf2.length) {\n              this.errStr = 'SCRIPT_ERR_INVALID_OPERAND_SIZE'\n              return false\n            }\n\n            switch (opCodeNum) {\n              case OpCode.OP_AND:\n                for(let i = 0; i < buf1.length; i++) {\n                  buf1[i] &= buf2[i]\n                }\n                break\n              case OpCode.OP_OR:\n                for(let i = 0; i < buf1.length; i++) {\n                  buf1[i] |= buf2[i]\n                }\n                break\n              case OpCode.OP_XOR:\n                for(let i = 0; i < buf1.length; i++) {\n                  buf1[i] ^= buf2[i]\n                }\n                break\n            }\n\n            // pop out buf2\n            this.stack.pop();\n            break\n          case OpCode.OP_INVERT:\n            // (x -- out)\n            if (this.stack.length < 1) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n            let buf = this.stack[this.stack.length - 1]\n            for(let i = 0; i < buf.length; i++) {\n              buf[i] = ~buf[i]\n            }\n            break\n          case OpCode.OP_LSHIFT:\n          case OpCode.OP_RSHIFT:\n            // (x n -- out)\n            {\n              if (this.stack.length < 2) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n\n              let buf1 = this.stack[this.stack.length - 2]\n              let value = new Bn(buf1)\n              let n = new Bn().fromScriptNumBuffer(\n                this.stack[this.stack.length - 1],\n                fRequireMinimal\n              ).toNumber()\n              if(n < 0) {\n                this.errStr = 'SCRIPT_ERR_INVALID_NUMBER_RANGE'\n                return false\n              }\n\n              this.stack.pop()\n              this.stack.pop()\n              \n              switch(opCodeNum) {\n                case OpCode.OP_LSHIFT:\n                  value = value.ushln(n)\n                  break\n                case OpCode.OP_RSHIFT:\n                  value = value.ushrn(n)\n                  break\n              }\n\n              let buf2 = value.toBuffer().slice(-buf1.length)\n              if(buf2.length < buf1.length) {\n                buf2 = Buffer.concat([Buffer.alloc(buf1.length - buf2.length), buf2])\n              }\n\n              this.stack.push(buf2)\n              break\n            }\n          case OpCode.OP_EQUAL:\n          case OpCode.OP_EQUALVERIFY:\n            // case OpCode.OP_NOTEQUAL: // use OpCode.OP_NUMNOTEQUAL\n            {\n              // (x1 x2 - bool)\n              if (this.stack.length < 2) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let buf1 = this.stack[this.stack.length - 2]\n              let buf2 = this.stack[this.stack.length - 1]\n              let fEqual = cmp(buf1, buf2)\n              // OpCode.OP_NOTEQUAL is disabled because it would be too easy to say\n              // something like n != 1 and have some wiseguy pass in 1 with extra\n              // zero bytes after it (numerically, 0x01 == 0x0001 == 0x000001)\n              // if (opCode == OpCode.OP_NOTEQUAL)\n              //  fEqual = !fEqual\n              this.stack.pop()\n              this.stack.pop()\n              this.stack.push(fEqual ? Interp.true : Interp.false)\n              if (opCodeNum === OpCode.OP_EQUALVERIFY) {\n                if (fEqual) {\n                  this.stack.pop()\n                } else {\n                  this.errStr = 'SCRIPT_ERR_EQUALVERIFY'\n                  return false\n                }\n              }\n            }\n            break\n\n          //\n          // Numeric\n          //\n          case OpCode.OP_1ADD:\n          case OpCode.OP_1SUB:\n          case OpCode.OP_NEGATE:\n          case OpCode.OP_ABS:\n          case OpCode.OP_NOT:\n          case OpCode.OP_0NOTEQUAL:\n            {\n              // (in -- out)\n              if (this.stack.length < 1) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let buf = this.stack[this.stack.length - 1]\n              let bn = new Bn().fromScriptNumBuffer(buf, fRequireMinimal)\n              switch (opCodeNum) {\n                case OpCode.OP_1ADD:\n                  bn = bn.add(1)\n                  break\n                case OpCode.OP_1SUB:\n                  bn = bn.sub(1)\n                  break\n                case OpCode.OP_NEGATE:\n                  bn = bn.neg()\n                  break\n                case OpCode.OP_ABS:\n                  if (bn.lt(0)) bn = bn.neg()\n                  break\n                case OpCode.OP_NOT:\n                  bn = new Bn(bn.eq(0) + 0)\n                  break\n                case OpCode.OP_0NOTEQUAL:\n                  bn = new Bn(bn.neq(0) + 0)\n                  break\n                // default:      assert(!\"invalid opCode\"); break; // TODO: does this ever occur?\n              }\n              this.stack.pop()\n              this.stack.push(bn.toScriptNumBuffer())\n            }\n            break\n\n          case OpCode.OP_ADD:\n          case OpCode.OP_SUB:\n          case OpCode.OP_MUL:\n          case OpCode.OP_DIV:\n          case OpCode.OP_MOD:\n          case OpCode.OP_BOOLAND:\n          case OpCode.OP_BOOLOR:\n          case OpCode.OP_NUMEQUAL:\n          case OpCode.OP_NUMEQUALVERIFY:\n          case OpCode.OP_NUMNOTEQUAL:\n          case OpCode.OP_LESSTHAN:\n          case OpCode.OP_GREATERTHAN:\n          case OpCode.OP_LESSTHANOREQUAL:\n          case OpCode.OP_GREATERTHANOREQUAL:\n          case OpCode.OP_MIN:\n          case OpCode.OP_MAX:\n            {\n              // (x1 x2 -- out)\n              if (this.stack.length < 2) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let bn1 = new Bn().fromScriptNumBuffer(\n                this.stack[this.stack.length - 2],\n                fRequireMinimal\n              )\n              let bn2 = new Bn().fromScriptNumBuffer(\n                this.stack[this.stack.length - 1],\n                fRequireMinimal\n              )\n              let bn = new Bn(0)\n\n              switch (opCodeNum) {\n                case OpCode.OP_ADD:\n                  bn = bn1.add(bn2)\n                  break\n\n                case OpCode.OP_SUB:\n                  bn = bn1.sub(bn2)\n                  break\n\n                case OpCode.OP_MUL:\n                  bn = bn1.mul(bn2)\n                  break\n\n                case OpCode.OP_DIV:\n                  if (bn2 == 0) {\n                    this.errStr = \"SCRIPT_ERR_DIV_BY_ZERO\"\n                    return false\n                  }\n                  bn = bn1.div(bn2)\n                  break\n\n                case OpCode.OP_MOD:\n                  if (bn2 == 0) {\n                    this.errStr = \"SCRIPT_ERR_DIV_BY_ZERO\"\n                    return false\n                  }\n                  bn = bn1.mod(bn2)\n                  break\n\n                // case OpCode.OP_BOOLAND:       bn = (bn1 != bnZero && bn2 != bnZero); break\n                case OpCode.OP_BOOLAND:\n                  bn = new Bn((bn1.neq(0) && bn2.neq(0)) + 0)\n                  break\n                // case OpCode.OP_BOOLOR:        bn = (bn1 != bnZero || bn2 != bnZero); break\n                case OpCode.OP_BOOLOR:\n                  bn = new Bn((bn1.neq(0) || bn2.neq(0)) + 0)\n                  break\n                // case OpCode.OP_NUMEQUAL:      bn = (bn1 == bn2); break\n                case OpCode.OP_NUMEQUAL:\n                  bn = new Bn(bn1.eq(bn2) + 0)\n                  break\n                // case OpCode.OP_NUMEQUALVERIFY:    bn = (bn1 == bn2); break\n                case OpCode.OP_NUMEQUALVERIFY:\n                  bn = new Bn(bn1.eq(bn2) + 0)\n                  break\n                // case OpCode.OP_NUMNOTEQUAL:     bn = (bn1 != bn2); break\n                case OpCode.OP_NUMNOTEQUAL:\n                  bn = new Bn(bn1.neq(bn2) + 0)\n                  break\n                // case OpCode.OP_LESSTHAN:      bn = (bn1 < bn2); break\n                case OpCode.OP_LESSTHAN:\n                  bn = new Bn(bn1.lt(bn2) + 0)\n                  break\n                // case OpCode.OP_GREATERTHAN:     bn = (bn1 > bn2); break\n                case OpCode.OP_GREATERTHAN:\n                  bn = new Bn(bn1.gt(bn2) + 0)\n                  break\n                // case OpCode.OP_LESSTHANOREQUAL:   bn = (bn1 <= bn2); break\n                case OpCode.OP_LESSTHANOREQUAL:\n                  bn = new Bn(bn1.leq(bn2) + 0)\n                  break\n                // case OpCode.OP_GREATERTHANOREQUAL:  bn = (bn1 >= bn2); break\n                case OpCode.OP_GREATERTHANOREQUAL:\n                  bn = new Bn(bn1.geq(bn2) + 0)\n                  break\n                case OpCode.OP_MIN:\n                  bn = bn1.lt(bn2) ? bn1 : bn2\n                  break\n                case OpCode.OP_MAX:\n                  bn = bn1.gt(bn2) ? bn1 : bn2\n                  break\n                // default:           assert(!\"invalid opCode\"); break; //TODO: does this ever occur?\n              }\n              this.stack.pop()\n              this.stack.pop()\n              this.stack.push(bn.toScriptNumBuffer())\n\n              if (opCodeNum === OpCode.OP_NUMEQUALVERIFY) {\n                // if (CastToBool(stacktop(-1)))\n                if (Interp.castToBool(this.stack[this.stack.length - 1])) {\n                  this.stack.pop()\n                } else {\n                  this.errStr = 'SCRIPT_ERR_NUMEQUALVERIFY'\n                  return false\n                }\n              }\n            }\n            break\n\n          case OpCode.OP_WITHIN:\n            {\n              // (x min max -- out)\n              if (this.stack.length < 3) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let bn1 = new Bn().fromScriptNumBuffer(\n                this.stack[this.stack.length - 3],\n                fRequireMinimal\n              )\n              let bn2 = new Bn().fromScriptNumBuffer(\n                this.stack[this.stack.length - 2],\n                fRequireMinimal\n              )\n              let bn3 = new Bn().fromScriptNumBuffer(\n                this.stack[this.stack.length - 1],\n                fRequireMinimal\n              )\n              // bool fValue = (bn2 <= bn1 && bn1 < bn3)\n              let fValue = bn2.leq(bn1) && bn1.lt(bn3)\n              this.stack.pop()\n              this.stack.pop()\n              this.stack.pop()\n              this.stack.push(fValue ? Interp.true : Interp.false)\n            }\n            break\n\n          //\n          // Crypto\n          //\n          case OpCode.OP_RIPEMD160:\n          case OpCode.OP_SHA1:\n          case OpCode.OP_SHA256:\n          case OpCode.OP_HASH160:\n          case OpCode.OP_HASH256:\n            {\n              // (in -- hash)\n              if (this.stack.length < 1) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let buf = this.stack[this.stack.length - 1]\n              // valtype vchnew Hash((opCode == OpCode.OP_RIPEMD160 || opCode == OpCode.OP_SHA1 || opCode == OpCode.OP_HASH160) ? 20 : 32)\n              let bufHash\n              if (opCodeNum === OpCode.OP_RIPEMD160) {\n                bufHash = Hash.ripemd160(buf)\n              } else if (opCodeNum === OpCode.OP_SHA1) {\n                bufHash = Hash.sha1(buf)\n              } else if (opCodeNum === OpCode.OP_SHA256) {\n                bufHash = Hash.sha256(buf)\n              } else if (opCodeNum === OpCode.OP_HASH160) {\n                bufHash = Hash.sha256Ripemd160(buf)\n              } else if (opCodeNum === OpCode.OP_HASH256) {\n                bufHash = Hash.sha256Sha256(buf)\n              }\n              this.stack.pop()\n              this.stack.push(bufHash)\n            }\n            break\n\n          case OpCode.OP_CODESEPARATOR:\n            // Hash starts after the code separator\n            this.pBeginCodeHash = this.pc\n            break\n\n          case OpCode.OP_CHECKSIG:\n          case OpCode.OP_CHECKSIGVERIFY:\n            {\n              // (sig pubKey -- bool)\n              if (this.stack.length < 2) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n\n              let bufSig = this.stack[this.stack.length - 2]\n              let bufPubKey = this.stack[this.stack.length - 1]\n\n              // Subset of script starting at the most recent codeseparator\n              // CScript scriptCode(pBeginCodeHash, pend)\n              let subScript = new Script().fromObject({\n                chunks: this.script.chunks.slice(this.pBeginCodeHash)\n              })\n\n              // https://github.com/Bitcoin-UAHF/spec/blob/master/replay-protected-sighash.md\n              let nHashType =\n                bufSig.length > 0 ? bufSig.readUInt8(bufSig.length - 1) : 0\n              if (nHashType & Sig.SIGHASH_FORKID) {\n                if (!(this.flags & Interp.SCRIPT_ENABLE_SIGHASH_FORKID)) {\n                  this.errStr = 'SCRIPT_ERR_ILLEGAL_FORKID'\n                  return false\n                }\n              } else {\n                subScript.findAndDelete(new Script().writeBuffer(bufSig))\n              }\n\n              if (\n                !this.checkSigEncoding(bufSig) ||\n                !this.checkPubKeyEncoding(bufPubKey)\n              ) {\n                // serror is set\n                return false\n              }\n\n              let fSuccess\n              try {\n                let sig = new Sig().fromTxFormat(bufSig)\n                let pubKey = new PubKey().fromBuffer(bufPubKey, false)\n                fSuccess = this.tx.verify(\n                  sig,\n                  pubKey,\n                  this.nIn,\n                  subScript,\n                  Boolean(this.flags & Interp.SCRIPT_VERIFY_LOW_S),\n                  this.valueBn,\n                  this.flags\n                )\n              } catch (e) {\n                // invalid sig or pubKey\n                fSuccess = false\n              }\n\n              this.stack.pop()\n              this.stack.pop()\n              // stack.push_back(fSuccess ? vchTrue : vchFalse)\n              this.stack.push(fSuccess ? Interp.true : Interp.false)\n              if (opCodeNum === OpCode.OP_CHECKSIGVERIFY) {\n                if (fSuccess) {\n                  this.stack.pop()\n                } else {\n                  this.errStr = 'SCRIPT_ERR_CHECKSIGVERIFY'\n                  return false\n                }\n              }\n            }\n            break\n\n          case OpCode.OP_CHECKMULTISIG:\n          case OpCode.OP_CHECKMULTISIGVERIFY:\n            {\n              // ([sig ...] num_of_signatures [pubKey ...] num_of_pubKeys -- bool)\n\n              let i = 1\n              if (this.stack.length < i) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n\n              let nKeysCount = new Bn()\n                .fromScriptNumBuffer(\n                  this.stack[this.stack.length - i],\n                  fRequireMinimal\n                )\n                .toNumber()\n              if (nKeysCount < 0 || nKeysCount > 20) {\n                this.errStr = 'SCRIPT_ERR_PUBKEY_COUNT'\n                return false\n              }\n              this.nOpCount += nKeysCount\n              if (this.nOpCount > 201) {\n                this.errStr = 'SCRIPT_ERR_OP_COUNT'\n                return false\n              }\n              // int ikey = ++i\n              let ikey = ++i\n              i += nKeysCount\n              if (this.stack.length < i) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n\n              let nSigsCount = new Bn()\n                .fromScriptNumBuffer(\n                  this.stack[this.stack.length - i],\n                  fRequireMinimal\n                )\n                .toNumber()\n              if (nSigsCount < 0 || nSigsCount > nKeysCount) {\n                this.errStr = 'SCRIPT_ERR_SIG_COUNT'\n                return false\n              }\n              // int isig = ++i\n              let isig = ++i\n              i += nSigsCount\n              if (this.stack.length < i) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n\n              // Subset of script starting at the most recent codeseparator\n              let subScript = new Script().fromObject({\n                chunks: this.script.chunks.slice(this.pBeginCodeHash)\n              })\n\n              for (let k = 0; k < nSigsCount; k++) {\n                let bufSig = this.stack[this.stack.length - isig - k]\n\n                // https://github.com/Bitcoin-UAHF/spec/blob/master/replay-protected-sighash.md\n                let nHashType =\n                  bufSig.length > 0 ? bufSig.readUInt8(bufSig.length - 1) : 0\n                if (nHashType & Sig.SIGHASH_FORKID) {\n                  if (!(this.flags & Interp.SCRIPT_ENABLE_SIGHASH_FORKID)) {\n                    this.errStr = 'SCRIPT_ERR_ILLEGAL_FORKID'\n                    return false\n                  }\n                } else {\n                  // Drop the signature, since there's no way for a signature to sign itself\n                  subScript.findAndDelete(new Script().writeBuffer(bufSig))\n                }\n              }\n\n              let fSuccess = true\n              while (fSuccess && nSigsCount > 0) {\n                // valtype& vchSig  = stacktop(-isig)\n                let bufSig = this.stack[this.stack.length - isig]\n                // valtype& vchPubKey = stacktop(-ikey)\n                let bufPubKey = this.stack[this.stack.length - ikey]\n\n                if (\n                  !this.checkSigEncoding(bufSig) ||\n                  !this.checkPubKeyEncoding(bufPubKey)\n                ) {\n                  // serror is set\n                  return false\n                }\n\n                let fOk\n                try {\n                  let sig = new Sig().fromTxFormat(bufSig)\n                  let pubKey = new PubKey().fromBuffer(bufPubKey, false)\n                  fOk = this.tx.verify(\n                    sig,\n                    pubKey,\n                    this.nIn,\n                    subScript,\n                    Boolean(this.flags & Interp.SCRIPT_VERIFY_LOW_S),\n                    this.valueBn,\n                    this.flags\n                  )\n                } catch (e) {\n                  // invalid sig or pubKey\n                  fOk = false\n                }\n\n                if (fOk) {\n                  isig++\n                  nSigsCount--\n                }\n                ikey++\n                nKeysCount--\n\n                // If there are more signatures left than keys left,\n                // then too many signatures have failed\n                if (nSigsCount > nKeysCount) {\n                  fSuccess = false\n                }\n              }\n\n              // Clean up stack of actual arguments\n              while (i-- > 1) {\n                this.stack.pop()\n              }\n\n              // A bug causes CHECKMULTISIG to consume one extra argument\n              // whose contents were not checked in any way.\n              //\n              // Unfortunately this is a potential source of mutability,\n              // so optionally verify it is exactly equal to zero prior\n              // to removing it from the stack.\n              if (this.stack.length < 1) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              if (\n                this.flags & Interp.SCRIPT_VERIFY_NULLDUMMY &&\n                this.stack[this.stack.length - 1].length\n              ) {\n                this.errStr = 'SCRIPT_ERR_SIG_NULLDUMMY'\n                return false\n              }\n              this.stack.pop()\n\n              // stack.push_back(fSuccess ? vchTrue : vchFalse)\n              this.stack.push(fSuccess ? Interp.true : Interp.false)\n\n              if (opCodeNum === OpCode.OP_CHECKMULTISIGVERIFY) {\n                if (fSuccess) {\n                  this.stack.pop()\n                } else {\n                  this.errStr = 'SCRIPT_ERR_CHECKMULTISIGVERIFY'\n                  return false\n                }\n              }\n            }\n            break\n\n          //\n          // Byte string operations\n          //\n          case OpCode.OP_CAT:\n            if (this.stack.length < 2) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n\n            let vch1 = this.stack[this.stack.length - 2]\n            let vch2 = this.stack[this.stack.length - 1]\n            \n            this.stack[this.stack.length - 2] = Buffer.concat([vch1, vch2])\n            this.stack.pop()\n            break\n\n          case OpCode.OP_SPLIT:\n            if (this.stack.length < 2) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n\n            let data = this.stack[this.stack.length - 2]\n            let position = new Bn().fromScriptNumBuffer(\n              this.stack[this.stack.length - 1],\n              fRequireMinimal\n            )\n\n            if(position.lt(0) || position.gt(data.length)) {\n              this.errStr = 'SCRIPT_ERR_INVALID_SPLIT_RANGE'\n              return false\n            }\n\n            let n1 = data.slice(0, position)\n            let n2 = data.slice(position)\n\n            this.stack.pop()\n            this.stack.pop()\n\n            this.stack.push(n1)\n            this.stack.push(n2)\n\n            break\n\n          default:\n            this.errStr = 'SCRIPT_ERR_BAD_OPCODE'\n            return false\n        }\n      }\n\n      return true\n    }\n\n    /**\n     * This function has the same interface as bitcoin core's VerifyScript and is\n     * the function you want to use to know if a particular input in a\n     * transaction is valid or not. It simply iterates over the results generated\n     * by the results method.\n     */\n    verify (scriptSig, scriptPubKey, tx, nIn, flags, valueBn) {\n      let results = this.results(\n        scriptSig,\n        scriptPubKey,\n        tx,\n        nIn,\n        flags,\n        valueBn\n      )\n      for (let success of results) {\n        if (!success) {\n          return false\n        }\n      }\n      return true\n    }\n\n    /**\n     * Gives you the results of the execution each operation of the scripSig and\n     * scriptPubKey corresponding to a particular input (nIn) for the concerned\n     * transaction (tx). Each result can be either true or false. If true, then\n     * the operation did not invalidate the transaction. If false, then the\n     * operation has invalidated the script, and the transaction is not valid.\n     * flags is a number that can pass in some special flags, such as whether or\n     * not to execute the redeemScript in a p2sh transaction.\n     *\n     * This method is translated from bitcoin core's VerifyScript.  This function\n     * is a generator, thus you can and need to iterate through it.  To\n     * automatically return true or false, use the verify method.\n     */\n    * results (scriptSig, scriptPubKey, tx, nIn, flags, valueBn) {\n      let stackCopy\n\n      this.fromObject({\n        script: scriptSig,\n        tx: tx,\n        nIn: nIn,\n        flags: flags,\n        valueBn: valueBn\n      })\n\n      if (\n        (flags & Interp.SCRIPT_VERIFY_SIGPUSHONLY) !== 0 &&\n        !scriptSig.isPushOnly()\n      ) {\n        this.errStr = this.errStr || 'SCRIPT_ERR_SIG_PUSHONLY'\n        yield false\n      }\n\n      yield * this.eval()\n\n      if (flags & Interp.SCRIPT_VERIFY_P2SH) {\n        stackCopy = this.stack.slice()\n      }\n\n      let stack = this.stack\n      this.initialize()\n      this.fromObject({\n        script: scriptPubKey,\n        stack: stack,\n        tx: tx,\n        nIn: nIn,\n        flags: flags,\n        valueBn: valueBn\n      })\n\n      yield * this.eval()\n\n      if (this.stack.length === 0) {\n        this.errStr = this.errStr || 'SCRIPT_ERR_EVAL_FALSE'\n        yield false\n      }\n\n      let buf = this.stack[this.stack.length - 1]\n      if (!Interp.castToBool(buf)) {\n        this.errStr = this.errStr || 'SCRIPT_ERR_EVAL_FALSE'\n        yield false\n      }\n\n      // Additional validation for spend-to-script-hash transactions:\n      if (flags & Interp.SCRIPT_VERIFY_P2SH && scriptPubKey.isScriptHashOut()) {\n        // scriptSig must be literals-only or validation fails\n        if (!scriptSig.isPushOnly()) {\n          this.errStr = this.errStr || 'SCRIPT_ERR_SIG_PUSHONLY'\n          yield false\n        }\n\n        // Restore stack.\n        let tmp = stack\n        stack = stackCopy\n        stackCopy = tmp\n\n        // stack cannot be empty here, because if it was the\n        // P2SH  HASH <> EQUAL  scriptPubKey would be evaluated with\n        // an empty stack and the EvalScript above would yield false.\n        if (stack.length === 0) {\n          throw new Error('internal error - stack copy empty')\n        }\n\n        let pubKeySerialized = stack[stack.length - 1]\n        let scriptPubKey2 = new Script().fromBuffer(pubKeySerialized)\n        stack.pop()\n\n        this.initialize()\n        this.fromObject({\n          script: scriptPubKey2,\n          stack: stack,\n          tx: tx,\n          nIn: nIn,\n          flags: flags,\n          valueBn: valueBn\n        })\n\n        yield * this.eval()\n\n        if (stack.length === 0) {\n          this.errStr = this.errStr || 'SCRIPT_ERR_EVAL_FALSE'\n          yield false\n        }\n\n        if (!Interp.castToBool(stack[stack.length - 1])) {\n          this.errStr = this.errStr || 'SCRIPT_ERR_EVAL_FALSE'\n          yield false\n        } else {\n          yield true\n        }\n      }\n\n      // The CLEANSTACK check is only performed after potential P2SH evaluation,\n      // as the non-P2SH evaluation of a P2SH script will obviously not result in\n      // a clean stack (the P2SH inputs remain).\n      if ((flags & Interp.SCRIPT_VERIFY_CLEANSTACK) !== 0) {\n        // Disallow CLEANSTACK without P2SH, as otherwise a switch\n        // CLEANSTACK->P2SH+CLEANSTACK would be possible, which is not a softfork\n        // (and P2SH should be one).\n        if (!(flags & Interp.SCRIPT_VERIFY_P2SH)) {\n          throw new Error('cannot use CLEANSTACK without P2SH')\n        }\n        if (stack.length !== 1) {\n          this.errStr = this.errStr || 'SCRIPT_ERR_CLEANSTACK'\n          yield false\n        }\n      }\n\n      yield true\n    }\n\n    /**\n     * If the script has failed, this methods returns valuable debug\n     * information about exactly where the script failed. It is a\n     * JSON-compatible object so it can be easily stringified. pc refers to the\n     * currently executing opcode.\n     */\n    getDebugObject () {\n      let pc = this.pc - 1 // pc is incremented immediately after getting\n      return {\n        errStr: this.errStr,\n        scriptStr: this.script ? this.script.toString() : 'no script found',\n        pc: pc,\n        stack: this.stack.map(buf => buf.toString('hex')),\n        altStack: this.altStack.map(buf => buf.toString('hex')),\n        opCodeStr: this.script\n          ? OpCode.fromNumber(this.script.chunks[pc].opCodeNum).toString()\n          : 'no script found'\n      }\n    }\n\n    getDebugString () {\n      return JSON.stringify(this.getDebugObject(), null, 2)\n    }\n  }\n\n  Interp.true = Buffer.from([1])\n  Interp.false = Buffer.from([])\n\n  Interp.MAX_SCRIPT_ELEMENT_SIZE = 520\n  Interp.LOCKTIME_THRESHOLD = 500000000 // Tue Nov  5 00:53:20 1985 UTC\n\n  // flags taken from bitcoin core\n  // bitcoin core commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n  Interp.SCRIPT_VERIFY_NONE = 0\n\n  // Evaluate P2SH subScripts (softfork safe, Bip16).\n  Interp.SCRIPT_VERIFY_P2SH = 1 << 0\n\n  // Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.\n  // Passing a pubKey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) to checksig causes that pubKey to be\n  // skipped (not softfork safe: this flag can widen the validity of OP_CHECKSIG OP_NOT).\n  Interp.SCRIPT_VERIFY_STRICTENC = 1 << 1\n\n  // Passing a non-strict-DER signature to a checksig operation causes script failure (softfork safe, Bip62 rule 1)\n  Interp.SCRIPT_VERIFY_DERSIG = 1 << 2\n\n  // Passing a non-strict-DER signature or one with S > order/2 to a checksig operation causes script failure\n  // (softfork safe, Bip62 rule 5).\n  Interp.SCRIPT_VERIFY_LOW_S = 1 << 3\n\n  // verify dummy stack item consumed by CHECKMULTISIG is of zero-length (softfork safe, Bip62 rule 7).\n  Interp.SCRIPT_VERIFY_NULLDUMMY = 1 << 4\n\n  // Using a non-push operator in the scriptSig causes script failure (softfork safe, Bip62 rule 2).\n  Interp.SCRIPT_VERIFY_SIGPUSHONLY = 1 << 5\n\n  // Require minimal encodings for all push operations (OP_0... OP_16, OP_1NEGATE where possible, direct\n  // pushes up to 75 bytes, OP_PUSHDATA up to 255 bytes, OP_PUSHDATA2 for anything larger). Evaluating\n  // any other push causes the script to fail (Bip62 rule 3).\n  // In addition, whenever a stack element is interpreted as a number, it must be of minimal length (Bip62 rule 4).\n  // (softfork safe)\n  Interp.SCRIPT_VERIFY_MINIMALDATA = 1 << 6\n\n  // Discourage use of NOPs reserved for upgrades (NOP1-10)\n  //\n  // Provided so that nodes can avoid accepting or mining transactions\n  // containing executed NOP's whose meaning may change after a soft-fork,\n  // thus rendering the script invalid; with this flag set executing\n  // discouraged NOPs fails the script. This verification flag will never be\n  // a mandatory flag applied to scripts in a block. NOPs that are not\n  // executed, e.g.  within an unexecuted IF ENDIF block, are *not* rejected.\n  Interp.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS = 1 << 7\n\n  // Require that only a single stack element remains after evaluation. This\n  // changes the success criterion from \"At least one stack element must\n  // remain, and when interpreted as a boolean, it must be true\" to \"Exactly\n  // one stack element must remain, and when interpreted as a boolean, it must\n  // be true\".  (softfork safe, Bip62 rule 6)\n  // Note: CLEANSTACK should never be used without P2SH.\n  Interp.SCRIPT_VERIFY_CLEANSTACK = 1 << 8\n\n  // Verify CHECKLOCKTIMEVERIFY\n  //\n  // See Bip65 for details.\n  Interp.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = 1 << 9\n\n  // support CHECKSEQUENCEVERIFY opCode\n  //\n  // See Bip112 for details\n  Interp.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY = 1 << 10\n\n  // used for UAHF\n  // https://github.com/Bitcoin-UAHF/spec/blob/master/replay-protected-sighash.md\n  Interp.SCRIPT_ENABLE_SIGHASH_FORKID = 1 << 16\n\n  // These are the things we wish to verify by default. At the time of writing,\n  // P2SH and CHECKLOCKTIMEVERIFY are both active, but CHECKSEQUENCEVERIFY is\n  // not.\n  Interp.defaultFlags =\n    Interp.SCRIPT_VERIFY_P2SH | Interp.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY\n  // Interp.defaultFlags = Interp.SCRIPT_VERIFY_P2SH | Interp.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY | Interp.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY\n\nexport { Interp }\n","/**\n * PubKey Map\n * ==========\n *\n * A map from (transaction hash, output number) to (script chunk index, pubKey).\n * Whening signing a bitcoin transaction, we need to be able to sign an input\n * with the correct key and also we need to know where to put signature when we\n * get it. This mapping allows us to find the key for an associated input (which\n * is identified by tx output hash and number) with which to sign the\n * transaction and then also to know where to insert the signature into the\n * input script. This gets us the public key, and we need a different method to\n * get the private key. That is because we often know the public key to be used\n * but may not have access to the private key until the entire tx is sent to\n * where the private keys are.\n */\n'use strict'\n\nimport { Struct } from './struct'\nimport { Sig } from './sig'\n\nclass SigOperations extends Struct {\n  constructor (map = new Map()) {\n    super({ map })\n  }\n\n  toJSON () {\n    const json = {}\n    this.map.forEach((arr, label) => {\n      json[label] = arr.map(obj => ({\n        nScriptChunk: obj.nScriptChunk,\n        type: obj.type, // 'sig' or 'pubKey'\n        addressStr: obj.addressStr,\n        nHashType: obj.nHashType,\n        log: obj.log\n      }))\n    })\n    return json\n  }\n\n  fromJSON (json) {\n    Object.keys(json).forEach(label => {\n      this.map.set(label, json[label].map(obj => ({\n        nScriptChunk: obj.nScriptChunk,\n        type: obj.type,\n        addressStr: obj.addressStr,\n        nHashType: obj.nHashType,\n        log: obj.log\n      })))\n    })\n    return this\n  }\n\n  /**\n   * Set an address to in the map for use with single-sig.\n   *\n   * @param {Buffer} txHashBuf The hash of a transsaction. Note that this is\n   * *not* the reversed transaction id, but is the raw hash.\n   * @param {Number} txOutNum The output number, a.k.a. the \"vout\".\n   * @param {Number} nScriptChunk The index of the chunk of the script where\n   * we are going to place the signature.\n   * @param {String} addressStr The addressStr coresponding to this (txHashBuf,\n   * txOutNum, nScriptChunk) where we are going to sign and insert the\n   * signature or public key.\n   * @param {Number} nHashType Usually = Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID\n   */\n  setOne (txHashBuf, txOutNum, nScriptChunk, type = 'sig', addressStr, nHashType = Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID) {\n    const label = txHashBuf.toString('hex') + ':' + txOutNum\n    const obj = { nScriptChunk, type, addressStr, nHashType }\n    this.map.set(label, [obj])\n    return this\n  }\n\n  /**\n   * Set a bunch of addresses for signing an input such as for use with multi-sig.\n   *\n   * @param {Buffer} txHashBuf The hash of a transsaction. Note that this is\n   * *not* the reversed transaction id, but is the raw hash.\n   * @param {Number} txOutNum The output number, a.k.a. the \"vout\".\n   * @param {Array} arr Must take the form of [{nScriptChunk, type, addressStr, nHashType}, ...]\n   */\n  setMany (txHashBuf, txOutNum, arr) {\n    const label = txHashBuf.toString('hex') + ':' + txOutNum\n    arr = arr.map(obj => ({\n      type: obj.type || 'sig',\n      nHashType: obj.nHashType || Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID,\n      ...obj\n    }))\n    this.map.set(label, arr)\n    return this\n  }\n\n  addOne (txHashBuf, txOutNum, nScriptChunk, type = 'sig', addressStr, nHashType = Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID) {\n    const arr = this.get(txHashBuf, txOutNum) || []\n    arr.push({\n      nScriptChunk,\n      type,\n      addressStr,\n      nHashType\n    })\n    this.setMany(txHashBuf, txOutNum, arr)\n    return this\n  }\n\n  /**\n   * Get an address from the map\n   *\n   * @param {Buffer} txHashBuf The hash of a transction. Note that this is *not*\n   * the reversed transaction id, but is the raw hash.\n   * @param {Number} txOutNum The output number, a.k.a. the \"vout\".\n   * @param {Number} nScriptChunk The index of the chunk of the script where\n   * we are going to place the signature.\n   * @returns {PubKey}\n   */\n  get (txHashBuf, txOutNum) {\n    const label = txHashBuf.toString('hex') + ':' + txOutNum\n    return this.map.get(label) || []\n  }\n}\n\nexport { SigOperations }\n","/**\n * Transaction Output Map\n * ======================\n *\n * A map from a transaction hash and output number to that particular output.\n * Note that the map is from the transaction *hash*, which is the value that\n * occurs in the blockchain, not the id, which is the reverse of the hash. The\n * TxOutMap is necessary when signing a transction to get the script and value\n * of that output which is plugged into the sighash algorithm.\n */\n'use strict'\n\nimport { Struct } from './struct'\nimport { TxOut } from './tx-out'\n\nclass TxOutMap extends Struct {\n  constructor (map = new Map()) {\n    super({ map })\n  }\n\n  toJSON () {\n    const json = {}\n    this.map.forEach((txOut, label) => {\n      json[label] = txOut.toHex()\n    })\n    return json\n  }\n\n  fromJSON (json) {\n    Object.keys(json).forEach(label => {\n      this.map.set(label, TxOut.fromHex(json[label]))\n    })\n    return this\n  }\n\n  set (txHashBuf, txOutNum, txOut) {\n    const label = txHashBuf.toString('hex') + ':' + txOutNum\n    this.map.set(label, txOut)\n    return this\n  }\n\n  get (txHashBuf, txOutNum) {\n    const label = txHashBuf.toString('hex') + ':' + txOutNum\n    return this.map.get(label)\n  }\n\n  setTx (tx) {\n    const txhashhex = tx.hash().toString('hex')\n    tx.txOuts.forEach((txOut, index) => {\n      const label = txhashhex + ':' + index\n      this.map.set(label, txOut)\n    })\n    return this\n  }\n}\n\nexport { TxOutMap }\n","/**\n * Transaction Builder\n * ===================\n */\n'use strict'\n\nimport { Address } from './address'\nimport { Constants as Cst } from './constants'\nimport { Bn } from './bn'\nimport { HashCache } from './hash-cache'\nimport { Script } from './script'\nimport { SigOperations } from './sig-operations'\nimport { Sig } from './sig'\nimport { Struct } from './struct'\nimport { Tx } from './tx'\nimport { TxIn } from './tx-in'\nimport { TxOut } from './tx-out'\nimport { TxOutMap } from './tx-out-map'\nimport { VarInt } from './var-int'\n\nconst Constants = Cst.Default.TxBuilder\n\nclass TxBuilder extends Struct {\n  constructor (\n    tx = new Tx(),\n    txIns = [],\n    txOuts = [],\n    uTxOutMap = new TxOutMap(),\n    sigOperations = new SigOperations(),\n    changeScript,\n    changeAmountBn,\n    feeAmountBn,\n    feePerKbNum = Constants.feePerKbNum,\n    nLockTime = 0,\n    versionBytesNum = 1,\n    sigsPerInput = 1,\n    dust = Constants.dust,\n    dustChangeToFees = false,\n    hashCache = new HashCache()\n  ) {\n    super({\n      tx,\n      txIns,\n      txOuts,\n      uTxOutMap,\n      sigOperations,\n      changeScript,\n      changeAmountBn,\n      feeAmountBn,\n      feePerKbNum,\n      nLockTime,\n      versionBytesNum,\n      sigsPerInput,\n      dust,\n      dustChangeToFees,\n      hashCache\n    })\n  }\n\n  toJSON () {\n    const json = {}\n    json.tx = this.tx.toHex()\n    json.txIns = this.txIns.map(txIn => txIn.toHex())\n    json.txOuts = this.txOuts.map(txOut => txOut.toHex())\n    json.uTxOutMap = this.uTxOutMap.toJSON()\n    json.sigOperations = this.sigOperations.toJSON()\n    json.changeScript = this.changeScript ? this.changeScript.toHex() : undefined\n    json.changeAmountBn = this.changeAmountBn ? this.changeAmountBn.toNumber() : undefined\n    json.feeAmountBn = this.feeAmountBn ? this.feeAmountBn.toNumber() : undefined\n    json.feePerKbNum = this.feePerKbNum\n    json.sigsPerInput = this.sigsPerInput\n    json.dust = this.dust\n    json.dustChangeToFees = this.dustChangeToFees\n    json.hashCache = this.hashCache.toJSON()\n    return json\n  }\n\n  fromJSON (json) {\n    this.tx = new Tx().fromHex(json.tx)\n    this.txIns = json.txIns.map(txIn => TxIn.fromHex(txIn))\n    this.txOuts = json.txOuts.map(txOut => TxOut.fromHex(txOut))\n    this.uTxOutMap = new TxOutMap().fromJSON(json.uTxOutMap)\n    this.sigOperations = new SigOperations().fromJSON(json.sigOperations)\n    this.changeScript = json.changeScript ? new Script().fromHex(json.changeScript) : undefined\n    this.changeAmountBn = json.changeAmountBn ? new Bn(json.changeAmountBn) : undefined\n    this.feeAmountBn = json.feeAmountBn ? new Bn(json.feeAmountBn) : undefined\n    this.feePerKbNum = json.feePerKbNum || this.feePerKbNum\n    this.sigsPerInput = json.sigsPerInput || this.sigsPerInput\n    this.dust = json.dust || this.dust\n    this.dustChangeToFees =\n        json.dustChangeToFees || this.dustChangeToFees\n    this.hashCache = HashCache.fromJSON(json.hashCache)\n    return this\n  }\n\n  setFeePerKbNum (feePerKbNum) {\n    if (typeof feePerKbNum !== 'number' || feePerKbNum < 0) {\n      throw new Error('cannot set a fee of zero or less')\n    }\n    this.feePerKbNum = feePerKbNum\n    return this\n  }\n\n  setChangeAddress (changeAddress) {\n    this.changeScript = changeAddress.toTxOutScript()\n    return this\n  }\n\n  setChangeScript (changeScript) {\n    this.changeScript = changeScript\n    return this\n  }\n\n  /**\n     * nLockTime is an unsigned integer.\n     */\n  setNLocktime (nLockTime) {\n    this.nLockTime = nLockTime\n    return this\n  }\n\n  setVersion (versionBytesNum) {\n    this.versionBytesNum = versionBytesNum\n    return this\n  }\n\n  /**\n     * Sometimes one of your outputs or the change output will be less than\n     * dust. Values less than dust cannot be broadcast. If you are OK with\n     * sending dust amounts to fees, then set this value to true.\n     */\n  setDust (dust = Constants.dust) {\n    this.dust = dust\n    return this\n  }\n\n  /**\n     * Sometimes one of your outputs or the change output will be less than\n     * dust. Values less than dust cannot be broadcast. If you are OK with\n     * sending dust amounts to fees, then set this value to true. We\n     * preferentially send all dust to the change if possible. However, that\n     * might not be possible if the change itself is less than dust, in which\n     * case all dust goes to fees.\n     */\n  sendDustChangeToFees (dustChangeToFees = false) {\n    this.dustChangeToFees = dustChangeToFees\n    return this\n  }\n\n  /**\n     * Import a transaction partially signed by someone else. The only thing you\n     * can do after this is sign one or more inputs. Usually used for multisig\n     * transactions. uTxOutMap is optional. It is not necessary so long as you\n     * pass in the txOut when you sign. You need to know the output when signing\n     * an input, including the script in the output, which is why this is\n     * necessary when signing an input.\n     */\n  importPartiallySignedTx (tx, uTxOutMap = this.uTxOutMap, sigOperations = this.sigOperations) {\n    this.tx = tx\n    this.uTxOutMap = uTxOutMap\n    this.sigOperations = sigOperations\n    return this\n  }\n\n  /**\n     * Pay \"from\" a script - in other words, add an input to the transaction.\n     */\n  inputFromScript (txHashBuf, txOutNum, txOut, script, nSequence) {\n    if (\n      !Buffer.isBuffer(txHashBuf) ||\n        !(typeof txOutNum === 'number') ||\n        !(txOut instanceof TxOut) ||\n        !(script instanceof Script)\n    ) {\n      throw new Error('invalid one of: txHashBuf, txOutNum, txOut, script')\n    }\n    this.txIns.push(\n      TxIn.fromProperties(txHashBuf, txOutNum, script, nSequence)\n    )\n    this.uTxOutMap.set(txHashBuf, txOutNum, txOut)\n    return this\n  }\n\n  addSigOperation (txHashBuf, txOutNum, nScriptChunk, type, addressStr, nHashType) {\n    this.sigOperations.addOne(txHashBuf, txOutNum, nScriptChunk, type, addressStr, nHashType)\n    return this\n  }\n\n  /**\n     * Pay \"from\" a pubKeyHash output - in other words, add an input to the\n     * transaction.\n     */\n  inputFromPubKeyHash (txHashBuf, txOutNum, txOut, pubKey, nSequence, nHashType) {\n    if (\n      !Buffer.isBuffer(txHashBuf) ||\n        typeof txOutNum !== 'number' ||\n        !(txOut instanceof TxOut)\n    ) {\n      throw new Error('invalid one of: txHashBuf, txOutNum, txOut')\n    }\n    this.txIns.push(\n      new TxIn()\n        .fromObject({ nSequence })\n        .fromPubKeyHashTxOut(txHashBuf, txOutNum, txOut, pubKey)\n    )\n    this.uTxOutMap.set(txHashBuf, txOutNum, txOut)\n    const addressStr = Address.fromTxOutScript(txOut.script).toString()\n    this.addSigOperation(txHashBuf, txOutNum, 0, 'sig', addressStr, nHashType)\n    this.addSigOperation(txHashBuf, txOutNum, 1, 'pubKey', addressStr)\n    return this\n  }\n\n  /**\n     * An address to send funds to, along with the amount. The amount should be\n     * denominated in satoshis, not bitcoins.\n     */\n  outputToAddress (valueBn, addr) {\n    if (!(addr instanceof Address) || !(valueBn instanceof Bn)) {\n      throw new Error('addr must be an Address, and valueBn must be a Bn')\n    }\n    const script = new Script().fromPubKeyHash(addr.hashBuf)\n    this.outputToScript(valueBn, script)\n    return this\n  }\n\n  /**\n     * A script to send funds to, along with the amount. The amount should be\n     * denominated in satoshis, not bitcoins.\n     */\n  outputToScript (valueBn, script) {\n    if (!(script instanceof Script) || !(valueBn instanceof Bn)) {\n      throw new Error('script must be a Script, and valueBn must be a Bn')\n    }\n    const txOut = TxOut.fromProperties(valueBn, script)\n    this.txOuts.push(txOut)\n    return this\n  }\n\n  buildOutputs () {\n    let outAmountBn = new Bn(0)\n    this.txOuts.forEach(txOut => {\n      if (txOut.valueBn.lt(this.dust) && !txOut.script.isNonSpendable()) {\n        throw new Error('cannot create output lesser than dust')\n      }\n      outAmountBn = outAmountBn.add(txOut.valueBn)\n      this.tx.addTxOut(txOut)\n    })\n    return outAmountBn\n  }\n\n  buildInputs (outAmountBn, extraInputsNum = 0) {\n    let inAmountBn = new Bn(0)\n    for (const txIn of this.txIns) {\n      const txOut = this.uTxOutMap.get(txIn.txHashBuf, txIn.txOutNum)\n      inAmountBn = inAmountBn.add(txOut.valueBn)\n      this.tx.addTxIn(txIn)\n      if (inAmountBn.geq(outAmountBn)) {\n        if (extraInputsNum <= 0) {\n          break\n        }\n        extraInputsNum--\n      }\n    }\n    if (inAmountBn.lt(outAmountBn)) {\n      throw new Error(\n        'not enough funds for outputs: inAmountBn ' +\n            inAmountBn.toNumber() +\n            ' outAmountBn ' +\n            outAmountBn.toNumber()\n      )\n    }\n    return inAmountBn\n  }\n\n  // Thanks to SigOperations, if those are accurately used, then we can\n  // accurately estimate what the size of the transaction is going to be once\n  // all the signatures and public keys are inserted.\n  estimateSize () {\n    // largest possible sig size. final 1 is for pushdata at start. second to\n    // final is sighash byte. the rest are DER encoding.\n    const sigSize = 1 + 1 + 1 + 1 + 32 + 1 + 1 + 32 + 1 + 1\n    // length of script, y odd, x value - assumes compressed public key\n    const pubKeySize = 1 + 1 + 33\n\n    let size = this.tx.toBuffer().length\n\n    this.tx.txIns.forEach((txIn) => {\n      const { txHashBuf, txOutNum } = txIn\n      const sigOperations = this.sigOperations.get(txHashBuf, txOutNum)\n      sigOperations.forEach((obj) => {\n        const { nScriptChunk, type } = obj\n        const script = new Script([txIn.script.chunks[nScriptChunk]])\n        const scriptSize = script.toBuffer().length\n        size -= scriptSize\n        if (type === 'sig') {\n          size += sigSize\n        } else if (obj.type === 'pubKey') {\n          size += pubKeySize\n        } else {\n          throw new Error('unsupported sig operations type')\n        }\n      })\n    })\n\n    // size = size + sigSize * this.tx.txIns.length\n    size = size + 1 // assume txInsVi increases by 1 byte\n    return Math.round(size)\n  }\n\n  estimateFee (extraFeeAmount = new Bn(0)) {\n    // old style rounding up per kb - pays too high fees:\n    // const fee = Math.ceil(this.estimateSize() / 1000) * this.feePerKbNum\n\n    // new style pays lower fees - rounds up to satoshi, not per kb:\n    const fee = Math.ceil(this.estimateSize() / 1000 * this.feePerKbNum)\n\n    return new Bn(fee).add(extraFeeAmount)\n  }\n\n  /**\n     * Builds the transaction and adds the appropriate fee by subtracting from\n     * the change output. Note that by default the TxBuilder will use as many\n     * inputs as necessary to pay the output amounts and the required fee. The\n     * TxBuilder will not necessarily us all the inputs. To force the TxBuilder\n     * to use all the inputs (such as if you wish to spend the entire balance\n     * of a wallet), set the argument useAllInputs = true.\n     */\n  build (opts = { useAllInputs: false }) {\n    let minFeeAmountBn\n    if (this.txIns.length <= 0) {\n      throw Error('tx-builder number of inputs must be greater than 0')\n    }\n    if (!this.changeScript) {\n      throw new Error('must specify change script to use build method')\n    }\n    for (\n      let extraInputsNum = opts.useAllInputs ? this.txIns.length - 1 : 0;\n      extraInputsNum < this.txIns.length;\n      extraInputsNum++\n    ) {\n      this.tx = new Tx()\n      const outAmountBn = this.buildOutputs()\n      const changeTxOut = TxOut.fromProperties(new Bn(0), this.changeScript)\n      this.tx.addTxOut(changeTxOut)\n\n      let inAmountBn\n      try {\n        inAmountBn = this.buildInputs(outAmountBn, extraInputsNum)\n      } catch (err) {\n        if (err.message.includes('not enough funds for outputs')) {\n          throw new Error('unable to gather enough inputs for outputs and fee')\n        } else {\n          throw err\n        }\n      }\n\n      // Set change amount from inAmountBn - outAmountBn\n      this.changeAmountBn = inAmountBn.sub(outAmountBn)\n      changeTxOut.valueBn = this.changeAmountBn\n\n      minFeeAmountBn = this.estimateFee()\n      if (\n        this.changeAmountBn.geq(minFeeAmountBn) &&\n          this.changeAmountBn.sub(minFeeAmountBn).gt(this.dust)\n      ) {\n        break\n      }\n    }\n    if (this.changeAmountBn.geq(minFeeAmountBn)) {\n      // Subtract fee from change\n      this.feeAmountBn = minFeeAmountBn\n      this.changeAmountBn = this.changeAmountBn.sub(this.feeAmountBn)\n      this.tx.txOuts[this.tx.txOuts.length - 1].valueBn = this.changeAmountBn\n\n      if (this.changeAmountBn.lt(this.dust)) {\n        if (this.dustChangeToFees) {\n          // Remove the change amount since it is less than dust and the\n          // builder has requested dust be sent to fees.\n          this.tx.txOuts.pop()\n          this.tx.txOutsVi = VarInt.fromNumber(this.tx.txOutsVi.toNumber() - 1)\n          this.feeAmountBn = this.feeAmountBn.add(this.changeAmountBn)\n          this.changeAmountBn = new Bn(0)\n        } else {\n          throw new Error('unable to create change amount greater than dust')\n        }\n      }\n\n      this.tx.nLockTime = this.nLockTime\n      this.tx.versionBytesNum = this.versionBytesNum\n      if (this.tx.txOuts.length === 0) {\n        throw new Error(\n          'outputs length is zero - unable to create any outputs greater than dust'\n        )\n      }\n      return this\n    } else {\n      throw new Error('unable to gather enough inputs for outputs and fee')\n    }\n  }\n\n  // BIP 69 sorting. call after build() but before sign()\n  sort () {\n    this.tx.sort()\n    return this\n  }\n\n  /**\n     * Check if all signatures are present in a multisig input script.\n     */\n  static allSigsPresent (m, script) {\n    // The first element is a Famous MultiSig Bug OP_0, and last element is the\n    // redeemScript. The rest are signatures.\n    let present = 0\n    for (let i = 1; i < script.chunks.length - 1; i++) {\n      if (script.chunks[i].buf) {\n        present++\n      }\n    }\n    return present === m\n  }\n\n  /**\n     * Remove blank signatures in a multisig input script.\n     */\n  static removeBlankSigs (script) {\n    // The first element is a Famous MultiSig Bug OP_0, and last element is the\n    // redeemScript. The rest are signatures.\n    script = new Script(script.chunks.slice()) // copy the script\n    for (let i = 1; i < script.chunks.length - 1; i++) {\n      if (!script.chunks[i].buf) {\n        script.chunks.splice(i, 1) // remove ith element\n      }\n    }\n    return script\n  }\n\n  fillSig (nIn, nScriptChunk, sig) {\n    const txIn = this.tx.txIns[nIn]\n    txIn.script.chunks[nScriptChunk] = new Script().writeBuffer(\n      sig.toTxFormat()\n    ).chunks[0]\n    txIn.scriptVi = VarInt.fromNumber(txIn.script.toBuffer().length)\n    return this\n  }\n\n  /**\n     * Sign an input, but do not fill the signature into the transaction. Return\n     * the signature.\n     *\n     * For a normal transaction, subScript is usually the scriptPubKey. If\n     * you're not normal because you're using OP_CODESEPARATORs, you know what\n     * to do.\n     */\n  getSig (keyPair, nHashType = Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID, nIn, subScript, flags = Tx.SCRIPT_ENABLE_SIGHASH_FORKID) {\n    let valueBn\n    if (\n      nHashType & Sig.SIGHASH_FORKID &&\n        flags & Tx.SCRIPT_ENABLE_SIGHASH_FORKID\n    ) {\n      const txHashBuf = this.tx.txIns[nIn].txHashBuf\n      const txOutNum = this.tx.txIns[nIn].txOutNum\n      const txOut = this.uTxOutMap.get(txHashBuf, txOutNum)\n      if (!txOut) {\n        throw new Error('for SIGHASH_FORKID must provide UTXOs')\n      }\n      valueBn = txOut.valueBn\n    }\n    return this.tx.sign(keyPair, nHashType, nIn, subScript, valueBn, flags, this.hashCache)\n  }\n\n  /**\n     * Asynchronously sign an input in a worker, but do not fill the signature\n     * into the transaction. Return the signature.\n     */\n  asyncGetSig (keyPair, nHashType = Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID, nIn, subScript, flags = Tx.SCRIPT_ENABLE_SIGHASH_FORKID) {\n    let valueBn\n    if (\n      nHashType & Sig.SIGHASH_FORKID &&\n        flags & Tx.SCRIPT_ENABLE_SIGHASH_FORKID\n    ) {\n      const txHashBuf = this.tx.txIns[nIn].txHashBuf\n      const txOutNum = this.tx.txIns[nIn].txOutNum\n      const txOut = this.uTxOutMap.get(txHashBuf, txOutNum)\n      if (!txOut) {\n        throw new Error('for SIGHASH_FORKID must provide UTXOs')\n      }\n      valueBn = txOut.valueBn\n    }\n    return this.tx.asyncSign(\n      keyPair,\n      nHashType,\n      nIn,\n      subScript,\n      valueBn,\n      flags,\n      this.hashCache\n    )\n  }\n\n  /**\n     * Sign ith input with keyPair and insert the signature into the transaction.\n     * This method only works for some standard transaction types. For\n     * non-standard transaction types, use getSig.\n     */\n  signTxIn (nIn, keyPair, txOut, nScriptChunk, nHashType = Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID, flags = Tx.SCRIPT_ENABLE_SIGHASH_FORKID) {\n    const txIn = this.tx.txIns[nIn]\n    const script = txIn.script\n    if (nScriptChunk === undefined && script.isPubKeyHashIn()) {\n      nScriptChunk = 0\n    }\n    if (nScriptChunk === undefined) {\n      throw new Error('cannot sign unknown script type for input ' + nIn)\n    }\n    const txHashBuf = txIn.txHashBuf\n    const txOutNum = txIn.txOutNum\n    if (!txOut) {\n      txOut = this.uTxOutMap.get(txHashBuf, txOutNum)\n    }\n    const outScript = txOut.script\n    const subScript = outScript // true for standard script types\n    const sig = this.getSig(keyPair, nHashType, nIn, subScript, flags, this.hashCache)\n    this.fillSig(nIn, nScriptChunk, sig)\n    return this\n  }\n\n  /**\n     * Asynchronously sign ith input with keyPair in a worker and insert the\n     * signature into the transaction.  This method only works for some standard\n     * transaction types. For non-standard transaction types, use asyncGetSig.\n     */\n  async asyncSignTxIn (nIn, keyPair, txOut, nScriptChunk, nHashType = Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID, flags = Tx.SCRIPT_ENABLE_SIGHASH_FORKID) {\n    const txIn = this.tx.txIns[nIn]\n    const script = txIn.script\n    if (nScriptChunk === undefined && script.isPubKeyHashIn()) {\n      nScriptChunk = 0\n    }\n    if (nScriptChunk === undefined) {\n      throw new Error('cannot sign unknown script type for input ' + nIn)\n    }\n    const txHashBuf = txIn.txHashBuf\n    const txOutNum = txIn.txOutNum\n    if (!txOut) {\n      txOut = this.uTxOutMap.get(txHashBuf, txOutNum)\n    }\n    const outScript = txOut.script\n    const subScript = outScript // true for standard script types\n    const sig = await this.asyncGetSig(keyPair, nHashType, nIn, subScript, flags, this.hashCache)\n    this.fillSig(nIn, nScriptChunk, sig)\n    return this\n  }\n\n  signWithKeyPairs (keyPairs) {\n    // produce map of addresses to private keys\n    const addressStrMap = {}\n    for (const keyPair of keyPairs) {\n      const addressStr = Address.fromPubKey(keyPair.pubKey).toString()\n      addressStrMap[addressStr] = keyPair\n    }\n    // loop through all inputs\n    for (const nIn in this.tx.txIns) {\n      const txIn = this.tx.txIns[nIn]\n      // for each input, use sigOperations to get list of signatures and pubkeys\n      // to be produced and inserted\n      const arr = this.sigOperations.get(txIn.txHashBuf, txIn.txOutNum)\n      for (const obj of arr) {\n        // for each pubkey, get the privkey from the privkey map and sign the input\n        const { nScriptChunk, type, addressStr, nHashType } = obj\n        const keyPair = addressStrMap[addressStr]\n        if (!keyPair) {\n          obj.log = `cannot find keyPair for addressStr ${addressStr}`\n          continue\n        }\n        const txOut = this.uTxOutMap.get(txIn.txHashBuf, txIn.txOutNum)\n        if (type === 'sig') {\n          this.signTxIn(nIn, keyPair, txOut, nScriptChunk, nHashType)\n          obj.log = 'successfully inserted signature'\n        } else if (type === 'pubKey') {\n          txIn.script.chunks[nScriptChunk] = new Script().writeBuffer(\n            keyPair.pubKey.toBuffer()\n          ).chunks[0]\n          txIn.setScript(txIn.script)\n          obj.log = 'successfully inserted public key'\n        } else {\n          obj.log = `cannot perform operation of type ${type}`\n          continue\n        }\n      }\n    }\n    return this\n  }\n}\n\nexport { TxBuilder }\n","/**\n * Transaction Verifier\n * ====================\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport { Block } from './block'\nimport { Interp } from './interp'\nimport { Struct } from './struct'\nimport { Tx } from './tx'\nimport { Workers } from './workers'\n\nclass TxVerifier extends Struct {\n  constructor (tx, txOutMap, errStr, interp) {\n    super({ tx, txOutMap, errStr, interp })\n  }\n\n  /**\n     * Verifies that the transaction is valid both by performing basic checks, such\n     * as ensuring that no two inputs are the same, as well as by verifying every\n     * script. The two checks are checkStr, which is analagous to bitcoind's\n     * CheckTransaction, and verifyStr, which runs the script interpreter.\n     *\n     * This does NOT check that any possible claimed fees are accurate; checking\n     * that the fees are accurate requires checking that the input transactions are\n     * valid, which is not performed by this test. That check is done with the\n     * normal verify function.\n     */\n  verify (flags = Interp.SCRIPT_ENABLE_SIGHASH_FORKID) {\n    return !this.checkStr() && !this.verifyStr(flags)\n  }\n\n  /*\n     * Returns true if the transaction was verified successfully (that is no\n     * error was found), and false otherwise. In case an error was found the\n     * error message can be accessed by calling this.getDebugString().\n     */\n  async asyncVerify (flags) {\n    const verifyStr = await this.asyncVerifyStr(flags)\n    return !this.checkStr() && !verifyStr\n  }\n\n  /**\n     * Convenience method to verify a transaction.\n     */\n  static verify (tx, txOutMap, flags) {\n    return new TxVerifier(tx, txOutMap).verify(flags)\n  }\n\n  static asyncVerify (tx, txOutMap, flags) {\n    return new TxVerifier(tx, txOutMap).asyncVerify(flags)\n  }\n\n  /**\n     * Check that a transaction passes basic sanity tests. If not, return a string\n     * describing the error. This function contains the same logic as\n     * CheckTransaction in bitcoin core.\n     */\n  checkStr () {\n    // Basic checks that don't depend on any context\n    if (this.tx.txIns.length === 0 || this.tx.txInsVi.toNumber() === 0) {\n      this.errStr = 'transaction txIns empty'\n      return this.errStr\n    }\n    if (this.tx.txOuts.length === 0 || this.tx.txOutsVi.toNumber() === 0) {\n      this.errStr = 'transaction txOuts empty'\n      return this.errStr\n    }\n\n    // Size limits\n    if (this.tx.toBuffer().length > Block.MAX_BLOCK_SIZE) {\n      this.errStr = 'transaction over the maximum block size'\n      return this.errStr\n    }\n\n    // Check for negative or overflow output values\n    let valueoutbn = new Bn(0)\n    for (let i = 0; i < this.tx.txOuts.length; i++) {\n      const txOut = this.tx.txOuts[i]\n      if (txOut.valueBn.lt(0)) {\n        this.errStr = 'transaction txOut ' + i + ' negative'\n        return this.errStr\n      }\n      if (txOut.valueBn.gt(Tx.MAX_MONEY)) {\n        this.errStr = 'transaction txOut ' + i + ' greater than MAX_MONEY'\n        return this.errStr\n      }\n      valueoutbn = valueoutbn.add(txOut.valueBn)\n      if (valueoutbn.gt(Tx.MAX_MONEY)) {\n        this.errStr =\n            'transaction txOut ' + i + ' total output greater than MAX_MONEY'\n        return this.errStr\n      }\n    }\n\n    // Check for duplicate inputs\n    const txInmap = {}\n    for (let i = 0; i < this.tx.txIns.length; i++) {\n      const txIn = this.tx.txIns[i]\n      const inputid = txIn.txHashBuf.toString('hex') + ':' + txIn.txOutNum\n      if (txInmap[inputid] !== undefined) {\n        this.errStr = 'transaction input ' + i + ' duplicate input'\n        return this.errStr\n      }\n      txInmap[inputid] = true\n    }\n\n    if (this.tx.isCoinbase()) {\n      const buf = this.tx.txIns[0].script.toBuffer()\n      if (buf.length < 2 || buf.length > 100) {\n        this.errStr = 'coinbase trasaction script size invalid'\n        return this.errStr\n      }\n    } else {\n      for (let i = 0; i < this.tx.txIns.length; i++) {\n        if (this.tx.txIns[i].hasNullInput()) {\n          this.errStr = 'transaction input ' + i + ' has null input'\n          return this.errStr\n        }\n      }\n    }\n    return false\n  }\n\n  /**\n     * verify the transaction inputs by running the script interpreter. Returns a\n     * string of the script interpreter is invalid, otherwise returns false.\n     */\n  verifyStr (flags) {\n    for (let i = 0; i < this.tx.txIns.length; i++) {\n      if (!this.verifyNIn(i, flags)) {\n        this.errStr = 'input ' + i + ' failed script verify'\n        return this.errStr\n      }\n    }\n    return false\n  }\n\n  async asyncVerifyStr (flags) {\n    for (let i = 0; i < this.tx.txIns.length; i++) {\n      const verifyNIn = await this.asyncVerifyNIn(i, flags)\n      if (!verifyNIn) {\n        this.errStr = 'input ' + i + ' failed script verify'\n        return this.errStr\n      }\n    }\n    return false\n  }\n\n  /**\n     * Verify a particular input by running the script interpreter. Returns true if\n     * the input is valid, false otherwise.\n     */\n  verifyNIn (nIn, flags) {\n    const txIn = this.tx.txIns[nIn]\n    const scriptSig = txIn.script\n    const txOut = this.txOutMap.get(txIn.txHashBuf, txIn.txOutNum)\n    if (!txOut) {\n      console.log('output ' + txIn.txOutNum + ' not found')\n      return false\n    }\n    const scriptPubKey = txOut.script\n    const valueBn = txOut.valueBn\n    this.interp = new Interp()\n    const verified = this.interp.verify(\n      scriptSig,\n      scriptPubKey,\n      this.tx,\n      nIn,\n      flags,\n      valueBn\n    )\n    return verified\n  }\n\n  async asyncVerifyNIn (nIn, flags) {\n    const txIn = this.tx.txIns[nIn]\n    const scriptSig = txIn.script\n    const txOut = this.txOutMap.get(txIn.txHashBuf, txIn.txOutNum)\n    if (!txOut) {\n      console.log('output ' + txIn.txOutNum + ' not found')\n      return false\n    }\n    const scriptPubKey = txOut.script\n    const valueBn = txOut.valueBn\n    this.interp = new Interp()\n    const workersResult = await Workers.asyncObjectMethod(\n      this.interp,\n      'verify',\n      [scriptSig, scriptPubKey, this.tx, nIn, flags, valueBn]\n    )\n    const verified = JSON.parse(workersResult.resbuf.toString())\n    return verified\n  }\n\n  getDebugObject () {\n    return {\n      errStr: this.errStr,\n      interpFailure: this.interp ? this.interp.getDebugObject() : undefined\n    }\n  }\n\n  getDebugString () {\n    return JSON.stringify(this.getDebugObject(), null, 2)\n  }\n}\n\nexport { TxVerifier }\n","/**\n * Aes (experimental)\n * ==================\n *\n * Advanced Encryption Standard (Aes). This is a low-level tool for encrypting\n * or decrypting blocks of data. There is almost never a reason to use this -\n * don't use it unless you need to encrypt or decrypt individual blocks.\n */\n'use strict'\n\nimport _Aes from 'aes'\n\nclass Aes { }\n\nAes.encrypt = function (messageBuf, keyBuf) {\n  const key = Aes.buf2Words(keyBuf)\n  const message = Aes.buf2Words(messageBuf)\n  const a = new _Aes(key)\n  const enc = a.encrypt(message)\n  const encBuf = Aes.words2Buf(enc)\n  return encBuf\n}\n\nAes.decrypt = function (encBuf, keyBuf) {\n  const enc = Aes.buf2Words(encBuf)\n  const key = Aes.buf2Words(keyBuf)\n  const a = new _Aes(key)\n  const message = a.decrypt(enc)\n  const messageBuf = Aes.words2Buf(message)\n  return messageBuf\n}\n\nAes.buf2Words = function (buf) {\n  if (buf.length % 4) {\n    throw new Error('buf length must be a multiple of 4')\n  }\n\n  const words = []\n\n  for (let i = 0; i < buf.length / 4; i++) {\n    words.push(buf.readUInt32BE(i * 4))\n  }\n\n  return words\n}\n\nAes.words2Buf = function (words) {\n  const buf = Buffer.alloc(words.length * 4)\n\n  for (let i = 0; i < words.length; i++) {\n    buf.writeUInt32BE(words[i], i * 4)\n  }\n\n  return buf\n}\n\nexport { Aes }\n","/**\n * Cbc\n * ===\n *\n * Cipher Block Chaining (Cbc). This is a low-level tool for chaining multiple\n * encrypted blocks together, usually with Aes. This is a low-level tool that\n * does not include authentication. You should only be using this if you have\n * authentication at another step. It is best combined with Hmac.\n *\n * http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher-block_chaining_.28Cbc.29\n */\n'use strict'\n\nimport { cmp } from './cmp'\n\nclass Cbc {}\n\nCbc.buf2BlocksBuf = function (buf, blockSize) {\n  const bytesize = blockSize / 8\n  const blockBufs = []\n\n  for (let i = 0; i <= buf.length / bytesize; i++) {\n    let blockBuf = buf.slice(i * bytesize, i * bytesize + bytesize)\n\n    if (blockBuf.length < blockSize) {\n      blockBuf = Cbc.pkcs7Pad(blockBuf, blockSize)\n    }\n\n    blockBufs.push(blockBuf)\n  }\n\n  return blockBufs\n}\n\nCbc.blockBufs2Buf = function (blockBufs) {\n  let last = blockBufs[blockBufs.length - 1]\n  last = Cbc.pkcs7Unpad(last)\n  blockBufs[blockBufs.length - 1] = last\n\n  const buf = Buffer.concat(blockBufs)\n\n  return buf\n}\n\nCbc.encrypt = function (messageBuf, ivBuf, blockCipher, cipherKeyBuf) {\n  const blockSize = ivBuf.length * 8\n  const blockBufs = Cbc.buf2BlocksBuf(messageBuf, blockSize)\n  const encBufs = Cbc.encryptBlocks(blockBufs, ivBuf, blockCipher, cipherKeyBuf)\n  const encBuf = Buffer.concat(encBufs)\n  return encBuf\n}\n\nCbc.decrypt = function (encBuf, ivBuf, blockCipher, cipherKeyBuf) {\n  const bytesize = ivBuf.length\n  const encBufs = []\n  for (let i = 0; i < encBuf.length / bytesize; i++) {\n    encBufs.push(encBuf.slice(i * bytesize, i * bytesize + bytesize))\n  }\n  const blockBufs = Cbc.decryptBlocks(encBufs, ivBuf, blockCipher, cipherKeyBuf)\n  const buf = Cbc.blockBufs2Buf(blockBufs)\n  return buf\n}\n\nCbc.encryptBlock = function (blockBuf, ivBuf, blockCipher, cipherKeyBuf) {\n  const xorbuf = Cbc.xorBufs(blockBuf, ivBuf)\n  const encBuf = blockCipher.encrypt(xorbuf, cipherKeyBuf)\n  return encBuf\n}\n\nCbc.decryptBlock = function (encBuf, ivBuf, blockCipher, cipherKeyBuf) {\n  const xorbuf = blockCipher.decrypt(encBuf, cipherKeyBuf)\n  const blockBuf = Cbc.xorBufs(xorbuf, ivBuf)\n  return blockBuf\n}\n\nCbc.encryptBlocks = function (blockBufs, ivBuf, blockCipher, cipherKeyBuf) {\n  const encBufs = []\n\n  for (let i = 0; i < blockBufs.length; i++) {\n    const blockBuf = blockBufs[i]\n    const encBuf = Cbc.encryptBlock(blockBuf, ivBuf, blockCipher, cipherKeyBuf)\n\n    encBufs.push(encBuf)\n\n    ivBuf = encBuf\n  }\n\n  return encBufs\n}\n\nCbc.decryptBlocks = function (encBufs, ivBuf, blockCipher, cipherKeyBuf) {\n  const blockBufs = []\n\n  for (let i = 0; i < encBufs.length; i++) {\n    const encBuf = encBufs[i]\n    const blockBuf = Cbc.decryptBlock(encBuf, ivBuf, blockCipher, cipherKeyBuf)\n\n    blockBufs.push(blockBuf)\n\n    ivBuf = encBuf\n  }\n\n  return blockBufs\n}\n\nCbc.pkcs7Pad = function (buf, blockSize) {\n  const bytesize = blockSize / 8\n  const padbytesize = bytesize - buf.length\n  const pad = Buffer.alloc(padbytesize)\n  pad.fill(padbytesize)\n  const paddedbuf = Buffer.concat([buf, pad])\n  return paddedbuf\n}\n\nCbc.pkcs7Unpad = function (paddedbuf) {\n  const padlength = paddedbuf[paddedbuf.length - 1]\n  const padbuf = paddedbuf.slice(paddedbuf.length - padlength, paddedbuf.length)\n  const padbuf2 = Buffer.alloc(padlength)\n  padbuf2.fill(padlength)\n  if (!cmp(padbuf, padbuf2)) {\n    throw new Error('invalid padding')\n  }\n  return paddedbuf.slice(0, paddedbuf.length - padlength)\n}\n\nCbc.xorBufs = function (buf1, buf2) {\n  if (buf1.length !== buf2.length) {\n    throw new Error('bufs must have the same length')\n  }\n\n  const buf = Buffer.alloc(buf1.length)\n\n  for (let i = 0; i < buf1.length; i++) {\n    buf[i] = buf1[i] ^ buf2[i]\n  }\n\n  return buf\n}\n\nexport { Cbc }\n","/**\n * Aescbc (experimental)\n * =====================\n *\n * This is a convenience class for using Aes with Cbc. This is a low-level tool\n * that does not include authentication. You should only use this if you are\n * authenticating your data somehow else.\n */\n'use strict'\n\nimport { Aes } from './aes'\nimport { Cbc } from './cbc'\nimport { Random } from './random'\n\nclass Aescbc { }\n\nAescbc.encrypt = function (messageBuf, cipherKeyBuf, ivBuf, concatIvBuf = true) {\n  ivBuf = ivBuf || Random.getRandomBuffer(128 / 8)\n  const ctBuf = Cbc.encrypt(messageBuf, ivBuf, Aes, cipherKeyBuf)\n  if (concatIvBuf) {\n    return Buffer.concat([ivBuf, ctBuf])\n  } else {\n    return ctBuf\n  }\n}\n\nAescbc.decrypt = function (encBuf, cipherKeyBuf, ivBuf = false) {\n  if (!ivBuf) {\n    const ivBuf = encBuf.slice(0, 128 / 8)\n    const ctBuf = encBuf.slice(128 / 8)\n    return Cbc.decrypt(ctBuf, ivBuf, Aes, cipherKeyBuf)\n  } else {\n    const ctBuf = encBuf\n    return Cbc.decrypt(ctBuf, ivBuf, Aes, cipherKeyBuf)\n  }\n}\n\nexport { Aescbc }\n","/**\n * Ach (Aes+Cbc+Hmac) (experimental)\n * =================================\n *\n * An \"encrypt-then-MAC\" that uses Aes, Cbc and SHA256 Hmac. This is suitable\n * for general encryption of data.\n *\n * The encrypted data takes the form:\n * (256 bit hmac)(128 bit iv)(128+ bits Aes+Cbc encrypted message)\n */\n'use strict'\n\nimport { Aescbc } from './aescbc'\nimport { Hash } from './hash'\nimport { Random } from './random'\nimport { Workers } from './workers'\nimport { cmp } from './cmp'\n\nclass Ach { }\n\nAch.encrypt = function (messageBuf, cipherKeyBuf, ivBuf) {\n  const encBuf = Aescbc.encrypt(messageBuf, cipherKeyBuf, ivBuf)\n  const hmacbuf = Hash.sha256Hmac(encBuf, cipherKeyBuf)\n  return Buffer.concat([hmacbuf, encBuf])\n}\n\nAch.asyncEncrypt = async function (messageBuf, cipherKeyBuf, ivBuf) {\n  if (!ivBuf) {\n    ivBuf = Random.getRandomBuffer(128 / 8)\n  }\n  const args = [messageBuf, cipherKeyBuf, ivBuf]\n  const workersResult = await Workers.asyncClassMethod(Ach, 'encrypt', args)\n  return workersResult.resbuf\n}\n\nAch.decrypt = function (encBuf, cipherKeyBuf) {\n  if (encBuf.length < (256 + 128 + 128) / 8) {\n    throw new Error(\n      'The encrypted data must be at least 256+128+128 bits, which is the length of the Hmac plus the iv plus the smallest encrypted data size'\n    )\n  }\n  const hmacbuf = encBuf.slice(0, 256 / 8)\n  encBuf = encBuf.slice(256 / 8, encBuf.length)\n  const hmacbuf2 = Hash.sha256Hmac(encBuf, cipherKeyBuf)\n  if (!cmp(hmacbuf, hmacbuf2)) {\n    throw new Error(\n      'Message authentication failed - Hmacs are not equivalent'\n    )\n  }\n  return Aescbc.decrypt(encBuf, cipherKeyBuf)\n}\n\nAch.asyncDecrypt = async function (encBuf, cipherKeyBuf) {\n  const args = [encBuf, cipherKeyBuf]\n  const workersResult = await Workers.asyncClassMethod(Ach, 'decrypt', args)\n  return workersResult.resbuf\n}\n\nexport { Ach }\n","/**\n * Ecies\n * =====\n */\n'use strict'\n\nimport { Aescbc } from './aescbc'\nimport { cmp } from './cmp'\nimport { Hash } from './hash'\nimport { KeyPair } from './key-pair'\nimport { Point } from './point'\nimport { PubKey } from './pub-key'\nimport { Random } from './random'\nimport { Workers } from './workers'\n\nclass Ecies {}\n\nEcies.ivkEkM = function (privKey, pubKey) {\n  const r = privKey.bn\n  const KB = pubKey.point\n  const P = KB.mul(r)\n  const S = new PubKey(P)\n  const Sbuf = S.toBuffer()\n  const hash = Hash.sha512(Sbuf)\n  return {\n    iv: hash.slice(0, 16),\n    kE: hash.slice(16, 32),\n    kM: hash.slice(32, 64)\n  }\n}\n\nEcies.electrumEncrypt = function (messageBuf, toPubKey, fromKeyPair, noKey = false) {\n  if (!Buffer.isBuffer(messageBuf)) {\n    throw new Error('messageBuf must be a buffer')\n  }\n  let Rbuf\n  if (fromKeyPair === null) {\n    fromKeyPair = KeyPair.fromRandom()\n  }\n  if (!noKey) {\n    Rbuf = fromKeyPair.pubKey.toDer(true)\n  }\n  const { iv, kE, kM } = Ecies.ivkEkM(fromKeyPair.privKey, toPubKey)\n  const ciphertext = Aescbc.encrypt(messageBuf, kE, iv, false)\n  const BIE1 = Buffer.from('BIE1')\n  let encBuf\n  if (Rbuf) {\n    encBuf = Buffer.concat([BIE1, Rbuf, ciphertext])\n  } else {\n    encBuf = Buffer.concat([BIE1, ciphertext])\n  }\n  const hmac = Hash.sha256Hmac(encBuf, kM)\n  return Buffer.concat([encBuf, hmac])\n}\n\nEcies.electrumDecrypt = function (encBuf, toPrivKey, fromPubKey = null) {\n  if (!Buffer.isBuffer(encBuf)) {\n    throw new Error('encBuf must be a buffer')\n  }\n  const tagLength = 32\n\n  const magic = encBuf.slice(0, 4)\n  if (!magic.equals(Buffer.from('BIE1'))) {\n    throw new Error('Invalid Magic')\n  }\n  let offset = 4\n  if (fromPubKey === null) {\n    // BIE1 use compressed public key, length is always 33.\n    const pub = encBuf.slice(4, 37)\n    fromPubKey = PubKey.fromDer(pub)\n    offset = 37\n  }\n  const { iv, kE, kM } = Ecies.ivkEkM(toPrivKey, fromPubKey)\n  const ciphertext = encBuf.slice(offset, encBuf.length - tagLength)\n  const hmac = encBuf.slice(encBuf.length - tagLength, encBuf.length)\n\n  const hmac2 = Hash.sha256Hmac(encBuf.slice(0, encBuf.length - tagLength), kM)\n\n  if (!hmac.equals(hmac2)) {\n    throw new Error('Invalid checksum')\n  }\n  return Aescbc.decrypt(ciphertext, kE, iv)\n}\n\nEcies.bitcoreEncrypt = function (messageBuf, toPubKey, fromKeyPair, ivBuf) {\n  if (!fromKeyPair) {\n    fromKeyPair = KeyPair.fromRandom()\n  }\n  const r = fromKeyPair.privKey.bn\n  const RPubKey = fromKeyPair.pubKey\n  const RBuf = RPubKey.toDer(true)\n  const KB = toPubKey.point\n  const P = KB.mul(r)\n  const S = P.getX()\n  const Sbuf = S.toBuffer({ size: 32 })\n  const kEkM = Hash.sha512(Sbuf)\n  const kE = kEkM.slice(0, 32)\n  const kM = kEkM.slice(32, 64)\n  const c = Aescbc.encrypt(messageBuf, kE, ivBuf)\n  const d = Hash.sha256Hmac(c, kM)\n  const encBuf = Buffer.concat([RBuf, c, d])\n  return encBuf\n}\n\nEcies.asyncBitcoreEncrypt = async function (\n  messageBuf,\n  toPubKey,\n  fromKeyPair,\n  ivBuf\n) {\n  if (!fromKeyPair) {\n    fromKeyPair = await KeyPair.asyncFromRandom()\n  }\n  if (!ivBuf) {\n    ivBuf = Random.getRandomBuffer(128 / 8)\n  }\n  const args = [messageBuf, toPubKey, fromKeyPair, ivBuf]\n  const workersResult = await Workers.asyncClassMethod(Ecies, 'bitcoreEncrypt', args)\n  return workersResult.resbuf\n}\n\nEcies.bitcoreDecrypt = function (encBuf, toPrivKey) {\n  const kB = toPrivKey.bn\n  const fromPubKey = PubKey.fromDer(encBuf.slice(0, 33))\n  const R = fromPubKey.point\n  const P = R.mul(kB)\n  if (P.eq(new Point())) {\n    throw new Error('P equals 0')\n  }\n  const S = P.getX()\n  const Sbuf = S.toBuffer({ size: 32 })\n  const kEkM = Hash.sha512(Sbuf)\n  const kE = kEkM.slice(0, 32)\n  const kM = kEkM.slice(32, 64)\n  const c = encBuf.slice(33, encBuf.length - 32)\n  const d = encBuf.slice(encBuf.length - 32, encBuf.length)\n  const d2 = Hash.sha256Hmac(c, kM)\n  if (!cmp(d, d2)) {\n    throw new Error('Invalid checksum')\n  }\n  const messageBuf = Aescbc.decrypt(c, kE)\n  return messageBuf\n}\n\nEcies.asyncBitcoreDecrypt = async function (encBuf, toPrivKey) {\n  const args = [encBuf, toPrivKey]\n  const workersResult = await Workers.asyncClassMethod(Ecies, 'bitcoreDecrypt', args)\n  return workersResult.resbuf\n}\n\nexport { Ecies }\n","/**\n * bsv\n * ===\n *\n * entry.js is the entry point for a the js bundlers.\n * Webpack and microbundlers, both start use this file as\n * the entry point to bundle the entire library.\n */\nimport aes from 'aes'\nimport bnjs from 'bn.js'\nimport bs58 from 'bs58'\n\nimport elliptic from 'bitcoin-elliptic'\nimport hashjs from 'hash.js'\nimport pbkdf2 from 'pbkdf2'\n\n// version string.\nimport pkgInfo from './package.json'\n\n// Dependencies, subject to change.\nconst deps = {\n  aes,\n  bnjs,\n  bs58,\n  elliptic,\n  hashjs,\n  pbkdf2,\n  Buffer\n}\n\nexport { deps }\nconst version = pkgInfo.version\nexport { version }\n\n// Main bitcoin library - bitcoin protocols, standards, cryptography, and\n// utilities.\nexport * from './lib/address'\nexport * from './lib/bip-32'\nexport * from './lib/bip-39'\nexport * from './lib/bip-39-words'\nexport * from './lib/bn'\nexport * from './lib/br'\nexport * from './lib/bsm'\nexport * from './lib/bw'\nexport * from './lib/base-58'\nexport * from './lib/base-58-check'\nexport * from './lib/block'\nexport * from './lib/block-header'\nexport * from './lib/constants'\nexport * from './lib/ecdsa'\nexport * from './lib/hash'\nexport * from './lib/interp'\nexport * from './lib/key-pair'\nexport * from './lib/op-code'\nexport * from './lib/point'\nexport * from './lib/priv-key'\nexport * from './lib/pub-key'\nexport * from './lib/random'\nexport * from './lib/script'\nexport * from './lib/sig'\nexport * from './lib/sig-operations'\nexport * from './lib/struct'\nexport * from './lib/tx'\nexport * from './lib/tx-builder'\nexport * from './lib/tx-in'\nexport * from './lib/tx-out'\nexport * from './lib/tx-out-map'\nexport * from './lib/tx-verifier'\nexport * from './lib/var-int'\nexport * from './lib/workers'\nexport * from './lib/workers-result'\nexport * from './lib/cmp'\n\n// Encryption tools. Some bitcoin standards use Aes encryption, so that's why\n// these are available.\nexport * from './lib/ach'\nexport * from './lib/aes'\nexport * from './lib/aescbc'\nexport * from './lib/cbc'\nexport * from './lib/ecies'\n","\n\nmodule.exports = AES;\n\n//@param {Array} key The key as an array of 4, 6 or 8 words.\nfunction AES (key) {\n  if (!this._tables[0][0][0]) this._precompute();\n  \n  var tmp, encKey, decKey;\n  var sbox = this._tables[0][4];\n  var decTable = this._tables[1];\n  var keyLen = key.length; \n  var rcon = 1;\n  \n  if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n    throw new Error(\"invalid aes key size\");\n  }\n  \n  this._key = [encKey = key.slice(0), decKey = []];\n  \n  // schedule encryption keys\n  for (var i = keyLen; i < 4 * keyLen + 28; i++) {\n    tmp = encKey[i-1];\n    \n    // apply sbox\n    if (i % keyLen === 0 || (keyLen === 8 && i % keyLen === 4)) {\n      tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255]<< 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n      \n      // shift rows and add rcon\n      if (i % keyLen === 0) {\n        tmp = tmp << 8 ^ tmp >>> 24 ^ rcon<<24;\n        rcon = rcon << 1 ^ (rcon >> 7) * 283;\n      }\n    }\n    \n    encKey[i] = encKey[i-keyLen] ^ tmp;\n  }\n  \n  // schedule decryption keys\n  for (var j = 0; i; j++, i--) {\n    tmp = encKey[j&3 ? i : i - 4];\n    if (i<=4 || j<4) {\n      decKey[j] = tmp;\n    } else {\n      decKey[j] = decTable[0][sbox[tmp>>>24      ]] ^\n                  decTable[1][sbox[tmp>>16  & 255]] ^\n                  decTable[2][sbox[tmp>>8   & 255]] ^\n                  decTable[3][sbox[tmp      & 255]];\n    }\n  }\n};\n\nAES.prototype = {\n  \n  /**\n   * Encrypt an array of 4 big-endian words.\n   * @param {Array} data The plaintext.\n   * @return {Array} The ciphertext.\n   */\n  encrypt:function (data) { return this._crypt(data, 0); },\n  \n  /**\n   * Decrypt an array of 4 big-endian words.\n   * @param {Array} data The ciphertext.\n   * @return {Array} The plaintext.\n   */\n  decrypt:function (data) { return this._crypt(data, 1); },\n  \n  /**\n   * The expanded S-box and inverse S-box tables.  These will be computed\n   * on the client so that we don't have to send them down the wire.\n   *\n   * There are two tables, _tables[0] is for encryption and\n   * _tables[1] is for decryption.\n   *\n   * The first 4 sub-tables are the expanded S-box with MixColumns.  The\n   * last (_tables[01][4]) is the S-box itself.\n   *\n   * @private\n   */\n  _tables: [\n    [ new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256) ],\n    [ new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256) ]\n  ],\n\n  //Expand the S-box tables.\n  _precompute: function () {\n    var encTable = this._tables[0], decTable = this._tables[1],\n       sbox = encTable[4], sboxInv = decTable[4],\n       i, x, xInv, d=new Uint8Array(256), th=new Uint8Array(256), x2, x4, x8, s, tEnc, tDec;\n\n    // Compute double and third tables\n    for (i = 0; i < 256; i++) {\n      th[( d[i] = i<<1 ^ (i>>7)*283 )^i]=i;\n    }\n   \n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x;\n       \n      // Compute MixColumns\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8*0x1010101 ^ x4*0x10001 ^ x2*0x101 ^ x*0x1010100;\n      tEnc = d[s]*0x101 ^ s*0x1010100;\n       \n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc<<24 ^ tEnc>>>8;\n        decTable[i][s] = tDec = tDec<<24 ^ tDec>>>8;\n      }\n    }\n  },\n  \n  /**\n   * Encryption and decryption core.\n   * @param {Array} input Four words to be encrypted or decrypted.\n   * @param dir The direction, 0 for encrypt and 1 for decrypt.\n   * @return {Array} The four encrypted or decrypted words.\n   * @private\n   */\n  _crypt:function (input, dir) {\n    if (input.length !== 4) {\n      throw new Error(\"invalid aes block size\");\n    }\n    \n    var key = this._key[dir],\n        // state variables a,b,c,d are loaded with pre-whitened data\n        a = input[0]           ^ key[0],\n        b = input[dir ? 3 : 1] ^ key[1],\n        c = input[2]           ^ key[2],\n        d = input[dir ? 1 : 3] ^ key[3],\n        a2, b2, c2,\n        \n        nInnerRounds = key.length/4 - 2,\n        i,\n        kIndex = 4,\n        out = new Uint32Array(4),// <--- this is slower in Node.js, about the same in Chrome */ \n        table = this._tables[dir],\n        \n        // load up the tables\n        t0    = table[0],\n        t1    = table[1],\n        t2    = table[2],\n        t3    = table[3],\n        sbox  = table[4];\n \n    // Inner rounds.  Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = t0[a>>>24] ^ t1[b>>16 & 255] ^ t2[c>>8 & 255] ^ t3[d & 255] ^ key[kIndex];\n      b2 = t0[b>>>24] ^ t1[c>>16 & 255] ^ t2[d>>8 & 255] ^ t3[a & 255] ^ key[kIndex + 1];\n      c2 = t0[c>>>24] ^ t1[d>>16 & 255] ^ t2[a>>8 & 255] ^ t3[b & 255] ^ key[kIndex + 2];\n      d  = t0[d>>>24] ^ t1[a>>16 & 255] ^ t2[b>>8 & 255] ^ t3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a=a2; b=b2; c=c2;\n    }\n        \n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[dir ? 3&-i : i] =\n        sbox[a>>>24      ]<<24 ^ \n        sbox[b>>16  & 255]<<16 ^\n        sbox[c>>8   & 255]<<8  ^\n        sbox[d      & 255]     ^\n        key[kIndex++];\n      a2=a; a=b; b=c; c=d; d=a2;\n    }\n    \n    return out;\n  }\n};\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len,\n                                                       jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n                          bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type !== 'short')\n    throw new Error('invalid curve type')\n  this.curve = new curve.short(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n});\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ?\n        options.k(iter) :\n        new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n  }\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0 && (r[1] & 0x80)) {\n    r = r.slice(1);\n  }\n  if (s[0] === 0 && (s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","module.exports = require('crypto').createHmac\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict'\n\nvar hexRegEx = /([0-9]|[a-f])/gim\n\nmodule.exports = function (input) {\n  return typeof input === 'string' &&\n    (input.match(hexRegEx) || []).length === input.length\n}\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","var native = require('crypto')\n\nvar checkParameters = require('./lib/precondition')\nvar defaultEncoding = require('./lib/default-encoding')\nvar toBuffer = require('./lib/to-buffer')\n\nfunction nativePBKDF2 (password, salt, iterations, keylen, digest, callback) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = 'sha1'\n  }\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n\n  return native.pbkdf2(password, salt, iterations, keylen, digest, callback)\n}\n\nfunction nativePBKDF2Sync (password, salt, iterations, keylen, digest) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n  digest = digest || 'sha1'\n  return native.pbkdf2Sync(password, salt, iterations, keylen, digest)\n}\n\n/* istanbul ignore next */\nif (!native.pbkdf2Sync || native.pbkdf2Sync.toString().indexOf('keylen, digest') === -1) {\n  exports.pbkdf2Sync = require('./lib/sync')\n  exports.pbkdf2 = require('./lib/async')\n\n// native\n} else {\n  exports.pbkdf2Sync = nativePBKDF2Sync\n  exports.pbkdf2 = nativePBKDF2\n}\n","var Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar sync = require('./sync')\nvar toBuffer = require('./to-buffer')\n\nvar ZERO_BUF\nvar subtle = global.crypto && global.crypto.subtle\nvar toBrowser = {\n  sha: 'SHA-1',\n  'sha-1': 'SHA-1',\n  sha1: 'SHA-1',\n  sha256: 'SHA-256',\n  'sha-256': 'SHA-256',\n  sha384: 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  sha512: 'SHA-512'\n}\nvar checks = []\nfunction checkNative (algo) {\n  if (global.process && !global.process.browser) {\n    return Promise.resolve(false)\n  }\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false)\n  }\n  if (checks[algo] !== undefined) {\n    return checks[algo]\n  }\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n    .then(function () {\n      return true\n    }).catch(function () {\n      return false\n    })\n  checks[algo] = prom\n  return prom\n}\n\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\n  return subtle.importKey(\n    'raw', password, { name: 'PBKDF2' }, false, ['deriveBits']\n  ).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3)\n  }).then(function (res) {\n    return Buffer.from(res)\n  })\n}\n\nfunction resolvePromise (promise, callback) {\n  promise.then(function (out) {\n    process.nextTick(function () {\n      callback(null, out)\n    })\n  }, function (e) {\n    process.nextTick(function () {\n      callback(e)\n    })\n  })\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  digest = digest || 'sha1'\n  var algo = toBrowser[digest.toLowerCase()]\n\n  if (!algo || typeof global.Promise !== 'function') {\n    return process.nextTick(function () {\n      var out\n      try {\n        out = sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n      callback(null, out)\n    })\n  }\n\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\n\n    return sync(password, salt, iterations, keylen, digest)\n  }), callback)\n}\n","var defaultEncoding\n/* istanbul ignore next */\nif (process.browser) {\n  defaultEncoding = 'utf-8'\n} else if (process.version) {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\n\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\n} else {\n  defaultEncoding = 'utf-8'\n}\nmodule.exports = defaultEncoding\n","var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nmodule.exports = function (iterations, keylen) {\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n","var sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nvar createHmac = require('create-hmac')\nvar Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar toBuffer = require('./to-buffer')\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n\n  digest = digest || 'sha1'\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = createHmac(digest, password).update(block1).digest()\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = createHmac(digest, password).update(U).digest()\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n","var Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (thing, encoding, name) {\n  if (Buffer.isBuffer(thing)) {\n    return thing\n  } else if (typeof thing === 'string') {\n    return Buffer.from(thing, encoding)\n  } else if (ArrayBuffer.isView(thing)) {\n    return Buffer.from(thing.buffer)\n  } else {\n    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')\n  }\n}\n","module.exports = require('crypto').randomBytes\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","module.exports = require(\"buffer\");;","module.exports = require(\"crypto\");;","module.exports = require(\"util\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(671);\n"],"sourceRoot":""}